{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/about.md","hash":"509fd09ae7a50f7fd4277499af6174fa5fe0047d","modified":1704196795000},{"_id":"source/categories/index.md","hash":"d74dea876104aae5e86f128ddbc114701e5ff5b7","modified":1704196795000},{"_id":"source/_posts/2016个人年度总结.md","hash":"785087f4627c56cf164505571fd9c57c38ea47b0","modified":1704196795000},{"_id":"source/_posts/2020 总结 | 来影 - 柳暗花明又一村.md","hash":"74293ca06c1e57e49dca4bc87a1328eab6a594c3","modified":1704196795000},{"_id":"source/_posts/2021 总结 | 来影 - 我向山走去.md","hash":"37d736f1933b2dd1bbd6f9c9d9404fc82828987c","modified":1704196795000},{"_id":"source/_posts/2022 总结 | 来影 - 若能重来.md","hash":"56b7ffbe098cb50c4b020602574d3e1920f33b56","modified":1704196795000},{"_id":"source/_posts/2023 总结 | 来影 - 顺势而为.md","hash":"c6fcdc5eba87ea413c69627285c2e58650a87ee9","modified":1712479453234},{"_id":"source/_posts/AmdorCmd.md","hash":"1bb573cebc5c328d337887147e3211971b83e805","modified":1704196795000},{"_id":"source/_posts/CSP - 内容安全策略.md","hash":"6be19edd7b37ae8cec1af64acdeea482d2cc71fb","modified":1704196795000},{"_id":"source/_posts/ECMAScript面向对象篇(OO).md","hash":"ab9445a15cf6301aac9901a795426334a66a9ee5","modified":1704196795000},{"_id":"source/_posts/JS-error.md","hash":"4846572908c46794acbc492e034879f8d2c18d8b","modified":1704196795000},{"_id":"source/_posts/JS-Math&Str.md","hash":"d5947528258c71a2a8527c217288c00791162b2d","modified":1704196795000},{"_id":"source/_posts/JavaScript-JS中的Event-loop.md","hash":"b559c5634e54259d7ae83869ec23bde37848d6e3","modified":1704196795000},{"_id":"source/_posts/JavaScript-读完保证让你搞懂JS原型.md","hash":"9da23506c8f3d42733ae78e8d73988fcd60db8d6","modified":1704196795000},{"_id":"source/_posts/OS-进程与线程.md","hash":"8867ca23201e65b3affe3e6602a5d38f2107bed0","modified":1704196795000},{"_id":"source/_posts/Typescript-实践初体验（一）.md","hash":"476f730977fcf334bcc8b5e27c23a448fc3a5cb9","modified":1704196795000},{"_id":"source/_posts/Typescript-实践初体验（三）.md","hash":"676fcee7d6f5ef74bf51a7d211bd30c45d68e89c","modified":1704196795000},{"_id":"source/_posts/Typescript-实践初体验（二）.md","hash":"1285113cb77310512505c3cb0f1e22ef2ff61c38","modified":1704196795000},{"_id":"source/_posts/Vue源码解析-Flow&目录设计.md","hash":"1e4fab6a2a681dcf909b49903ac565e203f19eae","modified":1704196795000},{"_id":"source/_posts/Vue源码解析-Vue定义.md","hash":"caaf4578c836af89162fec2ad0fc74f108c43c4f","modified":1704196795000},{"_id":"source/_posts/consoleZ.md","hash":"65a54f51b69f6d7723f457213f3534b1c152d25a","modified":1704196795000},{"_id":"source/_posts/es6学习初体验（一）.md","hash":"6ad6fc9eeda563b33f9a9a2dbf0d382faedf5cae","modified":1704196795000},{"_id":"source/_posts/github换coding.md","hash":"76bd1bf4e1a36add385bcd85cee4628f1bfc9085","modified":1704196795000},{"_id":"source/_posts/hello-world.md","hash":"5c6839c9e7e6b861c5fc6b93addd548b6e19ce09","modified":1704196795000},{"_id":"source/_posts/ife学习记录 - git文档阅读（一）.md","hash":"286c839668bc4d956ee98e276283ed27c608cc1b","modified":1704196795000},{"_id":"source/_posts/ife学习记录 - git文档阅读（三）.md","hash":"b15e4405f5f5e3f289b7dba5f8439cfb2f13b3ab","modified":1704196795000},{"_id":"source/_posts/ife学习记录 - git文档阅读（二）.md","hash":"0d03d78cbfc1f76aaf5f66aef5da2e975cfaafa1","modified":1704196795000},{"_id":"source/_posts/ife学习记录 - git文档阅读（四）.md","hash":"2e62c774f8f366aced41f14c3e9b16db78bfbc81","modified":1704196795000},{"_id":"source/_posts/ife学习记录 - 构建工具（一）.md","hash":"dba9898824df1cf3455eca8250bcb7c8ac3dee80","modified":1704196795000},{"_id":"source/_posts/ife学习记录 - 构建工具（二）.md","hash":"8a9bb2ada3385de4550b7633587d3b64efc24620","modified":1704196795000},{"_id":"source/_posts/new year.md","hash":"ab0395514959e68e29c7971ab2c3e385ae4c421d","modified":1704196795000},{"_id":"source/_posts/node-express搭建一个简单博客.md","hash":"240145e17bfa10c4ca107836c7c173b852c036a7","modified":1704196795000},{"_id":"source/_posts/npm版本管理学习.md","hash":"11729f195d0493160e8805caab3eea98ab83f605","modified":1704196795000},{"_id":"source/_posts/scroll-JQuery.md","hash":"3353d99ca33ca4825f5b826e46e54bd7b93fff67","modified":1704196795000},{"_id":"source/_posts/theme.md","hash":"c7cb952453a120a71529ed5d389f6b23de9701f3","modified":1704196795000},{"_id":"source/_posts/tap点透处理.md","hash":"ad599310ff02ac41ba27681f6d50dc47a58e7bff","modified":1704196795000},{"_id":"source/_posts/webpack-vue-cli配置详解.md","hash":"e5fdc3c11d06d678ff4f21c99a0dab9f423f4a02","modified":1704196795000},{"_id":"source/_posts/websocket实践研究.md","hash":"43b93d85be4f0a777e2afac6d45ccb8f88f4b77a","modified":1704196795000},{"_id":"source/_posts/分享 - 网站绿锁怎么加.md","hash":"bd50c53ac79a7949611446c14c40bc05b3ad10c1","modified":1704196795000},{"_id":"source/_posts/前端组件集 - 转载.md","hash":"7529d199e986768ca0aef67492ee21c808a02ac4","modified":1704196795000},{"_id":"source/_posts/国庆之后，还剩下什么.md","hash":"2584f95890596fb28a6a0af62c656753caf81cf4","modified":1704196795000},{"_id":"source/_posts/对于国庆加班的一些想法.md","hash":"c029a79d5759a9e7996a4f71dbd110f846aaa70c","modified":1704196795000},{"_id":"source/_posts/如何从0-1开发团队脚手架工具.md","hash":"9b76feb8d58c3ff2098982fbf81ba4aa69ccbcda","modified":1704196795000},{"_id":"source/_posts/当你做一件事总被打断.md","hash":"e3b70a8393d5cdf697627206c9ea91b6c3d796e6","modified":1704196795000},{"_id":"source/_posts/独处与反思.md","hash":"8e519861076a8cc621959b99b3a2a08d499a22b5","modified":1704196795000},{"_id":"source/_posts/网页滚动高度判断.md","hash":"284d2324711443343c9fb6558c716742514cc1ab","modified":1704196795000},{"_id":"source/_posts/设计模式-观察者与发布订阅模式.md","hash":"f68f93ad0e378a0910d551af29f2f720e8f21de8","modified":1704196795000},{"_id":"source/_posts/重写浏览器alert.md","hash":"af710bf1516a0adad5ced8feb79fb3e5a4ac524d","modified":1704196795000},{"_id":"themes/next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1704196795000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1704196795000},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1704196795000},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1704196795000},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1704196795000},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1704196795000},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1704196795000},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1704196795000},{"_id":"themes/next/package.json","hash":"5ec28dd3f6d4efa1fb51c61c3f59db01d182dd5c","modified":1704196795000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1704196795000},{"_id":"themes/next/_config.yml","hash":"f9e0a156f15332b388fc78c9bb812c22c3560ed1","modified":1740365883141},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1704196795000},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1704196795000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1704196795000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1704196795000},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1704196795000},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1704196795000},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1704196795000},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1704196795000},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1704196795000},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1704196795000},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1704196795000},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1704196795000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1704196795000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1704196795000},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1704196795000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1704196795000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1704196795000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1704196795000},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1704196795000},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1704196795000},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1704196795000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1704196795000},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1704196795000},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1704196795000},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1704196795000},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1704196795000},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1704196795000},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1704196795000},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1704196795000},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1704196795000},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1704196795000},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1704196795000},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1704196795000},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1704196795000},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1704196795000},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1704196795000},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1704196795000},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1704196795000},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1704196795000},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1704196795000},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1704196795000},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1704196795000},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1704196795000},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1704196795000},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1704196795000},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1704196795000},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1704196795000},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1704196795000},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1704196795000},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1704196795000},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1704196795000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1704196795000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1704196795000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1704196795000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1704196795000},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1704196795000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1704196795000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1704196795000},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1704196795000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1704196795000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1704196795000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1704196795000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1704196795000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1704196795000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1704196795000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1704196795000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1704196795000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1704196795000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1704196795000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1704196795000},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1704196795000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"2cfdb986328451c5c66f3a5a3e41e13d6dc2d3e2","modified":1704196795000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1704196795000},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1704196795000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1704196795000},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1704196795000},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1704196795000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1704196795000},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1704196795000},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1704196795000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1704196795000},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1704196795000},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1704196795000},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1704196795000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1704196795000},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1704196795000},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1704196795000},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1704196795000},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1704196795000},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1704196795000},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1704196795000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1704196795000},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1704196795000},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1704196795000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1704196795000},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1704196795000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1704196795000},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1704196795000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1704196795000},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1704196795000},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1704196795000},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1704196795000},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1704196795000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1704196795000},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1704196795000},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1704196795000},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1704196795000},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1704196795000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1704196795000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1704196795000},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1704196795000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1704196795000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1704196795000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1704196795000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1704196795000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1704196795000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1704196795000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1704196795000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1704196795000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1704196795000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1704196795000},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1704196795000},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1704196795000},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1704196795000},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1704196795000},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1704196795000},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1704196795000},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1704196795000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1704196795000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1704196795000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1704196795000},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1704196795000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1704196795000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1704196795000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1704196795000},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1704196795000},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1704196795000},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1704196795000},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1704196795000},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1704196795000},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1704196795000},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1704196795000},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1704196795000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1704196795000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1704196795000},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"697bd2cb2f5611b4265395bf5c9c420b4b56ba47","modified":1704196795000},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1704196795000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1704196795000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1704196795000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1704196795000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1704196795000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1704196795000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1704196795000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1704196795000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1704196795000},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1704196795000},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1704196795000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1704196795000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1704196795000},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1704196795000},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1704196795000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1704196795000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1704196795000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1704196795000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1704196795000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1704196795000},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1704196795000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1704196795000},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1704196795000},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1704196795000},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1704196795000},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1704196795000},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1704196795000},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1704196795000},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1704196795000},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1704196795000},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1704196795000},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1704196795000},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1704196795000},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1704196795000},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1704196795000},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1704196795000},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1704196795000},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1704196795000},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1704196795000},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1704196795000},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1704196795000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1704196795000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1704196795000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1704196795000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1704196795000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1704196795000},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1704196795000},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1704196795000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1704196795000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"1d2f6308fbe8452f71b0533ed915fd91daa61768","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"a92af81691855f609d1a4b2f62859a18529b55e9","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1704196795000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1704196795000},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1704196795000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"27393666f90e9e748688d68b7c4428f802f3c94e","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1704196795000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1704196795000},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1704196795000},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1704196795000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1704196795000},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1704196795000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1712473136550},{"_id":"source/.DS_Store","hash":"1bc69910518a319788f7e5769ae5b7d9b4f73257","modified":1712473136544},{"_id":"public/baidusitemap.xml","hash":"503f7bf7dbe3d0dff2d8f9c09e0968b30562a143","modified":1712479467929},{"_id":"public/sitemap.xml","hash":"3559051d2191c8c7e525ffa20c12cf22dcd3c7a2","modified":1712479467929},{"_id":"public/categories/前端工具/index.html","hash":"86c691820234aa86c745b6c67756a27be934be1b","modified":1712479467929},{"_id":"public/categories/OS/index.html","hash":"e4ccace1afb9a083faeb251588d1988fe732d0d2","modified":1712479467929},{"_id":"public/categories/构建工具/index.html","hash":"4b99f4743fa2fa01794c5c7352016a8761c249a0","modified":1712479467929},{"_id":"public/categories/node/index.html","hash":"2efe001f952726d04bfc43838ad218cef753467d","modified":1712479467929},{"_id":"public/categories/http/index.html","hash":"67fa4c355b7f21672e7597b0f6dac220c89a6309","modified":1712479467929},{"_id":"public/categories/设计模式/index.html","hash":"07fbe460ef5f51d1473faa126e8b45579e682450","modified":1712479467929},{"_id":"public/tags/前端安全/index.html","hash":"bc1d830180a6c4cc51949499ec2770b38a1838bb","modified":1712479467929},{"_id":"public/tags/博客，文章/index.html","hash":"a9108852433b3c02ae2ab402d5214873f3b5aca5","modified":1712479467929},{"_id":"public/tags/hexo/index.html","hash":"c084f18a38a9fc71b9b96b8ba4c7965ba3591c12","modified":1712479467929},{"_id":"public/tags/前端，工具/index.html","hash":"01c102f4807b5acfc87f5e9a7d78a578ad20ff61","modified":1712479467929},{"_id":"public/tags/OS/index.html","hash":"deaa307bff2759877a4c85f3c3742616f7ad2cd2","modified":1712479467929},{"_id":"public/tags/构建工具/index.html","hash":"29dd495421d72f1189537bd8bd904e864950f7cc","modified":1712479467929},{"_id":"public/tags/node/index.html","hash":"28c722e568e9c88cdc2e61969f94530b8c1e9a84","modified":1712479467929},{"_id":"public/tags/JavaScript，JQuery/index.html","hash":"de89edbfbfa9c3d507059e151d18d990df4d6087","modified":1712479467929},{"_id":"public/tags/HTTP/index.html","hash":"6b8c7868419a42334c594c1021fd3b34287a00b6","modified":1712479467929},{"_id":"public/tags/设计模式/index.html","hash":"079048610663a5fa42f399c26dfe3961406acd7e","modified":1712479467929},{"_id":"public/archives/2016/04/index.html","hash":"f0fa5d6b698b642f27c40a32571f22f63b999930","modified":1712479467929},{"_id":"public/archives/2016/05/index.html","hash":"525501bb882bc12c57020bc186f8a3434efecb54","modified":1712479467929},{"_id":"public/archives/2017/02/index.html","hash":"8ba8628b92a241db94c368f722c75ecf9aa34c6f","modified":1712479467929},{"_id":"public/archives/2017/03/index.html","hash":"26274be7a6451dd38a1a89a5b9aba54a79b5b56f","modified":1712479467929},{"_id":"public/archives/2017/04/index.html","hash":"86601a73fa6d0263a082fb871fab18a34964f1e6","modified":1712479467929},{"_id":"public/archives/2017/06/index.html","hash":"d06ae698a399cbc62a96a6faed0e1f6c5d1f423d","modified":1712479467929},{"_id":"public/archives/2017/09/index.html","hash":"5e2d4b86f645be0d40f286bacca0212b16778ab2","modified":1712479467929},{"_id":"public/archives/2017/10/index.html","hash":"ba0140eff657567bd6796d25e383bffd26bfa419","modified":1712479467929},{"_id":"public/archives/2017/11/index.html","hash":"a0c3bcb675d142cd312fa2f79fe743a417d5c403","modified":1712479467929},{"_id":"public/archives/2018/08/index.html","hash":"0c1b1b0c79187a351421122ebfe91d6308273061","modified":1712479467929},{"_id":"public/archives/2018/10/index.html","hash":"8ad7d4ef55ed227a32d6d150b039fae312ad1638","modified":1712479467929},{"_id":"public/archives/2018/11/index.html","hash":"6cb7fdfb0452807ca83ed5b642a3c1e2a04b1049","modified":1712479467929},{"_id":"public/archives/2019/index.html","hash":"3c4b97696d01dcfe18d8e2b9ffc9d361544ad8d4","modified":1712479467929},{"_id":"public/archives/2019/01/index.html","hash":"73d2a44d7213717535408fe81c59a7e9ca1a92ba","modified":1712479467929},{"_id":"public/archives/2019/08/index.html","hash":"a988e772842f39b10515c38f64e8b4f6632bae42","modified":1712479467929},{"_id":"public/archives/2020/03/index.html","hash":"baa8e55fda90d0d0cec60aa2ee161aeb004f30ca","modified":1712479467929},{"_id":"public/archives/2020/04/index.html","hash":"38c9f4b3a335786dc7d3577328e69a3ed75f3836","modified":1712479467929},{"_id":"public/archives/2020/08/index.html","hash":"7237f12af74844d9cc960f1ec63d15b82d114862","modified":1712479467929},{"_id":"public/archives/2021/01/index.html","hash":"0b56b1cd353f51a5e5d68efc195b17b7219c7e16","modified":1712479467929},{"_id":"public/archives/2021/02/index.html","hash":"7777f6c14c94e671c57c9e13cbdb021779019871","modified":1712479467929},{"_id":"public/archives/2021/08/index.html","hash":"47ff72a46b09e4b1cf545c7a68c9ae9249549645","modified":1712479467929},{"_id":"public/archives/2021/10/index.html","hash":"2d85f196ca744df80374b6df415a85b1beda979f","modified":1712479467929},{"_id":"public/archives/2021/11/index.html","hash":"65e374aeeed77ddc7708eeb29f772c678e4ddc17","modified":1712479467929},{"_id":"public/archives/2022/index.html","hash":"8f2a0aaaf6ea90fbc48b2e5f87119887cdc1b214","modified":1712479467929},{"_id":"public/archives/2022/01/index.html","hash":"e8e0abf0442e74cef9ce236b83691fb176387191","modified":1712479467929},{"_id":"public/archives/2022/02/index.html","hash":"902133d8cb87dff3c261b995b3f2155fa150399b","modified":1712479467929},{"_id":"public/archives/2023/index.html","hash":"63ee1f91b46281fc55ef5c761d37ceb7b1899280","modified":1712479467929},{"_id":"public/archives/2023/02/index.html","hash":"afcc7c7c2577509157ee3a6455da49466a0743d2","modified":1712479467929},{"_id":"public/archives/2024/index.html","hash":"da1172ee5b99c400b250d281ba593226a5c2df01","modified":1712479467929},{"_id":"public/archives/2024/03/index.html","hash":"3f85dc219bd6918a35f26bf1a92ed72d92620bfe","modified":1712479467929},{"_id":"public/about.html","hash":"f33a1be2b97f53d482093ea8b2bb573cea6c239f","modified":1712479467929},{"_id":"public/categories/index.html","hash":"dc965fd5ee70c33f41c7cd9dec2e45bc9bd276fe","modified":1712479467929},{"_id":"public/2023/02/28/2022 总结 | 来影 - 若能重来/index.html","hash":"54de924acb98c85c61aeb8e679eeaf4412154284","modified":1712479467929},{"_id":"public/2024/03/16/2023 总结 | 来影 - 顺势而为/index.html","hash":"eddd41260465adb3d8449a36458ed258e6b5ef61","modified":1712479467929},{"_id":"public/2022/02/11/2021 总结 | 来影 - 我向山走去/index.html","hash":"a94b98e898f30d72a3bb8d26ce2d43cb2243ed74","modified":1712479467929},{"_id":"public/2022/01/11/当你做一件事总被打断/index.html","hash":"420de1f69477935c9c769c2471e75eac0aeb4ed8","modified":1712479467929},{"_id":"public/2021/11/05/Typescript-实践初体验（三）/index.html","hash":"da2bf204a40636a9df736573d95f0e0043fbaf76","modified":1712479467929},{"_id":"public/2021/11/03/Typescript-实践初体验（二）/index.html","hash":"13c1a5a7c3321918f82a2d5aa29b838f243694c3","modified":1712479467929},{"_id":"public/2021/10/13/对于国庆加班的一些想法/index.html","hash":"47fa40b5b12713a984cc3ae6576a4dfbc734f1d9","modified":1712479467929},{"_id":"public/2021/08/26/如何从0-1开发团队脚手架工具/index.html","hash":"dc6b36b0a7af2f839c0755bff1440268c3eca430","modified":1712479467929},{"_id":"public/2021/02/04/2020 总结 | 来影 - 柳暗花明又一村/index.html","hash":"01c761d38975efebd348d5d608b82e90775b809f","modified":1712479467929},{"_id":"public/2021/01/03/Typescript-实践初体验（一）/index.html","hash":"0e259f4bf0410fc8a82b465a6e68656b930f8eb4","modified":1712479467929},{"_id":"public/2021/01/03/设计模式-观察者与发布订阅模式/index.html","hash":"962cab8451455b59f3b3136307c5db8446c25ad8","modified":1712479467929},{"_id":"public/2020/08/13/OS-进程与线程/index.html","hash":"f7a6f0bf0c246b3b02e95ddf196e404f56ab7371","modified":1712479467929},{"_id":"public/2020/04/24/npm版本管理学习/index.html","hash":"5d0884f6fccb698c49eeda39af6a80468cda63c6","modified":1712479467929},{"_id":"public/2020/03/01/JavaScript-JS中的Event-loop/index.html","hash":"c866f9a838dee89d7e6f514fc2696fe8c441b6b5","modified":1712479467929},{"_id":"public/2019/08/05/JavaScript-读完保证让你搞懂JS原型/index.html","hash":"56f53519ab15d1088907a5b8e776ff23255c39d4","modified":1712479467929},{"_id":"public/2019/01/14/node-express搭建一个简单博客/index.html","hash":"10a01f9505a2740abf3cf7637f86f094490ed3d7","modified":1712479467929},{"_id":"public/2018/11/12/Vue源码解析-Vue定义/index.html","hash":"a62e81313ef4ad05e2c74f7a33c3974b4504d264","modified":1712479467929},{"_id":"public/2018/11/02/独处与反思/index.html","hash":"7d7e9784aedacad2e99d5719364738c48a36473c","modified":1712479467929},{"_id":"public/2018/10/10/国庆之后，还剩下什么/index.html","hash":"b1b6c7819634555f74b57c13f3af64b29dc96ce3","modified":1712479467929},{"_id":"public/2018/09/13/es6学习初体验（一）/index.html","hash":"f96fe62cc05bc35970ef538d1b3eeb99ee19b452","modified":1712479467929},{"_id":"public/2018/09/12/webpack-vue-cli配置详解/index.html","hash":"7b1a47c0f61d08e78d4a14b3cb487f7e1d6d4c52","modified":1712479467929},{"_id":"public/2018/09/03/Vue源码解析-Flow&目录设计/index.html","hash":"f5d53678d16718715b4fc2a6336393525728903d","modified":1712479467929},{"_id":"public/2018/08/16/ECMAScript面向对象篇(OO)/index.html","hash":"8738329b4d6b32c266c28b40fb9b18121b457abe","modified":1712479467929},{"_id":"public/2018/05/13/theme/index.html","hash":"1e91f8a38d1ba40b801b2212655b4a89d7e86e19","modified":1712479467929},{"_id":"public/2018/05/01/ife学习记录 - git文档阅读（三）/index.html","hash":"2aa690ac1bb22b40d7f272f48d67098b338d4113","modified":1712479467929},{"_id":"public/2018/05/01/ife学习记录 - git文档阅读（一）/index.html","hash":"895334434aa039dfee1838cef9310a928157be1f","modified":1712479467929},{"_id":"public/2018/05/01/ife学习记录 - git文档阅读（二）/index.html","hash":"a00d941f7724bc287a8320fa9c68a931b0b20378","modified":1712479467929},{"_id":"public/2018/05/01/ife学习记录 - git文档阅读（四）/index.html","hash":"f51681196f700a04a9f80622785520694b7ab7cd","modified":1712479467929},{"_id":"public/2017/11/09/tap点透处理/index.html","hash":"26d65ab5e2f1564de6a707a2cce7c49d87a5b4c1","modified":1712479467929},{"_id":"public/2017/10/13/分享 - 网站绿锁怎么加/index.html","hash":"d8803d631c8d3958ea46e2f61b78487cf0929664","modified":1712479467929},{"_id":"public/2017/09/11/AmdorCmd/index.html","hash":"9d26b943416b00705d2fd2dfbf61830b72cabd9d","modified":1712479467929},{"_id":"public/2017/06/22/websocket实践研究/index.html","hash":"81be3ce70a2e140d1870383548578a2639cef4cc","modified":1712479467929},{"_id":"public/2017/06/21/重写浏览器alert/index.html","hash":"6d909f79cde14c6152761684cfb3b8c6511a0994","modified":1712479467929},{"_id":"public/2017/04/16/CSP - 内容安全策略/index.html","hash":"7df48ef8a756067ff8d590a22d7dddd34ab6c3a5","modified":1712479467929},{"_id":"public/2017/04/02/github换coding/index.html","hash":"965c38c546769fb8440bcca2b5f8e2c79dd8d691","modified":1712479467929},{"_id":"public/2017/03/18/网页滚动高度判断/index.html","hash":"56a8375f393c14370b790f5e40d5e7439117cdd3","modified":1712479467929},{"_id":"public/2017/03/11/consoleZ/index.html","hash":"246d4897332a079a0e7cc918428bcab0e345e916","modified":1712479467929},{"_id":"public/2017/02/14/new year/index.html","hash":"83bf33fc846569df01190579abd37191c7b93bf7","modified":1712479467929},{"_id":"public/2016/08/15/JS-Math&Str/index.html","hash":"f5619e982211628804b163aa847e8eeb85d8cc43","modified":1712479467929},{"_id":"public/2016/08/12/ife学习记录 - 构建工具（一）/index.html","hash":"15566eaaa9d75c7c2fdc6fc6439b3a318594c7cf","modified":1712479467929},{"_id":"public/2016/08/03/前端组件集 - 转载/index.html","hash":"72992028e11db01f410a79fca0c47eb608b452fa","modified":1712479467929},{"_id":"public/2016/07/18/JS-error/index.html","hash":"5b335092edd24a8eaf81338629d94d1f837d7280","modified":1712479467929},{"_id":"public/2016/07/11/ife学习记录 - 构建工具（二）/index.html","hash":"099d6e9353264e9e91234c5f5d0a466b8e594112","modified":1712479467929},{"_id":"public/2016/07/09/scroll-JQuery/index.html","hash":"c684059df38cbe1833f80dd2bef114cd139f9a4b","modified":1712479467929},{"_id":"public/2016/05/08/hello-world/index.html","hash":"fee67dd653c2e4c2fbe62012f68092c63aa9675a","modified":1712479467929},{"_id":"public/2016/04/29/2016个人年度总结/index.html","hash":"d92fb9bb617c49227bed611339312249c923753f","modified":1712479467929},{"_id":"public/categories/生活随笔/index.html","hash":"2ccef7384786cfebd769f6b6945d79e3a86817d7","modified":1712479467929},{"_id":"public/categories/前端/index.html","hash":"1af4ccddf8919b7d85d99bec49adc05706efb990","modified":1712479467929},{"_id":"public/categories/前端/page/2/index.html","hash":"6107d29a42062fe68307397e740c1925b41831c1","modified":1712479467929},{"_id":"public/categories/前端/javascript/index.html","hash":"af4e487e10253fd5255dbf1be48b92b7531abc34","modified":1712479467929},{"_id":"public/categories/Typescript/index.html","hash":"d2ec892664a60e78539d635ccaf808078ce917ab","modified":1712479467929},{"_id":"public/categories/hexo/index.html","hash":"969c92cc3c5c14281b447c9bef8efd309fa098e0","modified":1712479467929},{"_id":"public/categories/git/index.html","hash":"38ea3b5dcab3785cc638c418e00aa5a1a581c955","modified":1712479467929},{"_id":"public/tags/随笔/index.html","hash":"8949529dc54e8fcca9f709f9e774ae40325f0d1b","modified":1712479467929},{"_id":"public/tags/JavaScript/index.html","hash":"22fa2770be6d17df40dadfce1ae77a40863d2812","modified":1712479467929},{"_id":"public/tags/javascript/index.html","hash":"70b2c075098fc2fda7eaa7a21f89c7e39ca7f694","modified":1712479467929},{"_id":"public/tags/前端/index.html","hash":"3100f107f1636eba8d061375c868b02e27f9b193","modified":1712479467929},{"_id":"public/tags/前端/page/2/index.html","hash":"a65b406594f88e0f641fd2e427b369aff39d0807","modified":1712479467929},{"_id":"public/tags/Typescript/index.html","hash":"c67279598cbbee6c3b9c4c8d7ee09b7f8eac00db","modified":1712479467929},{"_id":"public/tags/Vue/index.html","hash":"561d17e8274faadd30874466bb6c39dd79e0bbd0","modified":1712479467929},{"_id":"public/tags/git/index.html","hash":"7f7e804848ed43163fef5042fc11ea78f2acc24a","modified":1712479467929},{"_id":"public/index.html","hash":"7a996c0302808cf9f567d6b19ae2ba2b14dfc5b8","modified":1712479467929},{"_id":"public/page/2/index.html","hash":"9a308367c1aa31438ef8914aeae0069e7c1f394e","modified":1712479467929},{"_id":"public/page/3/index.html","hash":"e06326289451c67d4d8bcfce116721a08fda540c","modified":1712479467929},{"_id":"public/page/4/index.html","hash":"8a14c7bcf2f6ea6d8a5231c3962e629adf01c2f6","modified":1712479467929},{"_id":"public/page/5/index.html","hash":"1f8bb002d5ddd5593261d1d495fa46f2fb2acd8d","modified":1712479467929},{"_id":"public/archives/index.html","hash":"f701d1be3c5fd89607b980992bd99331165f2c91","modified":1712479467929},{"_id":"public/archives/page/2/index.html","hash":"d01470b1ae3f2c153af0c5df991ab217f5867658","modified":1712479467929},{"_id":"public/archives/page/3/index.html","hash":"71602681a032b138d6f7ef70cdf0f83c48216751","modified":1712479467929},{"_id":"public/archives/page/4/index.html","hash":"371ef732d7080a4eae0daaf3667c5503fc614864","modified":1712479467929},{"_id":"public/archives/page/5/index.html","hash":"e621fcb7df5f9b440562db45b6b7ae75f637b2cf","modified":1712479467929},{"_id":"public/archives/2016/index.html","hash":"0c321b3c37eb567c8c1456e2a998a42fc233b4a4","modified":1712479467929},{"_id":"public/archives/2016/07/index.html","hash":"d05633beba1a960d3b6a101c652cbcbb7a8c257b","modified":1712479467929},{"_id":"public/archives/2016/08/index.html","hash":"a26e752d1d2743de722654a8551bd89ac50ad50f","modified":1712479467929},{"_id":"public/archives/2017/index.html","hash":"4cc73db2072ba661502478ba4a724608e0d5d9c3","modified":1712479467929},{"_id":"public/archives/2018/index.html","hash":"445eefd5776949e911c96023fe577c5ff3d749a8","modified":1712479467929},{"_id":"public/archives/2018/page/2/index.html","hash":"36d2435910b2f210dea5c0a3deae79807e8fab35","modified":1712479467929},{"_id":"public/archives/2018/05/index.html","hash":"96ecceace188ea75a493cdad79128fa5355023e9","modified":1712479467929},{"_id":"public/archives/2018/09/index.html","hash":"e673fa1ae7e7c4abc05c064267415beffb1dbef6","modified":1712479467929},{"_id":"public/archives/2020/index.html","hash":"c142d815f66421356ed58df39857e39abe97e8f8","modified":1712479467929},{"_id":"public/archives/2021/index.html","hash":"9c9c08e2a84870db835956ebf21f1ef23120aad0","modified":1712479467929},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1712479467929},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1712479467929},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1712479467929},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1712479467929},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1712479467929},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1712479467929},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1712479467929},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1712479467929},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1712479467929},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1712479467929},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1712479467929},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1712479467929},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1712479467929},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1712479467929},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1712479467929},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1712479467929},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1712479467929},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1712479467929},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1712479467929},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1712479467929},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1712479467929},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1712479467929},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1712479467929},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1712479467929},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1712479467929},{"_id":"public/css/main.css","hash":"d5813fc1ce9c08c2cf5ab04e443383ba418e85e1","modified":1712479467929},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1712479467929},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1712479467929},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1712479467929},{"_id":"source/_posts/2024 总结 | 来影 - 静待花开.md","hash":"47d38ca6e0a4223a4ef02bc912a4fa1c0c5e2a67","modified":1740463341998}],"Category":[{"name":"生活随笔","_id":"clup4a7wi0004r2uf1rz2fy43"},{"name":"前端","_id":"clup4a7wl000or2uf91jdgtdr"},{"name":"javascript","parent":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wo001cr2uf8rd10wgk"},{"name":"Typescript","_id":"clup4a7ws0022r2uffiy65fop"},{"name":"hexo","_id":"clup4a7wv0037r2uf761s7app"},{"name":"前端工具","_id":"clup4a7wx003pr2uffrds6ozv"},{"name":"OS","_id":"clup4a7wy003yr2uf56321set"},{"name":"git","_id":"clup4a7wz0046r2uf706jd66x"},{"name":"构建工具","_id":"clup4a7x0004ur2uf60d718ws"},{"name":"node","_id":"clup4a7x00057r2uf9y9w97wf"},{"name":"http","_id":"clup4a7x1005or2ufbpbwc04m"},{"name":"设计模式","_id":"clup4a7x1005tr2uf9gqaew4q"}],"Data":[],"Page":[{"title":"关于 elmer","_content":"## self-introduction\n***\n<img src=\"http://www.lgstatic.com/i/image/M00/7F/B5/Cgp3O1hOmIeAOORbAAkRJlDV18U889.jpg\" alt=\"avatar\" width=\"120\" heigth=\"120\" title=\"avatar\" style=\"border-radius:50%\">\n\n*梦想不会远，只要你努力追*\n```javascript\n\tvar Person = {\n\t\tmotto:'爱学习，爱生活',\n\t\tname:'elmer',\n\t\tage:29,\n\t\tsex:\"1\",\n\t\taddr:\"浙江杭州\",\n\t\tedu:\"本科\",\n\t\ttel:13216186482,\n\t\temail:\"244lixinyi@163.com\",\n\t\tqq:'598203949',\n\t\tprofession:\"Front-end Engineer\"\n\t};\n```\n## 时不时折腾\n---\n### hobbies\n1. [coding](https://github.com/Tanelmer)\n2. 游戏 - lol/pubg/dnf/ ...\n3. 民谣吉他\n4. [摄影](http://heizi.alltuu.com/albuml)\n5. 篮球\n6. 游泳\n7. ...\n\n## 好好学习\n---\n### skills\n1. javascript\n2. html/css\n3. vue/react/ng\n4. photoshop/instagram\n5. webpack/grunt\n6. node\n7. mongodb\n8. java/python\n9. npl...\n\n熟悉程度逐级递减，还有很多空位待补，尽早搞定它们，加油。","source":"about.md","raw":"---\ntitle: 关于 elmer\n---\n## self-introduction\n***\n<img src=\"http://www.lgstatic.com/i/image/M00/7F/B5/Cgp3O1hOmIeAOORbAAkRJlDV18U889.jpg\" alt=\"avatar\" width=\"120\" heigth=\"120\" title=\"avatar\" style=\"border-radius:50%\">\n\n*梦想不会远，只要你努力追*\n```javascript\n\tvar Person = {\n\t\tmotto:'爱学习，爱生活',\n\t\tname:'elmer',\n\t\tage:29,\n\t\tsex:\"1\",\n\t\taddr:\"浙江杭州\",\n\t\tedu:\"本科\",\n\t\ttel:13216186482,\n\t\temail:\"244lixinyi@163.com\",\n\t\tqq:'598203949',\n\t\tprofession:\"Front-end Engineer\"\n\t};\n```\n## 时不时折腾\n---\n### hobbies\n1. [coding](https://github.com/Tanelmer)\n2. 游戏 - lol/pubg/dnf/ ...\n3. 民谣吉他\n4. [摄影](http://heizi.alltuu.com/albuml)\n5. 篮球\n6. 游泳\n7. ...\n\n## 好好学习\n---\n### skills\n1. javascript\n2. html/css\n3. vue/react/ng\n4. photoshop/instagram\n5. webpack/grunt\n6. node\n7. mongodb\n8. java/python\n9. npl...\n\n熟悉程度逐级递减，还有很多空位待补，尽早搞定它们，加油。","date":"2024-03-13T05:51:20.238Z","updated":"2024-01-02T11:59:55.000Z","path":"about.html","comments":1,"layout":"page","_id":"clup4a7we0000r2uf0990hyyq","content":"<h2 id=\"self-introduction\"><a href=\"#self-introduction\" class=\"headerlink\" title=\"self-introduction\"></a>self-introduction</h2><hr>\n<img src=\"http://www.lgstatic.com/i/image/M00/7F/B5/Cgp3O1hOmIeAOORbAAkRJlDV18U889.jpg\" alt=\"avatar\" width=\"120\" heigth=\"120\" title=\"avatar\" style=\"border-radius:50%\">\n\n<p><em>梦想不会远，只要你努力追</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Person</span> = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">motto</span>:<span class=\"string\">&#x27;爱学习，爱生活&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">name</span>:<span class=\"string\">&#x27;elmer&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">age</span>:<span class=\"number\">29</span>,</span><br><span class=\"line\">\t<span class=\"attr\">sex</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">addr</span>:<span class=\"string\">&quot;浙江杭州&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">edu</span>:<span class=\"string\">&quot;本科&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">tel</span>:<span class=\"number\">13216186482</span>,</span><br><span class=\"line\">\t<span class=\"attr\">email</span>:<span class=\"string\">&quot;244lixinyi@163.com&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">qq</span>:<span class=\"string\">&#x27;598203949&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">profession</span>:<span class=\"string\">&quot;Front-end Engineer&quot;</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"时不时折腾\"><a href=\"#时不时折腾\" class=\"headerlink\" title=\"时不时折腾\"></a>时不时折腾</h2><hr>\n<h3 id=\"hobbies\"><a href=\"#hobbies\" class=\"headerlink\" title=\"hobbies\"></a>hobbies</h3><ol>\n<li><a href=\"https://github.com/Tanelmer\">coding</a></li>\n<li>游戏 - lol&#x2F;pubg&#x2F;dnf&#x2F; …</li>\n<li>民谣吉他</li>\n<li><a href=\"http://heizi.alltuu.com/albuml\">摄影</a></li>\n<li>篮球</li>\n<li>游泳</li>\n<li>…</li>\n</ol>\n<h2 id=\"好好学习\"><a href=\"#好好学习\" class=\"headerlink\" title=\"好好学习\"></a>好好学习</h2><hr>\n<h3 id=\"skills\"><a href=\"#skills\" class=\"headerlink\" title=\"skills\"></a>skills</h3><ol>\n<li>javascript</li>\n<li>html&#x2F;css</li>\n<li>vue&#x2F;react&#x2F;ng</li>\n<li>photoshop&#x2F;instagram</li>\n<li>webpack&#x2F;grunt</li>\n<li>node</li>\n<li>mongodb</li>\n<li>java&#x2F;python</li>\n<li>npl…</li>\n</ol>\n<p>熟悉程度逐级递减，还有很多空位待补，尽早搞定它们，加油。</p>\n","site":{"data":{}},"length":517,"excerpt":"","more":"<h2 id=\"self-introduction\"><a href=\"#self-introduction\" class=\"headerlink\" title=\"self-introduction\"></a>self-introduction</h2><hr>\n<img src=\"http://www.lgstatic.com/i/image/M00/7F/B5/Cgp3O1hOmIeAOORbAAkRJlDV18U889.jpg\" alt=\"avatar\" width=\"120\" heigth=\"120\" title=\"avatar\" style=\"border-radius:50%\">\n\n<p><em>梦想不会远，只要你努力追</em></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Person</span> = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">motto</span>:<span class=\"string\">&#x27;爱学习，爱生活&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">name</span>:<span class=\"string\">&#x27;elmer&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">age</span>:<span class=\"number\">29</span>,</span><br><span class=\"line\">\t<span class=\"attr\">sex</span>:<span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">addr</span>:<span class=\"string\">&quot;浙江杭州&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">edu</span>:<span class=\"string\">&quot;本科&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">tel</span>:<span class=\"number\">13216186482</span>,</span><br><span class=\"line\">\t<span class=\"attr\">email</span>:<span class=\"string\">&quot;244lixinyi@163.com&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">qq</span>:<span class=\"string\">&#x27;598203949&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">profession</span>:<span class=\"string\">&quot;Front-end Engineer&quot;</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"时不时折腾\"><a href=\"#时不时折腾\" class=\"headerlink\" title=\"时不时折腾\"></a>时不时折腾</h2><hr>\n<h3 id=\"hobbies\"><a href=\"#hobbies\" class=\"headerlink\" title=\"hobbies\"></a>hobbies</h3><ol>\n<li><a href=\"https://github.com/Tanelmer\">coding</a></li>\n<li>游戏 - lol&#x2F;pubg&#x2F;dnf&#x2F; …</li>\n<li>民谣吉他</li>\n<li><a href=\"http://heizi.alltuu.com/albuml\">摄影</a></li>\n<li>篮球</li>\n<li>游泳</li>\n<li>…</li>\n</ol>\n<h2 id=\"好好学习\"><a href=\"#好好学习\" class=\"headerlink\" title=\"好好学习\"></a>好好学习</h2><hr>\n<h3 id=\"skills\"><a href=\"#skills\" class=\"headerlink\" title=\"skills\"></a>skills</h3><ol>\n<li>javascript</li>\n<li>html&#x2F;css</li>\n<li>vue&#x2F;react&#x2F;ng</li>\n<li>photoshop&#x2F;instagram</li>\n<li>webpack&#x2F;grunt</li>\n<li>node</li>\n<li>mongodb</li>\n<li>java&#x2F;python</li>\n<li>npl…</li>\n</ol>\n<p>熟悉程度逐级递减，还有很多空位待补，尽早搞定它们，加油。</p>\n"},{"title":"分类","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ntype: \"categories\"\n---\n","date":"2024-03-13T05:51:20.239Z","updated":"2024-01-02T11:59:55.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"clup4a7wh0002r2uf57t46lw1","content":"","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"时光那么贵，奈何虚度","date":"2016-04-28T16:00:00.000Z","description":"自省~","_content":"### 自省\n*吾生也有涯，而知也无涯。*\n有时，我真的会愿意去相信一些讲述时光倒流的电影，可幻想终归幻想，现实是如此无奈。\n<!-- more -->\n16年弹指一挥间，这一年经历了许多，收获了许多，毕业，恋爱，事业，摄影，友谊，还有离别。\n总的来说，这一年来还是差强人意，心底里不知是给自己的期望太高了，还是自己层次太低了，估且算作对自己期望太高了吧。\n6月份毕业，学校时光结束，学生时代转变，岁月蹉跎。\n7月份入职，公司是实习呆的公司，公司团队氛围很好，一直待到12月。\n12月份离职，因某些原因离职，其实心底是想去更大的公司看看的，就如同世界那么大，总得去看看那般，不怪别人。\n***\n昨晚听书有句话我觉得挺对的，**层次越低的人，越容易放弃自己，越容易被人影响。**是啊，多么贴切的形容了自己，不知是什么时候开始，自己忘了什么叫做努力，什么叫做追求，什么是理想。还是说自己从未有过？\n看着一本本沾满尘埃的书，一根根生锈的弦，那一次次的放纵自己，心安理得的认为刚毕业学生就这样了，却不知天外有天，媲如井底之蛙般鼠目寸光，你永远不知道比你优秀的人还要比你更努力，而你，还差得远呢。\n想着那些个目标，不自觉笑出了声，原谅我这么无耻，是,这一年是没看完100本书,吉他也没能熟练指弹，篮球也没能继续坚持每周打下去，英文也没能继续坚持每天学下去，摄影也不堪入目还未入门，就连职业技术也没有很深入专研，永远安于现状，觉得能解决公司业务就够了，现在才发现\n自己错的有点离谱，电视剧电影，游戏，娱乐花光了大多数与自己独处时光，懒癌入骨，病入膏肓呀~惨惨惨。。果然**生于忧患，死于安乐**。\n***\n### 17年要振作\n本命年了都，咋还能跟过去和个小孩子一样幼稚，能不能成熟点，理智点。恩，振作，别口头说得好听~~哈哈~~\n最后一送自己一句话，警醒**懒惰像生锈一样，比操劳更消耗身体。**（PS，污的人看啥都污~~）","source":"_posts/2016个人年度总结.md","raw":"---\ntitle: 时光那么贵，奈何虚度\ndate: 2016-04-29\ncategories: 生活随笔\ntags: [随笔]\ndescription: 自省~\n---\n### 自省\n*吾生也有涯，而知也无涯。*\n有时，我真的会愿意去相信一些讲述时光倒流的电影，可幻想终归幻想，现实是如此无奈。\n<!-- more -->\n16年弹指一挥间，这一年经历了许多，收获了许多，毕业，恋爱，事业，摄影，友谊，还有离别。\n总的来说，这一年来还是差强人意，心底里不知是给自己的期望太高了，还是自己层次太低了，估且算作对自己期望太高了吧。\n6月份毕业，学校时光结束，学生时代转变，岁月蹉跎。\n7月份入职，公司是实习呆的公司，公司团队氛围很好，一直待到12月。\n12月份离职，因某些原因离职，其实心底是想去更大的公司看看的，就如同世界那么大，总得去看看那般，不怪别人。\n***\n昨晚听书有句话我觉得挺对的，**层次越低的人，越容易放弃自己，越容易被人影响。**是啊，多么贴切的形容了自己，不知是什么时候开始，自己忘了什么叫做努力，什么叫做追求，什么是理想。还是说自己从未有过？\n看着一本本沾满尘埃的书，一根根生锈的弦，那一次次的放纵自己，心安理得的认为刚毕业学生就这样了，却不知天外有天，媲如井底之蛙般鼠目寸光，你永远不知道比你优秀的人还要比你更努力，而你，还差得远呢。\n想着那些个目标，不自觉笑出了声，原谅我这么无耻，是,这一年是没看完100本书,吉他也没能熟练指弹，篮球也没能继续坚持每周打下去，英文也没能继续坚持每天学下去，摄影也不堪入目还未入门，就连职业技术也没有很深入专研，永远安于现状，觉得能解决公司业务就够了，现在才发现\n自己错的有点离谱，电视剧电影，游戏，娱乐花光了大多数与自己独处时光，懒癌入骨，病入膏肓呀~惨惨惨。。果然**生于忧患，死于安乐**。\n***\n### 17年要振作\n本命年了都，咋还能跟过去和个小孩子一样幼稚，能不能成熟点，理智点。恩，振作，别口头说得好听~~哈哈~~\n最后一送自己一句话，警醒**懒惰像生锈一样，比操劳更消耗身体。**（PS，污的人看啥都污~~）","slug":"2016个人年度总结","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wg0001r2ufhklq25hn","content":"<h3 id=\"自省\"><a href=\"#自省\" class=\"headerlink\" title=\"自省\"></a>自省</h3><p><em>吾生也有涯，而知也无涯。</em><br>有时，我真的会愿意去相信一些讲述时光倒流的电影，可幻想终归幻想，现实是如此无奈。</p>\n<span id=\"more\"></span>\n<p>16年弹指一挥间，这一年经历了许多，收获了许多，毕业，恋爱，事业，摄影，友谊，还有离别。<br>总的来说，这一年来还是差强人意，心底里不知是给自己的期望太高了，还是自己层次太低了，估且算作对自己期望太高了吧。<br>6月份毕业，学校时光结束，学生时代转变，岁月蹉跎。<br>7月份入职，公司是实习呆的公司，公司团队氛围很好，一直待到12月。<br>12月份离职，因某些原因离职，其实心底是想去更大的公司看看的，就如同世界那么大，总得去看看那般，不怪别人。</p>\n<hr>\n<p>昨晚听书有句话我觉得挺对的，<strong>层次越低的人，越容易放弃自己，越容易被人影响。</strong>是啊，多么贴切的形容了自己，不知是什么时候开始，自己忘了什么叫做努力，什么叫做追求，什么是理想。还是说自己从未有过？<br>看着一本本沾满尘埃的书，一根根生锈的弦，那一次次的放纵自己，心安理得的认为刚毕业学生就这样了，却不知天外有天，媲如井底之蛙般鼠目寸光，你永远不知道比你优秀的人还要比你更努力，而你，还差得远呢。<br>想着那些个目标，不自觉笑出了声，原谅我这么无耻，是,这一年是没看完100本书,吉他也没能熟练指弹，篮球也没能继续坚持每周打下去，英文也没能继续坚持每天学下去，摄影也不堪入目还未入门，就连职业技术也没有很深入专研，永远安于现状，觉得能解决公司业务就够了，现在才发现<br>自己错的有点离谱，电视剧电影，游戏，娱乐花光了大多数与自己独处时光，懒癌入骨，病入膏肓呀~惨惨惨。。果然<strong>生于忧患，死于安乐</strong>。</p>\n<hr>\n<h3 id=\"17年要振作\"><a href=\"#17年要振作\" class=\"headerlink\" title=\"17年要振作\"></a>17年要振作</h3><p>本命年了都，咋还能跟过去和个小孩子一样幼稚，能不能成熟点，理智点。恩，振作，别口头说得好听<del>哈哈</del><br>最后一送自己一句话，警醒<strong>懒惰像生锈一样，比操劳更消耗身体。</strong>（PS，污的人看啥都污~~）</p>\n","site":{"data":{}},"length":745,"excerpt":"<h3 id=\"自省\"><a href=\"#自省\" class=\"headerlink\" title=\"自省\"></a>自省</h3><p><em>吾生也有涯，而知也无涯。</em><br>有时，我真的会愿意去相信一些讲述时光倒流的电影，可幻想终归幻想，现实是如此无奈。</p>","more":"<p>16年弹指一挥间，这一年经历了许多，收获了许多，毕业，恋爱，事业，摄影，友谊，还有离别。<br>总的来说，这一年来还是差强人意，心底里不知是给自己的期望太高了，还是自己层次太低了，估且算作对自己期望太高了吧。<br>6月份毕业，学校时光结束，学生时代转变，岁月蹉跎。<br>7月份入职，公司是实习呆的公司，公司团队氛围很好，一直待到12月。<br>12月份离职，因某些原因离职，其实心底是想去更大的公司看看的，就如同世界那么大，总得去看看那般，不怪别人。</p>\n<hr>\n<p>昨晚听书有句话我觉得挺对的，<strong>层次越低的人，越容易放弃自己，越容易被人影响。</strong>是啊，多么贴切的形容了自己，不知是什么时候开始，自己忘了什么叫做努力，什么叫做追求，什么是理想。还是说自己从未有过？<br>看着一本本沾满尘埃的书，一根根生锈的弦，那一次次的放纵自己，心安理得的认为刚毕业学生就这样了，却不知天外有天，媲如井底之蛙般鼠目寸光，你永远不知道比你优秀的人还要比你更努力，而你，还差得远呢。<br>想着那些个目标，不自觉笑出了声，原谅我这么无耻，是,这一年是没看完100本书,吉他也没能熟练指弹，篮球也没能继续坚持每周打下去，英文也没能继续坚持每天学下去，摄影也不堪入目还未入门，就连职业技术也没有很深入专研，永远安于现状，觉得能解决公司业务就够了，现在才发现<br>自己错的有点离谱，电视剧电影，游戏，娱乐花光了大多数与自己独处时光，懒癌入骨，病入膏肓呀~惨惨惨。。果然<strong>生于忧患，死于安乐</strong>。</p>\n<hr>\n<h3 id=\"17年要振作\"><a href=\"#17年要振作\" class=\"headerlink\" title=\"17年要振作\"></a>17年要振作</h3><p>本命年了都，咋还能跟过去和个小孩子一样幼稚，能不能成熟点，理智点。恩，振作，别口头说得好听<del>哈哈</del><br>最后一送自己一句话，警醒<strong>懒惰像生锈一样，比操劳更消耗身体。</strong>（PS，污的人看啥都污~~）</p>"},{"title":"2020 总结 | 来影 - 柳暗花明又一村","date":"2021-02-04T07:09:32.000Z","description":"年终终结~","top":null,"_content":"\n**关键词：柳暗花明**\n> 写作是和自己对话，对话越多，内心就会越平和越坚定。\n\n19年内心浮躁，逃避了与自己的对话，20年稍微坚定了些，想和自己聊一聊。<br />20年是参加工作的第四五个年头了，回首过往，皆为序章。\n<!-- more -->\n<a name=\"8QKJr\"></a>\n### 过往\n> 不乱于心，不困于情。不畏将来，不念过往。如此，安好。《不宠无惊过一生》\n\n<a name=\"xNCyK\"></a>\n#### 生活篇\n\n- 结婚，相守\n   - 与媳妇结束4年爱情长跑，在国庆中秋双节同日下步入婚姻殿堂。中间虽然有各种曲曲折折，最后也是好事多磨，顺利完婚。往后余生，陪伴前行。\n   - ![WechatIMG92.jpeg](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/WechatIMG92.jpeg)![WechatIMG100.jpeg](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/WechatIMG100.jpeg)![0131.jpg](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/0131.jpg)\n- 亲情，死别\n   - 有生以来第一次感受死别，回忆下当时的内心场景，12月7号早上，知道爷爷去世的消息，当时一下子是蒙的，后来回家的路上很平静，回家之后就哭个不停，之后又很平静地帮忙处理丧礼各种事情，直至丧礼结束回杭上班。之后总会偶尔回想起爷爷就潸然泪下。子欲养而亲不待&你可能无法理解留守儿童对爷爷奶奶的爱。\n- 爱好，坚持\n   - 篮球\n      - ![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image.png)\n   - 游泳\n      - ![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%281%29.png)\n   - 吉他\n      - ![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%282%29.png)\n   - 游戏\n      - 花费时间占比较高，约空余时间的30%\n      - ![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%283%29.png)\n- 身体，臃肿\n   - 目前体重73kg，相比两年前的体型，增长了13kg，说实话，有点夸张。\n   - 具体原因无非这两个。\n      - 吃得多。饭量相比刚毕业的时候也增长了许多，对荤菜的需求更加旺盛了。\n      - 动得少。运动量相比刚毕业每周一次骑行或爬山，现在一个月还不一定会有一次大量燃脂运动。\n<a name=\"lS1F3\"></a>\n\n#### 工作篇\n\n- 业务\n   - 智慧服务体系\n   - 数仓\n   - 基建\n      - 组件库\n      - 工具库\n      - 物料平台\n      - 脚手架/模板\n   - 技术栈：Vue&React WebH5系列、Uni-app&Rax跨端系列\n   - 程度：满足日常开发所需\n   - 状态：广度增加，深度欠缺，缺少底层原理研究探索。如小程序双线程设计，跨端框架底层设计等？\n- 面试\n   - 成果：面试50人+，成功入职正式1人，实习1人。\n   - [思考](https://www.yuque.com/tanelmer/cl9fpc/vq52ne)\n- 桎梏&瓶颈\n   - 现有的业务场景下，技术较难深入\n   - [团队开发模式混乱](https://www.yuque.com/tanelmer/cl9fpc/qhbint)，合作体验很差\n   - 个人驱动能力不够，自我提升有限\n   - 职业规划稍显模糊，未来3-5年何去何从\n\n<a name=\"1qfx5\"></a>\n#### 总结\n\n<a name=\"mKYnX\"></a>\n##### 自我肯定\n\n- 生活工作中，持续保持着热情\n- 总体路线，慢慢回归正常\n- 上半年，迷茫不定，下半年，柳暗花明\n<a name=\"bVcFL\"></a>\n\n##### 需要改进\n\n- 生活质感不足，依然还有点拖延症\n- 工作推进不够，想到的事情，没能持续的push\n- 沉迷于干活，日常思考总结少，[博客](https://www.elmerlxy.com/)逐渐停更\n\n---\n\n<a name=\"6HlTM\"></a>\n### 序章\n> 行而不辍，未来可期。《荀子·修身》\n\n立一些flag吧，虽然大多数不一定会完成，但好歹也有个方向\n<a name=\"7GYqv\"></a>\n#### 生活篇\n希望明年多一些旅行，多一些社交，坚持自己热爱的事情，有一些明显可见的成效或收获<br />希望明年多投资一些自身健康，身心健康才是最重要\n<a name=\"bOpiy\"></a>\n#### 工作篇\n不要沦为无情的搬砖机器，要做有意义的事情。即使公司没上市，你也得到了该有的成长&收获。<br />个人\n\n- 对于做过的业务链路，了然于心，思考业务发展各种可能性，大胆猜想，小心求证\n- 对于熟悉的技术体系，深入原理，打造属于自己的知识网图体系，pick一个前端发展方向深入探索\n\n团队\n\n- 文化建设\n   - 团队愿景 - 做医疗行业最牛逼的前端团队？情怀？\n   - 聚餐聚会 - 深入了解交流交心？提升团队凝聚力？\n   - 人员关怀 - (生日庆祝、失恋慰问？)提升团队温度？\n- 技术氛围建设\n   - 组织CR - 提供技术讨论碰撞场合，提升代码质量，降低开发别人代码时口(xin)头(li)吐(ma)槽(niang)次数\n   - 组织分享 - 提升团队总体实力\n   - 组织研究新课题 - 探索新技术，紧跟业界主流，不脱节\n- 基础技术建设\n   - 基础库完善\n   - 开发工具统一 \n   - 开发流程规范\n\n以上都是框架上构想，具体方案是如何落地执行，还需细化，也需要团队同学一起参与建设执行，比如分享的内容，频次？基础库完善的程度？等等。**一个人可以走的很快，但一群人可以走的很远。**\n<a name=\"HZ4yX\"></a>\n#### 希望\n> **梦想还是要有的，万一实现了呢...**\n\n<br />\n","source":"_posts/2020 总结 | 来影 - 柳暗花明又一村.md","raw":"---\ntitle: 2020 总结 | 来影 - 柳暗花明又一村\ndate: 2021-02-04 15:09:32\ncategories: 生活随笔\ntags: [随笔]\ndescription: 年终终结~\ntop:\n---\n\n**关键词：柳暗花明**\n> 写作是和自己对话，对话越多，内心就会越平和越坚定。\n\n19年内心浮躁，逃避了与自己的对话，20年稍微坚定了些，想和自己聊一聊。<br />20年是参加工作的第四五个年头了，回首过往，皆为序章。\n<!-- more -->\n<a name=\"8QKJr\"></a>\n### 过往\n> 不乱于心，不困于情。不畏将来，不念过往。如此，安好。《不宠无惊过一生》\n\n<a name=\"xNCyK\"></a>\n#### 生活篇\n\n- 结婚，相守\n   - 与媳妇结束4年爱情长跑，在国庆中秋双节同日下步入婚姻殿堂。中间虽然有各种曲曲折折，最后也是好事多磨，顺利完婚。往后余生，陪伴前行。\n   - ![WechatIMG92.jpeg](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/WechatIMG92.jpeg)![WechatIMG100.jpeg](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/WechatIMG100.jpeg)![0131.jpg](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/0131.jpg)\n- 亲情，死别\n   - 有生以来第一次感受死别，回忆下当时的内心场景，12月7号早上，知道爷爷去世的消息，当时一下子是蒙的，后来回家的路上很平静，回家之后就哭个不停，之后又很平静地帮忙处理丧礼各种事情，直至丧礼结束回杭上班。之后总会偶尔回想起爷爷就潸然泪下。子欲养而亲不待&你可能无法理解留守儿童对爷爷奶奶的爱。\n- 爱好，坚持\n   - 篮球\n      - ![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image.png)\n   - 游泳\n      - ![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%281%29.png)\n   - 吉他\n      - ![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%282%29.png)\n   - 游戏\n      - 花费时间占比较高，约空余时间的30%\n      - ![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%283%29.png)\n- 身体，臃肿\n   - 目前体重73kg，相比两年前的体型，增长了13kg，说实话，有点夸张。\n   - 具体原因无非这两个。\n      - 吃得多。饭量相比刚毕业的时候也增长了许多，对荤菜的需求更加旺盛了。\n      - 动得少。运动量相比刚毕业每周一次骑行或爬山，现在一个月还不一定会有一次大量燃脂运动。\n<a name=\"lS1F3\"></a>\n\n#### 工作篇\n\n- 业务\n   - 智慧服务体系\n   - 数仓\n   - 基建\n      - 组件库\n      - 工具库\n      - 物料平台\n      - 脚手架/模板\n   - 技术栈：Vue&React WebH5系列、Uni-app&Rax跨端系列\n   - 程度：满足日常开发所需\n   - 状态：广度增加，深度欠缺，缺少底层原理研究探索。如小程序双线程设计，跨端框架底层设计等？\n- 面试\n   - 成果：面试50人+，成功入职正式1人，实习1人。\n   - [思考](https://www.yuque.com/tanelmer/cl9fpc/vq52ne)\n- 桎梏&瓶颈\n   - 现有的业务场景下，技术较难深入\n   - [团队开发模式混乱](https://www.yuque.com/tanelmer/cl9fpc/qhbint)，合作体验很差\n   - 个人驱动能力不够，自我提升有限\n   - 职业规划稍显模糊，未来3-5年何去何从\n\n<a name=\"1qfx5\"></a>\n#### 总结\n\n<a name=\"mKYnX\"></a>\n##### 自我肯定\n\n- 生活工作中，持续保持着热情\n- 总体路线，慢慢回归正常\n- 上半年，迷茫不定，下半年，柳暗花明\n<a name=\"bVcFL\"></a>\n\n##### 需要改进\n\n- 生活质感不足，依然还有点拖延症\n- 工作推进不够，想到的事情，没能持续的push\n- 沉迷于干活，日常思考总结少，[博客](https://www.elmerlxy.com/)逐渐停更\n\n---\n\n<a name=\"6HlTM\"></a>\n### 序章\n> 行而不辍，未来可期。《荀子·修身》\n\n立一些flag吧，虽然大多数不一定会完成，但好歹也有个方向\n<a name=\"7GYqv\"></a>\n#### 生活篇\n希望明年多一些旅行，多一些社交，坚持自己热爱的事情，有一些明显可见的成效或收获<br />希望明年多投资一些自身健康，身心健康才是最重要\n<a name=\"bOpiy\"></a>\n#### 工作篇\n不要沦为无情的搬砖机器，要做有意义的事情。即使公司没上市，你也得到了该有的成长&收获。<br />个人\n\n- 对于做过的业务链路，了然于心，思考业务发展各种可能性，大胆猜想，小心求证\n- 对于熟悉的技术体系，深入原理，打造属于自己的知识网图体系，pick一个前端发展方向深入探索\n\n团队\n\n- 文化建设\n   - 团队愿景 - 做医疗行业最牛逼的前端团队？情怀？\n   - 聚餐聚会 - 深入了解交流交心？提升团队凝聚力？\n   - 人员关怀 - (生日庆祝、失恋慰问？)提升团队温度？\n- 技术氛围建设\n   - 组织CR - 提供技术讨论碰撞场合，提升代码质量，降低开发别人代码时口(xin)头(li)吐(ma)槽(niang)次数\n   - 组织分享 - 提升团队总体实力\n   - 组织研究新课题 - 探索新技术，紧跟业界主流，不脱节\n- 基础技术建设\n   - 基础库完善\n   - 开发工具统一 \n   - 开发流程规范\n\n以上都是框架上构想，具体方案是如何落地执行，还需细化，也需要团队同学一起参与建设执行，比如分享的内容，频次？基础库完善的程度？等等。**一个人可以走的很快，但一群人可以走的很远。**\n<a name=\"HZ4yX\"></a>\n#### 希望\n> **梦想还是要有的，万一实现了呢...**\n\n<br />\n","slug":"2020 总结 | 来影 - 柳暗花明又一村","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wh0003r2uf1x2mgp82","content":"<p><strong>关键词：柳暗花明</strong></p>\n<blockquote>\n<p>写作是和自己对话，对话越多，内心就会越平和越坚定。</p>\n</blockquote>\n<p>19年内心浮躁，逃避了与自己的对话，20年稍微坚定了些，想和自己聊一聊。<br />20年是参加工作的第四五个年头了，回首过往，皆为序章。</p>\n<span id=\"more\"></span>\n<p><a name=\"8QKJr\"></a></p>\n<h3 id=\"过往\"><a href=\"#过往\" class=\"headerlink\" title=\"过往\"></a>过往</h3><blockquote>\n<p>不乱于心，不困于情。不畏将来，不念过往。如此，安好。《不宠无惊过一生》</p>\n</blockquote>\n<p><a name=\"xNCyK\"></a></p>\n<h4 id=\"生活篇\"><a href=\"#生活篇\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h4><ul>\n<li>结婚，相守<ul>\n<li>与媳妇结束4年爱情长跑，在国庆中秋双节同日下步入婚姻殿堂。中间虽然有各种曲曲折折，最后也是好事多磨，顺利完婚。往后余生，陪伴前行。</li>\n<li><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/WechatIMG92.jpeg\" alt=\"WechatIMG92.jpeg\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/WechatIMG100.jpeg\" alt=\"WechatIMG100.jpeg\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/0131.jpg\" alt=\"0131.jpg\"></li>\n</ul>\n</li>\n<li>亲情，死别<ul>\n<li>有生以来第一次感受死别，回忆下当时的内心场景，12月7号早上，知道爷爷去世的消息，当时一下子是蒙的，后来回家的路上很平静，回家之后就哭个不停，之后又很平静地帮忙处理丧礼各种事情，直至丧礼结束回杭上班。之后总会偶尔回想起爷爷就潸然泪下。子欲养而亲不待&amp;你可能无法理解留守儿童对爷爷奶奶的爱。</li>\n</ul>\n</li>\n<li>爱好，坚持<ul>\n<li>篮球<ul>\n<li><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>游泳<ul>\n<li><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%281%29.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>吉他<ul>\n<li><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%282%29.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>游戏<ul>\n<li>花费时间占比较高，约空余时间的30%</li>\n<li><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%283%29.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>身体，臃肿<ul>\n<li>目前体重73kg，相比两年前的体型，增长了13kg，说实话，有点夸张。</li>\n<li>具体原因无非这两个。<ul>\n<li>吃得多。饭量相比刚毕业的时候也增长了许多，对荤菜的需求更加旺盛了。</li>\n<li>动得少。运动量相比刚毕业每周一次骑行或爬山，现在一个月还不一定会有一次大量燃脂运动。<br><a name=\"lS1F3\"></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"工作篇\"><a href=\"#工作篇\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h4><ul>\n<li>业务<ul>\n<li>智慧服务体系</li>\n<li>数仓</li>\n<li>基建<ul>\n<li>组件库</li>\n<li>工具库</li>\n<li>物料平台</li>\n<li>脚手架&#x2F;模板</li>\n</ul>\n</li>\n<li>技术栈：Vue&amp;React WebH5系列、Uni-app&amp;Rax跨端系列</li>\n<li>程度：满足日常开发所需</li>\n<li>状态：广度增加，深度欠缺，缺少底层原理研究探索。如小程序双线程设计，跨端框架底层设计等？</li>\n</ul>\n</li>\n<li>面试<ul>\n<li>成果：面试50人+，成功入职正式1人，实习1人。</li>\n<li><a href=\"https://www.yuque.com/tanelmer/cl9fpc/vq52ne\">思考</a></li>\n</ul>\n</li>\n<li>桎梏&amp;瓶颈<ul>\n<li>现有的业务场景下，技术较难深入</li>\n<li><a href=\"https://www.yuque.com/tanelmer/cl9fpc/qhbint\">团队开发模式混乱</a>，合作体验很差</li>\n<li>个人驱动能力不够，自我提升有限</li>\n<li>职业规划稍显模糊，未来3-5年何去何从</li>\n</ul>\n</li>\n</ul>\n<p><a name=\"1qfx5\"></a></p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p><a name=\"mKYnX\"></a></p>\n<h5 id=\"自我肯定\"><a href=\"#自我肯定\" class=\"headerlink\" title=\"自我肯定\"></a>自我肯定</h5><ul>\n<li>生活工作中，持续保持着热情</li>\n<li>总体路线，慢慢回归正常</li>\n<li>上半年，迷茫不定，下半年，柳暗花明<br><a name=\"bVcFL\"></a></li>\n</ul>\n<h5 id=\"需要改进\"><a href=\"#需要改进\" class=\"headerlink\" title=\"需要改进\"></a>需要改进</h5><ul>\n<li>生活质感不足，依然还有点拖延症</li>\n<li>工作推进不够，想到的事情，没能持续的push</li>\n<li>沉迷于干活，日常思考总结少，<a href=\"https://www.elmerlxy.com/\">博客</a>逐渐停更</li>\n</ul>\n<hr>\n<p><a name=\"6HlTM\"></a></p>\n<h3 id=\"序章\"><a href=\"#序章\" class=\"headerlink\" title=\"序章\"></a>序章</h3><blockquote>\n<p>行而不辍，未来可期。《荀子·修身》</p>\n</blockquote>\n<p>立一些flag吧，虽然大多数不一定会完成，但好歹也有个方向<br><a name=\"7GYqv\"></a></p>\n<h4 id=\"生活篇-1\"><a href=\"#生活篇-1\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h4><p>希望明年多一些旅行，多一些社交，坚持自己热爱的事情，有一些明显可见的成效或收获<br />希望明年多投资一些自身健康，身心健康才是最重要<br><a name=\"bOpiy\"></a></p>\n<h4 id=\"工作篇-1\"><a href=\"#工作篇-1\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h4><p>不要沦为无情的搬砖机器，要做有意义的事情。即使公司没上市，你也得到了该有的成长&amp;收获。<br />个人</p>\n<ul>\n<li>对于做过的业务链路，了然于心，思考业务发展各种可能性，大胆猜想，小心求证</li>\n<li>对于熟悉的技术体系，深入原理，打造属于自己的知识网图体系，pick一个前端发展方向深入探索</li>\n</ul>\n<p>团队</p>\n<ul>\n<li>文化建设<ul>\n<li>团队愿景 - 做医疗行业最牛逼的前端团队？情怀？</li>\n<li>聚餐聚会 - 深入了解交流交心？提升团队凝聚力？</li>\n<li>人员关怀 - (生日庆祝、失恋慰问？)提升团队温度？</li>\n</ul>\n</li>\n<li>技术氛围建设<ul>\n<li>组织CR - 提供技术讨论碰撞场合，提升代码质量，降低开发别人代码时口(xin)头(li)吐(ma)槽(niang)次数</li>\n<li>组织分享 - 提升团队总体实力</li>\n<li>组织研究新课题 - 探索新技术，紧跟业界主流，不脱节</li>\n</ul>\n</li>\n<li>基础技术建设<ul>\n<li>基础库完善</li>\n<li>开发工具统一 </li>\n<li>开发流程规范</li>\n</ul>\n</li>\n</ul>\n<p>以上都是框架上构想，具体方案是如何落地执行，还需细化，也需要团队同学一起参与建设执行，比如分享的内容，频次？基础库完善的程度？等等。<strong>一个人可以走的很快，但一群人可以走的很远。</strong><br><a name=\"HZ4yX\"></a></p>\n<h4 id=\"希望\"><a href=\"#希望\" class=\"headerlink\" title=\"希望\"></a>希望</h4><blockquote>\n<p><strong>梦想还是要有的，万一实现了呢…</strong></p>\n</blockquote>\n<br />\n","site":{"data":{}},"length":1407,"excerpt":"<p><strong>关键词：柳暗花明</strong></p>\n<blockquote>\n<p>写作是和自己对话，对话越多，内心就会越平和越坚定。</p>\n</blockquote>\n<p>19年内心浮躁，逃避了与自己的对话，20年稍微坚定了些，想和自己聊一聊。<br />20年是参加工作的第四五个年头了，回首过往，皆为序章。</p>","more":"<p><a name=\"8QKJr\"></a></p>\n<h3 id=\"过往\"><a href=\"#过往\" class=\"headerlink\" title=\"过往\"></a>过往</h3><blockquote>\n<p>不乱于心，不困于情。不畏将来，不念过往。如此，安好。《不宠无惊过一生》</p>\n</blockquote>\n<p><a name=\"xNCyK\"></a></p>\n<h4 id=\"生活篇\"><a href=\"#生活篇\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h4><ul>\n<li>结婚，相守<ul>\n<li>与媳妇结束4年爱情长跑，在国庆中秋双节同日下步入婚姻殿堂。中间虽然有各种曲曲折折，最后也是好事多磨，顺利完婚。往后余生，陪伴前行。</li>\n<li><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/WechatIMG92.jpeg\" alt=\"WechatIMG92.jpeg\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/WechatIMG100.jpeg\" alt=\"WechatIMG100.jpeg\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/0131.jpg\" alt=\"0131.jpg\"></li>\n</ul>\n</li>\n<li>亲情，死别<ul>\n<li>有生以来第一次感受死别，回忆下当时的内心场景，12月7号早上，知道爷爷去世的消息，当时一下子是蒙的，后来回家的路上很平静，回家之后就哭个不停，之后又很平静地帮忙处理丧礼各种事情，直至丧礼结束回杭上班。之后总会偶尔回想起爷爷就潸然泪下。子欲养而亲不待&amp;你可能无法理解留守儿童对爷爷奶奶的爱。</li>\n</ul>\n</li>\n<li>爱好，坚持<ul>\n<li>篮球<ul>\n<li><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>游泳<ul>\n<li><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%281%29.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>吉他<ul>\n<li><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%282%29.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n<li>游戏<ul>\n<li>花费时间占比较高，约空余时间的30%</li>\n<li><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image%20%283%29.png\" alt=\"image.png\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>身体，臃肿<ul>\n<li>目前体重73kg，相比两年前的体型，增长了13kg，说实话，有点夸张。</li>\n<li>具体原因无非这两个。<ul>\n<li>吃得多。饭量相比刚毕业的时候也增长了许多，对荤菜的需求更加旺盛了。</li>\n<li>动得少。运动量相比刚毕业每周一次骑行或爬山，现在一个月还不一定会有一次大量燃脂运动。<br><a name=\"lS1F3\"></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"工作篇\"><a href=\"#工作篇\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h4><ul>\n<li>业务<ul>\n<li>智慧服务体系</li>\n<li>数仓</li>\n<li>基建<ul>\n<li>组件库</li>\n<li>工具库</li>\n<li>物料平台</li>\n<li>脚手架&#x2F;模板</li>\n</ul>\n</li>\n<li>技术栈：Vue&amp;React WebH5系列、Uni-app&amp;Rax跨端系列</li>\n<li>程度：满足日常开发所需</li>\n<li>状态：广度增加，深度欠缺，缺少底层原理研究探索。如小程序双线程设计，跨端框架底层设计等？</li>\n</ul>\n</li>\n<li>面试<ul>\n<li>成果：面试50人+，成功入职正式1人，实习1人。</li>\n<li><a href=\"https://www.yuque.com/tanelmer/cl9fpc/vq52ne\">思考</a></li>\n</ul>\n</li>\n<li>桎梏&amp;瓶颈<ul>\n<li>现有的业务场景下，技术较难深入</li>\n<li><a href=\"https://www.yuque.com/tanelmer/cl9fpc/qhbint\">团队开发模式混乱</a>，合作体验很差</li>\n<li>个人驱动能力不够，自我提升有限</li>\n<li>职业规划稍显模糊，未来3-5年何去何从</li>\n</ul>\n</li>\n</ul>\n<p><a name=\"1qfx5\"></a></p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><p><a name=\"mKYnX\"></a></p>\n<h5 id=\"自我肯定\"><a href=\"#自我肯定\" class=\"headerlink\" title=\"自我肯定\"></a>自我肯定</h5><ul>\n<li>生活工作中，持续保持着热情</li>\n<li>总体路线，慢慢回归正常</li>\n<li>上半年，迷茫不定，下半年，柳暗花明<br><a name=\"bVcFL\"></a></li>\n</ul>\n<h5 id=\"需要改进\"><a href=\"#需要改进\" class=\"headerlink\" title=\"需要改进\"></a>需要改进</h5><ul>\n<li>生活质感不足，依然还有点拖延症</li>\n<li>工作推进不够，想到的事情，没能持续的push</li>\n<li>沉迷于干活，日常思考总结少，<a href=\"https://www.elmerlxy.com/\">博客</a>逐渐停更</li>\n</ul>\n<hr>\n<p><a name=\"6HlTM\"></a></p>\n<h3 id=\"序章\"><a href=\"#序章\" class=\"headerlink\" title=\"序章\"></a>序章</h3><blockquote>\n<p>行而不辍，未来可期。《荀子·修身》</p>\n</blockquote>\n<p>立一些flag吧，虽然大多数不一定会完成，但好歹也有个方向<br><a name=\"7GYqv\"></a></p>\n<h4 id=\"生活篇-1\"><a href=\"#生活篇-1\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h4><p>希望明年多一些旅行，多一些社交，坚持自己热爱的事情，有一些明显可见的成效或收获<br />希望明年多投资一些自身健康，身心健康才是最重要<br><a name=\"bOpiy\"></a></p>\n<h4 id=\"工作篇-1\"><a href=\"#工作篇-1\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h4><p>不要沦为无情的搬砖机器，要做有意义的事情。即使公司没上市，你也得到了该有的成长&amp;收获。<br />个人</p>\n<ul>\n<li>对于做过的业务链路，了然于心，思考业务发展各种可能性，大胆猜想，小心求证</li>\n<li>对于熟悉的技术体系，深入原理，打造属于自己的知识网图体系，pick一个前端发展方向深入探索</li>\n</ul>\n<p>团队</p>\n<ul>\n<li>文化建设<ul>\n<li>团队愿景 - 做医疗行业最牛逼的前端团队？情怀？</li>\n<li>聚餐聚会 - 深入了解交流交心？提升团队凝聚力？</li>\n<li>人员关怀 - (生日庆祝、失恋慰问？)提升团队温度？</li>\n</ul>\n</li>\n<li>技术氛围建设<ul>\n<li>组织CR - 提供技术讨论碰撞场合，提升代码质量，降低开发别人代码时口(xin)头(li)吐(ma)槽(niang)次数</li>\n<li>组织分享 - 提升团队总体实力</li>\n<li>组织研究新课题 - 探索新技术，紧跟业界主流，不脱节</li>\n</ul>\n</li>\n<li>基础技术建设<ul>\n<li>基础库完善</li>\n<li>开发工具统一 </li>\n<li>开发流程规范</li>\n</ul>\n</li>\n</ul>\n<p>以上都是框架上构想，具体方案是如何落地执行，还需细化，也需要团队同学一起参与建设执行，比如分享的内容，频次？基础库完善的程度？等等。<strong>一个人可以走的很快，但一群人可以走的很远。</strong><br><a name=\"HZ4yX\"></a></p>\n<h4 id=\"希望\"><a href=\"#希望\" class=\"headerlink\" title=\"希望\"></a>希望</h4><blockquote>\n<p><strong>梦想还是要有的，万一实现了呢…</strong></p>\n</blockquote>\n<br />"},{"title":"2021 总结 | 来影 - 我向山走去","date":"2022-02-10T16:00:00.000Z","description":"年终总结~","top":null,"_content":"\n### 前言\n万事开头难，写年终总结开头更难，每年写之前都要看着闪烁的光标沉（发）思（呆）几分钟。🐶-。-老规矩。\n\n**关键词：破局**\n> 每天花在自我进步的时间太少了，日复一日的重复，出不来了，就这样被蹂躏着，无法抗拒\n\n<!-- more -->\n\n21年是工作的第五个年头，前几年工作时都没有这样的情况，感觉被困在某个怪圈里动弹不得，丧失斗志，愈发平庸。\n其实早在20年底就已经有达到瓶颈期的感觉了，到了今年上半年工作激情不足，觉得做的事情意义有限，感受不到自身价值，搬砖都是凭着做人的基础责任心在完成任务，缺少了热爱。\n直到后来在某天晚上突然惊醒，觉得这样是不行的，就开始想着如何抽离&破局。然后就噼里啪啦东搞西搞，到年底结果还算可以，破局成功。\n​\n\n### 2020 Flag Review\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644481640490-5e76e8d8-80dd-4145-a072-1ac6d7f45be4.png)\n\n### 2021 总结\n#### 生活篇\n给自己打3.5吧，中规中矩，基本满足预期。😂\n\n1. 旅行 | 3.5 滑雪摔的很惨，喜欢看海，喜欢挑战。。\n\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482481965-612bedc9-9ca0-4fd8-a0e5-d2d6af8b2f3a.png)![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482530529-cf0a38ea-0b38-4eb1-8d0c-6d49c90d4ec7.png)![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482707162-0a6c966d-6dfb-4c7a-8c3e-dcbe5e3f0b42.png)\n\n\n2. 运动 | 3.5 游泳次数没往年多了，一个月就一两次了；打篮球的次数也减少了些，可能是因为受膝伤的影响吧；下半年办了张健身卡，目前去了6次，一个月两三次。😂；\n\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483157909-636f9e76-f541-446a-bbc5-0ab76a5cd85e.png)![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483141982-94281a39-60b6-47f4-9722-48e81eaca8f4.png)![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483196297-beb47abb-1ff3-4891-9e93-6097c463e0b2.png)\n\n\n3. 音乐 | 3.5- 一个月上一次课，继续把玩着我拿把年老失修的木吉他，把乐理吃透了再去进阶。\n\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483469706-0da243f4-c9b7-4696-882b-5f5e6e9833c9.png)\n\n\n4. 社交 | 3.25 老朋友联系还好，反而可能因为pdd而失去一些朋友（都懂的），新的朋友也没认识几个，原因嘛也分析下，就是没有怎么出去走，也没这方面的意识，20年立的flag可能就是说说而已😂。\n4. 阅读 | 3.25 今年读书是超级少，就看了两三本，而且还是偏向于工作的，内心严重缺少精神粮食。。难受。\n\n​\n\n#### 工作篇\n给自己打个3.5+，上半年没激情，下半年心态和行动做出改变，破局后重回正轨。\n​\n\n##### 个人\n**技术层面**，代码编写时间占工作时长的60%，技术深入没什么太多的提升，多了一些广度的探索，还是原来的样子。。\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644486012769-53bace3b-2363-4d17-8f4b-b7987fa96865.png)\n有段时间我开始怀疑是不是了解的方面太多了，导致没法专一放一个方面深入。或者说还没找到一个合适深入的点去切入。。。或者是受限于xxx。\n​\n\n年初开始学习typescript，并推广至团队，目前团队已全面使用ts开发项目。\n​\n\n小程序worker、render双线程模型研究，基本了解双线程底层的设计原理。\n\n\n研究可视化搭建体系方案，集团侧UIPaaS 接入 or 依赖lowcode引擎自建，年后开始确定接入方案并启动。\n\n\n**业务层面**，今年多了解了些。主要变化在，会去思考业务背后的根本逻辑是什么，基本的商业模式是什么，从而在产品侧怎么去体现，流程是否完善，体验是否顺滑，后续的技术规划是否能支持业务发展，业务发展的其他可能性。。比去年稍微多思考了一些。多深入了些。\n\n---\n\n##### 团队\n今年做了小团队的TL，然后觉得到了这一步，应该是有些责任在身上的，想起之前看过scott写过的一篇文章“**好的leader应该是怎样的**” 还依稀记得一些原则，并且我自己也是认同的，**业务**、**团队的成长第一位**。所以想着想着开始做了一系列事情。\n\n1. 整理团队的各种文档，新人须知，项目文档，技术&业务分享，对接文档..，梳理了文档模板规范。文档如果写不清晰，代码也是写不好的。我一直是这样的认为的。\n1. 明确各个同学的业务站位安排，**“没有无用的人，只有放错位置的人”**。\n1. push大团队使用统一的项目管理工具做项目管理，而不是口口相传，各种需求丢失，胡乱甩锅，无法复盘。对于一线的开发同学明显改变就是，舒服的项目开发流程体验，不会再打黑工了，流程进度也不混乱了。\n1. 推行CR，规范发布流程，并坚持执行下去，减少线上事故，保障稳定。\n1. 坚持投入基建，保障基础的开发体验，打造组件库，工具库，脚手架等等。\n\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644488546838-f9c7d731-a893-405f-a62b-b0ca3aec04c1.png)\n\n6. 打造良好的团队技术氛围，坚持每月分享，业务or技术or有趣的研究，等等等。![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644487254911-fc8457b5-2916-4a0d-971c-c3f402b15131.png)\n6. 本着更了解一些团队同学，互相之间能多一些信任。然后自己每个月花时间找他们one on one深入聊一次。![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644487647105-ccf319b0-338e-4278-a482-dc865f05acb7.png)\n6. 还有很多的小事情，小改变正在悄然的发生。。。结果也逐渐变好。\n\n\n\n### 2022 Flag\n稍微立一下吧，总不能没有些小目标吧。\n\n1. 有用的社交要增加，无效社交减少。。这个貌似不好量化，纯靠主观。\n1. 多看一些书，少浪费一些时间，多一些输入，10-20本左右吧。\n1. 提升node的使用率，找一些合适的使用场景去深入下。\n1. 重新搞下自己的博客，现在整个文章的发布太乱了，图床也不好用，评论系统也没接，很多东西“人工智能”的很，虽然用的不频繁，但对于强迫症患者很难受呀。。。\n1. 让团队更空闲一些，留出20%时间去做一些更有意义的事情，而不是重复搬砖。\n1. 暂时先这样吧，行而不辍，未来可期~\n","source":"_posts/2021 总结 | 来影 - 我向山走去.md","raw":"---\ntitle: 2021 总结 | 来影 - 我向山走去\ndate: 2022-02-11\ncategories: 生活随笔\ntags: [随笔]\ndescription: 年终总结~\ntop:\n---\n\n### 前言\n万事开头难，写年终总结开头更难，每年写之前都要看着闪烁的光标沉（发）思（呆）几分钟。🐶-。-老规矩。\n\n**关键词：破局**\n> 每天花在自我进步的时间太少了，日复一日的重复，出不来了，就这样被蹂躏着，无法抗拒\n\n<!-- more -->\n\n21年是工作的第五个年头，前几年工作时都没有这样的情况，感觉被困在某个怪圈里动弹不得，丧失斗志，愈发平庸。\n其实早在20年底就已经有达到瓶颈期的感觉了，到了今年上半年工作激情不足，觉得做的事情意义有限，感受不到自身价值，搬砖都是凭着做人的基础责任心在完成任务，缺少了热爱。\n直到后来在某天晚上突然惊醒，觉得这样是不行的，就开始想着如何抽离&破局。然后就噼里啪啦东搞西搞，到年底结果还算可以，破局成功。\n​\n\n### 2020 Flag Review\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644481640490-5e76e8d8-80dd-4145-a072-1ac6d7f45be4.png)\n\n### 2021 总结\n#### 生活篇\n给自己打3.5吧，中规中矩，基本满足预期。😂\n\n1. 旅行 | 3.5 滑雪摔的很惨，喜欢看海，喜欢挑战。。\n\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482481965-612bedc9-9ca0-4fd8-a0e5-d2d6af8b2f3a.png)![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482530529-cf0a38ea-0b38-4eb1-8d0c-6d49c90d4ec7.png)![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482707162-0a6c966d-6dfb-4c7a-8c3e-dcbe5e3f0b42.png)\n\n\n2. 运动 | 3.5 游泳次数没往年多了，一个月就一两次了；打篮球的次数也减少了些，可能是因为受膝伤的影响吧；下半年办了张健身卡，目前去了6次，一个月两三次。😂；\n\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483157909-636f9e76-f541-446a-bbc5-0ab76a5cd85e.png)![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483141982-94281a39-60b6-47f4-9722-48e81eaca8f4.png)![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483196297-beb47abb-1ff3-4891-9e93-6097c463e0b2.png)\n\n\n3. 音乐 | 3.5- 一个月上一次课，继续把玩着我拿把年老失修的木吉他，把乐理吃透了再去进阶。\n\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483469706-0da243f4-c9b7-4696-882b-5f5e6e9833c9.png)\n\n\n4. 社交 | 3.25 老朋友联系还好，反而可能因为pdd而失去一些朋友（都懂的），新的朋友也没认识几个，原因嘛也分析下，就是没有怎么出去走，也没这方面的意识，20年立的flag可能就是说说而已😂。\n4. 阅读 | 3.25 今年读书是超级少，就看了两三本，而且还是偏向于工作的，内心严重缺少精神粮食。。难受。\n\n​\n\n#### 工作篇\n给自己打个3.5+，上半年没激情，下半年心态和行动做出改变，破局后重回正轨。\n​\n\n##### 个人\n**技术层面**，代码编写时间占工作时长的60%，技术深入没什么太多的提升，多了一些广度的探索，还是原来的样子。。\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644486012769-53bace3b-2363-4d17-8f4b-b7987fa96865.png)\n有段时间我开始怀疑是不是了解的方面太多了，导致没法专一放一个方面深入。或者说还没找到一个合适深入的点去切入。。。或者是受限于xxx。\n​\n\n年初开始学习typescript，并推广至团队，目前团队已全面使用ts开发项目。\n​\n\n小程序worker、render双线程模型研究，基本了解双线程底层的设计原理。\n\n\n研究可视化搭建体系方案，集团侧UIPaaS 接入 or 依赖lowcode引擎自建，年后开始确定接入方案并启动。\n\n\n**业务层面**，今年多了解了些。主要变化在，会去思考业务背后的根本逻辑是什么，基本的商业模式是什么，从而在产品侧怎么去体现，流程是否完善，体验是否顺滑，后续的技术规划是否能支持业务发展，业务发展的其他可能性。。比去年稍微多思考了一些。多深入了些。\n\n---\n\n##### 团队\n今年做了小团队的TL，然后觉得到了这一步，应该是有些责任在身上的，想起之前看过scott写过的一篇文章“**好的leader应该是怎样的**” 还依稀记得一些原则，并且我自己也是认同的，**业务**、**团队的成长第一位**。所以想着想着开始做了一系列事情。\n\n1. 整理团队的各种文档，新人须知，项目文档，技术&业务分享，对接文档..，梳理了文档模板规范。文档如果写不清晰，代码也是写不好的。我一直是这样的认为的。\n1. 明确各个同学的业务站位安排，**“没有无用的人，只有放错位置的人”**。\n1. push大团队使用统一的项目管理工具做项目管理，而不是口口相传，各种需求丢失，胡乱甩锅，无法复盘。对于一线的开发同学明显改变就是，舒服的项目开发流程体验，不会再打黑工了，流程进度也不混乱了。\n1. 推行CR，规范发布流程，并坚持执行下去，减少线上事故，保障稳定。\n1. 坚持投入基建，保障基础的开发体验，打造组件库，工具库，脚手架等等。\n\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644488546838-f9c7d731-a893-405f-a62b-b0ca3aec04c1.png)\n\n6. 打造良好的团队技术氛围，坚持每月分享，业务or技术or有趣的研究，等等等。![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644487254911-fc8457b5-2916-4a0d-971c-c3f402b15131.png)\n6. 本着更了解一些团队同学，互相之间能多一些信任。然后自己每个月花时间找他们one on one深入聊一次。![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644487647105-ccf319b0-338e-4278-a482-dc865f05acb7.png)\n6. 还有很多的小事情，小改变正在悄然的发生。。。结果也逐渐变好。\n\n\n\n### 2022 Flag\n稍微立一下吧，总不能没有些小目标吧。\n\n1. 有用的社交要增加，无效社交减少。。这个貌似不好量化，纯靠主观。\n1. 多看一些书，少浪费一些时间，多一些输入，10-20本左右吧。\n1. 提升node的使用率，找一些合适的使用场景去深入下。\n1. 重新搞下自己的博客，现在整个文章的发布太乱了，图床也不好用，评论系统也没接，很多东西“人工智能”的很，虽然用的不频繁，但对于强迫症患者很难受呀。。。\n1. 让团队更空闲一些，留出20%时间去做一些更有意义的事情，而不是重复搬砖。\n1. 暂时先这样吧，行而不辍，未来可期~\n","slug":"2021 总结 | 来影 - 我向山走去","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wi0006r2ufaop3fhuh","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>万事开头难，写年终总结开头更难，每年写之前都要看着闪烁的光标沉（发）思（呆）几分钟。🐶-。-老规矩。</p>\n<p><strong>关键词：破局</strong></p>\n<blockquote>\n<p>每天花在自我进步的时间太少了，日复一日的重复，出不来了，就这样被蹂躏着，无法抗拒</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>21年是工作的第五个年头，前几年工作时都没有这样的情况，感觉被困在某个怪圈里动弹不得，丧失斗志，愈发平庸。<br>其实早在20年底就已经有达到瓶颈期的感觉了，到了今年上半年工作激情不足，觉得做的事情意义有限，感受不到自身价值，搬砖都是凭着做人的基础责任心在完成任务，缺少了热爱。<br>直到后来在某天晚上突然惊醒，觉得这样是不行的，就开始想着如何抽离&amp;破局。然后就噼里啪啦东搞西搞，到年底结果还算可以，破局成功。<br>​</p>\n<h3 id=\"2020-Flag-Review\"><a href=\"#2020-Flag-Review\" class=\"headerlink\" title=\"2020 Flag Review\"></a>2020 Flag Review</h3><p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644481640490-5e76e8d8-80dd-4145-a072-1ac6d7f45be4.png\" alt=\"image.png\"></p>\n<h3 id=\"2021-总结\"><a href=\"#2021-总结\" class=\"headerlink\" title=\"2021 总结\"></a>2021 总结</h3><h4 id=\"生活篇\"><a href=\"#生活篇\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h4><p>给自己打3.5吧，中规中矩，基本满足预期。😂</p>\n<ol>\n<li>旅行 | 3.5 滑雪摔的很惨，喜欢看海，喜欢挑战。。</li>\n</ol>\n<p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482481965-612bedc9-9ca0-4fd8-a0e5-d2d6af8b2f3a.png\" alt=\"image.png\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482530529-cf0a38ea-0b38-4eb1-8d0c-6d49c90d4ec7.png\" alt=\"image.png\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482707162-0a6c966d-6dfb-4c7a-8c3e-dcbe5e3f0b42.png\" alt=\"image.png\"></p>\n<ol start=\"2\">\n<li>运动 | 3.5 游泳次数没往年多了，一个月就一两次了；打篮球的次数也减少了些，可能是因为受膝伤的影响吧；下半年办了张健身卡，目前去了6次，一个月两三次。😂；</li>\n</ol>\n<p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483157909-636f9e76-f541-446a-bbc5-0ab76a5cd85e.png\" alt=\"image.png\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483141982-94281a39-60b6-47f4-9722-48e81eaca8f4.png\" alt=\"image.png\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483196297-beb47abb-1ff3-4891-9e93-6097c463e0b2.png\" alt=\"image.png\"></p>\n<ol start=\"3\">\n<li>音乐 | 3.5- 一个月上一次课，继续把玩着我拿把年老失修的木吉他，把乐理吃透了再去进阶。</li>\n</ol>\n<p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483469706-0da243f4-c9b7-4696-882b-5f5e6e9833c9.png\" alt=\"image.png\"></p>\n<ol start=\"4\">\n<li>社交 | 3.25 老朋友联系还好，反而可能因为pdd而失去一些朋友（都懂的），新的朋友也没认识几个，原因嘛也分析下，就是没有怎么出去走，也没这方面的意识，20年立的flag可能就是说说而已😂。</li>\n<li>阅读 | 3.25 今年读书是超级少，就看了两三本，而且还是偏向于工作的，内心严重缺少精神粮食。。难受。</li>\n</ol>\n<p>​</p>\n<h4 id=\"工作篇\"><a href=\"#工作篇\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h4><p>给自己打个3.5+，上半年没激情，下半年心态和行动做出改变，破局后重回正轨。<br>​</p>\n<h5 id=\"个人\"><a href=\"#个人\" class=\"headerlink\" title=\"个人\"></a>个人</h5><p><strong>技术层面</strong>，代码编写时间占工作时长的60%，技术深入没什么太多的提升，多了一些广度的探索，还是原来的样子。。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644486012769-53bace3b-2363-4d17-8f4b-b7987fa96865.png\" alt=\"image.png\"><br>有段时间我开始怀疑是不是了解的方面太多了，导致没法专一放一个方面深入。或者说还没找到一个合适深入的点去切入。。。或者是受限于xxx。<br>​</p>\n<p>年初开始学习typescript，并推广至团队，目前团队已全面使用ts开发项目。<br>​</p>\n<p>小程序worker、render双线程模型研究，基本了解双线程底层的设计原理。</p>\n<p>研究可视化搭建体系方案，集团侧UIPaaS 接入 or 依赖lowcode引擎自建，年后开始确定接入方案并启动。</p>\n<p><strong>业务层面</strong>，今年多了解了些。主要变化在，会去思考业务背后的根本逻辑是什么，基本的商业模式是什么，从而在产品侧怎么去体现，流程是否完善，体验是否顺滑，后续的技术规划是否能支持业务发展，业务发展的其他可能性。。比去年稍微多思考了一些。多深入了些。</p>\n<hr>\n<h5 id=\"团队\"><a href=\"#团队\" class=\"headerlink\" title=\"团队\"></a>团队</h5><p>今年做了小团队的TL，然后觉得到了这一步，应该是有些责任在身上的，想起之前看过scott写过的一篇文章“<strong>好的leader应该是怎样的</strong>” 还依稀记得一些原则，并且我自己也是认同的，<strong>业务</strong>、<strong>团队的成长第一位</strong>。所以想着想着开始做了一系列事情。</p>\n<ol>\n<li>整理团队的各种文档，新人须知，项目文档，技术&amp;业务分享，对接文档..，梳理了文档模板规范。文档如果写不清晰，代码也是写不好的。我一直是这样的认为的。</li>\n<li>明确各个同学的业务站位安排，<strong>“没有无用的人，只有放错位置的人”</strong>。</li>\n<li>push大团队使用统一的项目管理工具做项目管理，而不是口口相传，各种需求丢失，胡乱甩锅，无法复盘。对于一线的开发同学明显改变就是，舒服的项目开发流程体验，不会再打黑工了，流程进度也不混乱了。</li>\n<li>推行CR，规范发布流程，并坚持执行下去，减少线上事故，保障稳定。</li>\n<li>坚持投入基建，保障基础的开发体验，打造组件库，工具库，脚手架等等。</li>\n</ol>\n<p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644488546838-f9c7d731-a893-405f-a62b-b0ca3aec04c1.png\" alt=\"image.png\"></p>\n<ol start=\"6\">\n<li>打造良好的团队技术氛围，坚持每月分享，业务or技术or有趣的研究，等等等。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644487254911-fc8457b5-2916-4a0d-971c-c3f402b15131.png\" alt=\"image.png\"></li>\n<li>本着更了解一些团队同学，互相之间能多一些信任。然后自己每个月花时间找他们one on one深入聊一次。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644487647105-ccf319b0-338e-4278-a482-dc865f05acb7.png\" alt=\"image.png\"></li>\n<li>还有很多的小事情，小改变正在悄然的发生。。。结果也逐渐变好。</li>\n</ol>\n<h3 id=\"2022-Flag\"><a href=\"#2022-Flag\" class=\"headerlink\" title=\"2022 Flag\"></a>2022 Flag</h3><p>稍微立一下吧，总不能没有些小目标吧。</p>\n<ol>\n<li>有用的社交要增加，无效社交减少。。这个貌似不好量化，纯靠主观。</li>\n<li>多看一些书，少浪费一些时间，多一些输入，10-20本左右吧。</li>\n<li>提升node的使用率，找一些合适的使用场景去深入下。</li>\n<li>重新搞下自己的博客，现在整个文章的发布太乱了，图床也不好用，评论系统也没接，很多东西“人工智能”的很，虽然用的不频繁，但对于强迫症患者很难受呀。。。</li>\n<li>让团队更空闲一些，留出20%时间去做一些更有意义的事情，而不是重复搬砖。</li>\n<li>暂时先这样吧，行而不辍，未来可期~</li>\n</ol>\n","site":{"data":{}},"length":1799,"excerpt":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>万事开头难，写年终总结开头更难，每年写之前都要看着闪烁的光标沉（发）思（呆）几分钟。🐶-。-老规矩。</p>\n<p><strong>关键词：破局</strong></p>\n<blockquote>\n<p>每天花在自我进步的时间太少了，日复一日的重复，出不来了，就这样被蹂躏着，无法抗拒</p>\n</blockquote>","more":"<p>21年是工作的第五个年头，前几年工作时都没有这样的情况，感觉被困在某个怪圈里动弹不得，丧失斗志，愈发平庸。<br>其实早在20年底就已经有达到瓶颈期的感觉了，到了今年上半年工作激情不足，觉得做的事情意义有限，感受不到自身价值，搬砖都是凭着做人的基础责任心在完成任务，缺少了热爱。<br>直到后来在某天晚上突然惊醒，觉得这样是不行的，就开始想着如何抽离&amp;破局。然后就噼里啪啦东搞西搞，到年底结果还算可以，破局成功。<br>​</p>\n<h3 id=\"2020-Flag-Review\"><a href=\"#2020-Flag-Review\" class=\"headerlink\" title=\"2020 Flag Review\"></a>2020 Flag Review</h3><p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644481640490-5e76e8d8-80dd-4145-a072-1ac6d7f45be4.png\" alt=\"image.png\"></p>\n<h3 id=\"2021-总结\"><a href=\"#2021-总结\" class=\"headerlink\" title=\"2021 总结\"></a>2021 总结</h3><h4 id=\"生活篇\"><a href=\"#生活篇\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h4><p>给自己打3.5吧，中规中矩，基本满足预期。😂</p>\n<ol>\n<li>旅行 | 3.5 滑雪摔的很惨，喜欢看海，喜欢挑战。。</li>\n</ol>\n<p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482481965-612bedc9-9ca0-4fd8-a0e5-d2d6af8b2f3a.png\" alt=\"image.png\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482530529-cf0a38ea-0b38-4eb1-8d0c-6d49c90d4ec7.png\" alt=\"image.png\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644482707162-0a6c966d-6dfb-4c7a-8c3e-dcbe5e3f0b42.png\" alt=\"image.png\"></p>\n<ol start=\"2\">\n<li>运动 | 3.5 游泳次数没往年多了，一个月就一两次了；打篮球的次数也减少了些，可能是因为受膝伤的影响吧；下半年办了张健身卡，目前去了6次，一个月两三次。😂；</li>\n</ol>\n<p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483157909-636f9e76-f541-446a-bbc5-0ab76a5cd85e.png\" alt=\"image.png\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483141982-94281a39-60b6-47f4-9722-48e81eaca8f4.png\" alt=\"image.png\"><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483196297-beb47abb-1ff3-4891-9e93-6097c463e0b2.png\" alt=\"image.png\"></p>\n<ol start=\"3\">\n<li>音乐 | 3.5- 一个月上一次课，继续把玩着我拿把年老失修的木吉他，把乐理吃透了再去进阶。</li>\n</ol>\n<p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644483469706-0da243f4-c9b7-4696-882b-5f5e6e9833c9.png\" alt=\"image.png\"></p>\n<ol start=\"4\">\n<li>社交 | 3.25 老朋友联系还好，反而可能因为pdd而失去一些朋友（都懂的），新的朋友也没认识几个，原因嘛也分析下，就是没有怎么出去走，也没这方面的意识，20年立的flag可能就是说说而已😂。</li>\n<li>阅读 | 3.25 今年读书是超级少，就看了两三本，而且还是偏向于工作的，内心严重缺少精神粮食。。难受。</li>\n</ol>\n<p>​</p>\n<h4 id=\"工作篇\"><a href=\"#工作篇\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h4><p>给自己打个3.5+，上半年没激情，下半年心态和行动做出改变，破局后重回正轨。<br>​</p>\n<h5 id=\"个人\"><a href=\"#个人\" class=\"headerlink\" title=\"个人\"></a>个人</h5><p><strong>技术层面</strong>，代码编写时间占工作时长的60%，技术深入没什么太多的提升，多了一些广度的探索，还是原来的样子。。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644486012769-53bace3b-2363-4d17-8f4b-b7987fa96865.png\" alt=\"image.png\"><br>有段时间我开始怀疑是不是了解的方面太多了，导致没法专一放一个方面深入。或者说还没找到一个合适深入的点去切入。。。或者是受限于xxx。<br>​</p>\n<p>年初开始学习typescript，并推广至团队，目前团队已全面使用ts开发项目。<br>​</p>\n<p>小程序worker、render双线程模型研究，基本了解双线程底层的设计原理。</p>\n<p>研究可视化搭建体系方案，集团侧UIPaaS 接入 or 依赖lowcode引擎自建，年后开始确定接入方案并启动。</p>\n<p><strong>业务层面</strong>，今年多了解了些。主要变化在，会去思考业务背后的根本逻辑是什么，基本的商业模式是什么，从而在产品侧怎么去体现，流程是否完善，体验是否顺滑，后续的技术规划是否能支持业务发展，业务发展的其他可能性。。比去年稍微多思考了一些。多深入了些。</p>\n<hr>\n<h5 id=\"团队\"><a href=\"#团队\" class=\"headerlink\" title=\"团队\"></a>团队</h5><p>今年做了小团队的TL，然后觉得到了这一步，应该是有些责任在身上的，想起之前看过scott写过的一篇文章“<strong>好的leader应该是怎样的</strong>” 还依稀记得一些原则，并且我自己也是认同的，<strong>业务</strong>、<strong>团队的成长第一位</strong>。所以想着想着开始做了一系列事情。</p>\n<ol>\n<li>整理团队的各种文档，新人须知，项目文档，技术&amp;业务分享，对接文档..，梳理了文档模板规范。文档如果写不清晰，代码也是写不好的。我一直是这样的认为的。</li>\n<li>明确各个同学的业务站位安排，<strong>“没有无用的人，只有放错位置的人”</strong>。</li>\n<li>push大团队使用统一的项目管理工具做项目管理，而不是口口相传，各种需求丢失，胡乱甩锅，无法复盘。对于一线的开发同学明显改变就是，舒服的项目开发流程体验，不会再打黑工了，流程进度也不混乱了。</li>\n<li>推行CR，规范发布流程，并坚持执行下去，减少线上事故，保障稳定。</li>\n<li>坚持投入基建，保障基础的开发体验，打造组件库，工具库，脚手架等等。</li>\n</ol>\n<p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644488546838-f9c7d731-a893-405f-a62b-b0ca3aec04c1.png\" alt=\"image.png\"></p>\n<ol start=\"6\">\n<li>打造良好的团队技术氛围，坚持每月分享，业务or技术or有趣的研究，等等等。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644487254911-fc8457b5-2916-4a0d-971c-c3f402b15131.png\" alt=\"image.png\"></li>\n<li>本着更了解一些团队同学，互相之间能多一些信任。然后自己每个月花时间找他们one on one深入聊一次。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/1644487647105-ccf319b0-338e-4278-a482-dc865f05acb7.png\" alt=\"image.png\"></li>\n<li>还有很多的小事情，小改变正在悄然的发生。。。结果也逐渐变好。</li>\n</ol>\n<h3 id=\"2022-Flag\"><a href=\"#2022-Flag\" class=\"headerlink\" title=\"2022 Flag\"></a>2022 Flag</h3><p>稍微立一下吧，总不能没有些小目标吧。</p>\n<ol>\n<li>有用的社交要增加，无效社交减少。。这个貌似不好量化，纯靠主观。</li>\n<li>多看一些书，少浪费一些时间，多一些输入，10-20本左右吧。</li>\n<li>提升node的使用率，找一些合适的使用场景去深入下。</li>\n<li>重新搞下自己的博客，现在整个文章的发布太乱了，图床也不好用，评论系统也没接，很多东西“人工智能”的很，虽然用的不频繁，但对于强迫症患者很难受呀。。。</li>\n<li>让团队更空闲一些，留出20%时间去做一些更有意义的事情，而不是重复搬砖。</li>\n<li>暂时先这样吧，行而不辍，未来可期~</li>\n</ol>"},{"title":"2022 总结 | 来影 - 若能重来","date":"2023-02-27T16:00:00.000Z","description":"年终总结~","top":null,"_content":"\n## 前言\n人生处处是选择，有些是被迫，有些是自主。但不管怎么样，你的选择决定了你未来的路，是好是坏，是苦是甜还是自己说了算。22年做了一些选择，从阿里健康离职、提前还了车贷、尝试一些别的可能。从目前的结果来看，这些选择大抵都是正确的。至于未来如何，那就不得而知了。\n\n22年的关键词：**静待光明**\n> **黎明前的黑暗最难熬~**\n\n<!-- more -->\n\n### 21年Flag Review\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image6.png)\n\n**1、2、4、5（完成度80%），3（完成度10%）**\n今年学会了杭麻，认识了一波麻友，无效社交+1，但接触的圈子并无扩大，还得努力提升~\n\n今年看的书刚好10本左右，印象深刻的《认知觉醒》《人生有何意义》《你一年的8760小时》《知行》等等，后面准备读读《黑客与画家》《月亮与六便士》，看看大佬推荐的~\n\nNode使用率，还是原来的模样，写写小脚本~ 没有稍微巨大点的完整项目应用，23年要重视了，没有场景也要制造场景。\n\n博客文章发布还是依然用语雀-然后同步到本地再上传到服务器部署，为什么还用语雀，可能还是因为我习惯了语雀的编辑器，不想再用回md。评论系统接了三方的[valine](https://valine.js.org/)（这款系统用起来还蛮好的），虽然没啥人评论，但也至少是麻雀虽小了。\n\n至于团队的提效，还是做了一些事情来释放大家的业务压力了，从基本能保持6.7点下班的结果来看，应该是有效果的。\n\n## 22年总结\n### 生活篇\n\n**游玩**：今年出去玩的地方大多数杭州周边，没有往远跑，有点遗憾。\n![7a95c0687c4a87ab571e622c479579f6.jpg](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/7a95c0687c4a87ab571e622c479579f6%20%281%29.jpg)\n\n**运动**：陪着媳妇跑了两个月的步，能减肥是真的，伤膝盖也是真的。打球的次数比较少。\n\n**其他：**音乐、摄影还是一如既然的停滞不前，可能就是没那么热爱了。游戏依然玩的相对来说比较多，每周投入一天左右。身体方面，体检结果也跟上年不差上下，但是体重却是在往上增长，哎，说多了都是泪。。\n\n总的来说，今年的生活和往年一样平凡~没啥太大变化，偶尔惊喜，偶尔失落，这就是生活。**不管生活怎样，现实怎样，依然还是要保持热爱！**\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image2.png)\n\n### 工作篇\n\n因为今年从健康离职，脱离了集团，最大的变化在于之前集团提供的能力都要自己处理了。所幸，相关的工具都有对应的替代品，否则就要耗费人力去做研发了，虽然我很乐意，但不一定是最适合现阶段的公司。\n\n基本上集团的工具，都无缝的切换到阿里云的工具。**代码仓库、包管理仓库、项目管理工具、发布平台等都做了对应的切换。**\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image3.png)\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image4.png)\n\n然后就是团队内规划的一些事情，基本上也按照规划实现了。\n\n1. 规范产品需求排期，优先级，推进产品详细评审，开发详细估时，任务拆分到人，责任到人。\n2. 持续推进基建，组件库完善，多项目发布流程、CR机制完善。\n3. 强制团队技术分享，提升技术氛围，增强团队实力。\n4. 建立团队人才梯队，人才培养机制。\n\n今年个人来说，写代码的时间变少了，更多的是想着怎么去提升大家的实力，去发展更多的业务，肩负更多的责任。虽然不像之前那样事必躬亲，也做到了该知道的都了然于心了。\n\n---\n\n\n最后，一年回顾下来发现一个道理，很多事情可能看起来没什么希望，但是你真正去做了，才能了解其中的事实，实践出真知。你觉得跟你知道是两回事，**知行合一**。\n\n若能重来，**还是会走原来的路，不回头，一路向前。**\n\n## Flag\n给23年也立些Flag\n\n1. 继续扩大社交圈子，不要被程序员的思维所约束了，多见识见识外面的社会和世界，无论黑暗或光明。\n2. 工作层面还要继续突破，不要温水煮青蛙，时刻保持警醒，还有哪些能做的，或者说还有哪些事是必须去做的。\n3. 生活方面要更丰富些，多点惊喜，少点惊吓。注意身体，保持锻炼。\n4. **就算艰难，也要热爱喜欢的一切，并坚持付出**。\n\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image5%20%281%29.png)\n","source":"_posts/2022 总结 | 来影 - 若能重来.md","raw":"---\ntitle: 2022 总结 | 来影 - 若能重来\ndate: 2023-02-28\ncategories: 生活随笔\ntags: [随笔]\ndescription: 年终总结~\ntop:\n---\n\n## 前言\n人生处处是选择，有些是被迫，有些是自主。但不管怎么样，你的选择决定了你未来的路，是好是坏，是苦是甜还是自己说了算。22年做了一些选择，从阿里健康离职、提前还了车贷、尝试一些别的可能。从目前的结果来看，这些选择大抵都是正确的。至于未来如何，那就不得而知了。\n\n22年的关键词：**静待光明**\n> **黎明前的黑暗最难熬~**\n\n<!-- more -->\n\n### 21年Flag Review\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image6.png)\n\n**1、2、4、5（完成度80%），3（完成度10%）**\n今年学会了杭麻，认识了一波麻友，无效社交+1，但接触的圈子并无扩大，还得努力提升~\n\n今年看的书刚好10本左右，印象深刻的《认知觉醒》《人生有何意义》《你一年的8760小时》《知行》等等，后面准备读读《黑客与画家》《月亮与六便士》，看看大佬推荐的~\n\nNode使用率，还是原来的模样，写写小脚本~ 没有稍微巨大点的完整项目应用，23年要重视了，没有场景也要制造场景。\n\n博客文章发布还是依然用语雀-然后同步到本地再上传到服务器部署，为什么还用语雀，可能还是因为我习惯了语雀的编辑器，不想再用回md。评论系统接了三方的[valine](https://valine.js.org/)（这款系统用起来还蛮好的），虽然没啥人评论，但也至少是麻雀虽小了。\n\n至于团队的提效，还是做了一些事情来释放大家的业务压力了，从基本能保持6.7点下班的结果来看，应该是有效果的。\n\n## 22年总结\n### 生活篇\n\n**游玩**：今年出去玩的地方大多数杭州周边，没有往远跑，有点遗憾。\n![7a95c0687c4a87ab571e622c479579f6.jpg](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/7a95c0687c4a87ab571e622c479579f6%20%281%29.jpg)\n\n**运动**：陪着媳妇跑了两个月的步，能减肥是真的，伤膝盖也是真的。打球的次数比较少。\n\n**其他：**音乐、摄影还是一如既然的停滞不前，可能就是没那么热爱了。游戏依然玩的相对来说比较多，每周投入一天左右。身体方面，体检结果也跟上年不差上下，但是体重却是在往上增长，哎，说多了都是泪。。\n\n总的来说，今年的生活和往年一样平凡~没啥太大变化，偶尔惊喜，偶尔失落，这就是生活。**不管生活怎样，现实怎样，依然还是要保持热爱！**\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image2.png)\n\n### 工作篇\n\n因为今年从健康离职，脱离了集团，最大的变化在于之前集团提供的能力都要自己处理了。所幸，相关的工具都有对应的替代品，否则就要耗费人力去做研发了，虽然我很乐意，但不一定是最适合现阶段的公司。\n\n基本上集团的工具，都无缝的切换到阿里云的工具。**代码仓库、包管理仓库、项目管理工具、发布平台等都做了对应的切换。**\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image3.png)\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image4.png)\n\n然后就是团队内规划的一些事情，基本上也按照规划实现了。\n\n1. 规范产品需求排期，优先级，推进产品详细评审，开发详细估时，任务拆分到人，责任到人。\n2. 持续推进基建，组件库完善，多项目发布流程、CR机制完善。\n3. 强制团队技术分享，提升技术氛围，增强团队实力。\n4. 建立团队人才梯队，人才培养机制。\n\n今年个人来说，写代码的时间变少了，更多的是想着怎么去提升大家的实力，去发展更多的业务，肩负更多的责任。虽然不像之前那样事必躬亲，也做到了该知道的都了然于心了。\n\n---\n\n\n最后，一年回顾下来发现一个道理，很多事情可能看起来没什么希望，但是你真正去做了，才能了解其中的事实，实践出真知。你觉得跟你知道是两回事，**知行合一**。\n\n若能重来，**还是会走原来的路，不回头，一路向前。**\n\n## Flag\n给23年也立些Flag\n\n1. 继续扩大社交圈子，不要被程序员的思维所约束了，多见识见识外面的社会和世界，无论黑暗或光明。\n2. 工作层面还要继续突破，不要温水煮青蛙，时刻保持警醒，还有哪些能做的，或者说还有哪些事是必须去做的。\n3. 生活方面要更丰富些，多点惊喜，少点惊吓。注意身体，保持锻炼。\n4. **就算艰难，也要热爱喜欢的一切，并坚持付出**。\n\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image5%20%281%29.png)\n","slug":"2022 总结 | 来影 - 若能重来","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wj0007r2ufg3x94gj2","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>人生处处是选择，有些是被迫，有些是自主。但不管怎么样，你的选择决定了你未来的路，是好是坏，是苦是甜还是自己说了算。22年做了一些选择，从阿里健康离职、提前还了车贷、尝试一些别的可能。从目前的结果来看，这些选择大抵都是正确的。至于未来如何，那就不得而知了。</p>\n<p>22年的关键词：<strong>静待光明</strong></p>\n<blockquote>\n<p><strong>黎明前的黑暗最难熬~</strong></p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h3 id=\"21年Flag-Review\"><a href=\"#21年Flag-Review\" class=\"headerlink\" title=\"21年Flag Review\"></a>21年Flag Review</h3><p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image6.png\" alt=\"image.png\"></p>\n<p><strong>1、2、4、5（完成度80%），3（完成度10%）</strong><br>今年学会了杭麻，认识了一波麻友，无效社交+1，但接触的圈子并无扩大，还得努力提升~</p>\n<p>今年看的书刚好10本左右，印象深刻的《认知觉醒》《人生有何意义》《你一年的8760小时》《知行》等等，后面准备读读《黑客与画家》《月亮与六便士》，看看大佬推荐的~</p>\n<p>Node使用率，还是原来的模样，写写小脚本~ 没有稍微巨大点的完整项目应用，23年要重视了，没有场景也要制造场景。</p>\n<p>博客文章发布还是依然用语雀-然后同步到本地再上传到服务器部署，为什么还用语雀，可能还是因为我习惯了语雀的编辑器，不想再用回md。评论系统接了三方的<a href=\"https://valine.js.org/\">valine</a>（这款系统用起来还蛮好的），虽然没啥人评论，但也至少是麻雀虽小了。</p>\n<p>至于团队的提效，还是做了一些事情来释放大家的业务压力了，从基本能保持6.7点下班的结果来看，应该是有效果的。</p>\n<h2 id=\"22年总结\"><a href=\"#22年总结\" class=\"headerlink\" title=\"22年总结\"></a>22年总结</h2><h3 id=\"生活篇\"><a href=\"#生活篇\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h3><p><strong>游玩</strong>：今年出去玩的地方大多数杭州周边，没有往远跑，有点遗憾。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/7a95c0687c4a87ab571e622c479579f6%20%281%29.jpg\" alt=\"7a95c0687c4a87ab571e622c479579f6.jpg\"></p>\n<p><strong>运动</strong>：陪着媳妇跑了两个月的步，能减肥是真的，伤膝盖也是真的。打球的次数比较少。</p>\n<p><strong>其他：</strong>音乐、摄影还是一如既然的停滞不前，可能就是没那么热爱了。游戏依然玩的相对来说比较多，每周投入一天左右。身体方面，体检结果也跟上年不差上下，但是体重却是在往上增长，哎，说多了都是泪。。</p>\n<p>总的来说，今年的生活和往年一样平凡~没啥太大变化，偶尔惊喜，偶尔失落，这就是生活。<strong>不管生活怎样，现实怎样，依然还是要保持热爱！</strong><br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image2.png\" alt=\"image.png\"></p>\n<h3 id=\"工作篇\"><a href=\"#工作篇\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h3><p>因为今年从健康离职，脱离了集团，最大的变化在于之前集团提供的能力都要自己处理了。所幸，相关的工具都有对应的替代品，否则就要耗费人力去做研发了，虽然我很乐意，但不一定是最适合现阶段的公司。</p>\n<p>基本上集团的工具，都无缝的切换到阿里云的工具。<strong>代码仓库、包管理仓库、项目管理工具、发布平台等都做了对应的切换。</strong><br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image3.png\" alt=\"image.png\"><br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image4.png\" alt=\"image.png\"></p>\n<p>然后就是团队内规划的一些事情，基本上也按照规划实现了。</p>\n<ol>\n<li>规范产品需求排期，优先级，推进产品详细评审，开发详细估时，任务拆分到人，责任到人。</li>\n<li>持续推进基建，组件库完善，多项目发布流程、CR机制完善。</li>\n<li>强制团队技术分享，提升技术氛围，增强团队实力。</li>\n<li>建立团队人才梯队，人才培养机制。</li>\n</ol>\n<p>今年个人来说，写代码的时间变少了，更多的是想着怎么去提升大家的实力，去发展更多的业务，肩负更多的责任。虽然不像之前那样事必躬亲，也做到了该知道的都了然于心了。</p>\n<hr>\n<p>最后，一年回顾下来发现一个道理，很多事情可能看起来没什么希望，但是你真正去做了，才能了解其中的事实，实践出真知。你觉得跟你知道是两回事，<strong>知行合一</strong>。</p>\n<p>若能重来，<strong>还是会走原来的路，不回头，一路向前。</strong></p>\n<h2 id=\"Flag\"><a href=\"#Flag\" class=\"headerlink\" title=\"Flag\"></a>Flag</h2><p>给23年也立些Flag</p>\n<ol>\n<li>继续扩大社交圈子，不要被程序员的思维所约束了，多见识见识外面的社会和世界，无论黑暗或光明。</li>\n<li>工作层面还要继续突破，不要温水煮青蛙，时刻保持警醒，还有哪些能做的，或者说还有哪些事是必须去做的。</li>\n<li>生活方面要更丰富些，多点惊喜，少点惊吓。注意身体，保持锻炼。</li>\n<li><strong>就算艰难，也要热爱喜欢的一切，并坚持付出</strong>。</li>\n</ol>\n<p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image5%20%281%29.png\" alt=\"image.png\"></p>\n","site":{"data":{}},"length":1388,"excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>人生处处是选择，有些是被迫，有些是自主。但不管怎么样，你的选择决定了你未来的路，是好是坏，是苦是甜还是自己说了算。22年做了一些选择，从阿里健康离职、提前还了车贷、尝试一些别的可能。从目前的结果来看，这些选择大抵都是正确的。至于未来如何，那就不得而知了。</p>\n<p>22年的关键词：<strong>静待光明</strong></p>\n<blockquote>\n<p><strong>黎明前的黑暗最难熬~</strong></p>\n</blockquote>","more":"<h3 id=\"21年Flag-Review\"><a href=\"#21年Flag-Review\" class=\"headerlink\" title=\"21年Flag Review\"></a>21年Flag Review</h3><p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image6.png\" alt=\"image.png\"></p>\n<p><strong>1、2、4、5（完成度80%），3（完成度10%）</strong><br>今年学会了杭麻，认识了一波麻友，无效社交+1，但接触的圈子并无扩大，还得努力提升~</p>\n<p>今年看的书刚好10本左右，印象深刻的《认知觉醒》《人生有何意义》《你一年的8760小时》《知行》等等，后面准备读读《黑客与画家》《月亮与六便士》，看看大佬推荐的~</p>\n<p>Node使用率，还是原来的模样，写写小脚本~ 没有稍微巨大点的完整项目应用，23年要重视了，没有场景也要制造场景。</p>\n<p>博客文章发布还是依然用语雀-然后同步到本地再上传到服务器部署，为什么还用语雀，可能还是因为我习惯了语雀的编辑器，不想再用回md。评论系统接了三方的<a href=\"https://valine.js.org/\">valine</a>（这款系统用起来还蛮好的），虽然没啥人评论，但也至少是麻雀虽小了。</p>\n<p>至于团队的提效，还是做了一些事情来释放大家的业务压力了，从基本能保持6.7点下班的结果来看，应该是有效果的。</p>\n<h2 id=\"22年总结\"><a href=\"#22年总结\" class=\"headerlink\" title=\"22年总结\"></a>22年总结</h2><h3 id=\"生活篇\"><a href=\"#生活篇\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h3><p><strong>游玩</strong>：今年出去玩的地方大多数杭州周边，没有往远跑，有点遗憾。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/7a95c0687c4a87ab571e622c479579f6%20%281%29.jpg\" alt=\"7a95c0687c4a87ab571e622c479579f6.jpg\"></p>\n<p><strong>运动</strong>：陪着媳妇跑了两个月的步，能减肥是真的，伤膝盖也是真的。打球的次数比较少。</p>\n<p><strong>其他：</strong>音乐、摄影还是一如既然的停滞不前，可能就是没那么热爱了。游戏依然玩的相对来说比较多，每周投入一天左右。身体方面，体检结果也跟上年不差上下，但是体重却是在往上增长，哎，说多了都是泪。。</p>\n<p>总的来说，今年的生活和往年一样平凡~没啥太大变化，偶尔惊喜，偶尔失落，这就是生活。<strong>不管生活怎样，现实怎样，依然还是要保持热爱！</strong><br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image2.png\" alt=\"image.png\"></p>\n<h3 id=\"工作篇\"><a href=\"#工作篇\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h3><p>因为今年从健康离职，脱离了集团，最大的变化在于之前集团提供的能力都要自己处理了。所幸，相关的工具都有对应的替代品，否则就要耗费人力去做研发了，虽然我很乐意，但不一定是最适合现阶段的公司。</p>\n<p>基本上集团的工具，都无缝的切换到阿里云的工具。<strong>代码仓库、包管理仓库、项目管理工具、发布平台等都做了对应的切换。</strong><br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image3.png\" alt=\"image.png\"><br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image4.png\" alt=\"image.png\"></p>\n<p>然后就是团队内规划的一些事情，基本上也按照规划实现了。</p>\n<ol>\n<li>规范产品需求排期，优先级，推进产品详细评审，开发详细估时，任务拆分到人，责任到人。</li>\n<li>持续推进基建，组件库完善，多项目发布流程、CR机制完善。</li>\n<li>强制团队技术分享，提升技术氛围，增强团队实力。</li>\n<li>建立团队人才梯队，人才培养机制。</li>\n</ol>\n<p>今年个人来说，写代码的时间变少了，更多的是想着怎么去提升大家的实力，去发展更多的业务，肩负更多的责任。虽然不像之前那样事必躬亲，也做到了该知道的都了然于心了。</p>\n<hr>\n<p>最后，一年回顾下来发现一个道理，很多事情可能看起来没什么希望，但是你真正去做了，才能了解其中的事实，实践出真知。你觉得跟你知道是两回事，<strong>知行合一</strong>。</p>\n<p>若能重来，<strong>还是会走原来的路，不回头，一路向前。</strong></p>\n<h2 id=\"Flag\"><a href=\"#Flag\" class=\"headerlink\" title=\"Flag\"></a>Flag</h2><p>给23年也立些Flag</p>\n<ol>\n<li>继续扩大社交圈子，不要被程序员的思维所约束了，多见识见识外面的社会和世界，无论黑暗或光明。</li>\n<li>工作层面还要继续突破，不要温水煮青蛙，时刻保持警醒，还有哪些能做的，或者说还有哪些事是必须去做的。</li>\n<li>生活方面要更丰富些，多点惊喜，少点惊吓。注意身体，保持锻炼。</li>\n<li><strong>就算艰难，也要热爱喜欢的一切，并坚持付出</strong>。</li>\n</ol>\n<p><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image5%20%281%29.png\" alt=\"image.png\"></p>"},{"title":"2023 总结 | 来影 - 顺势而为","date":"2024-03-15T16:00:00.000Z","description":"年终总结~","top":null,"_content":"\n## 前言\n“能力越大，责任越大”，其实也还有些责任是与能力无关的。之前会觉得能有多大责任，只不过没想到真到身上的时候，体感那么强烈。  \n<!-- more -->\n\n按惯例先check下去年的flag。  \n![23flag](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/clipboard_20240407_024305.png) \n总体来说，除了第3点锻炼少了点，其余还是符合预期的。今年要好好健身了，目标减重10kg！  \n***\n## 23年总结\n### 生活篇\n**旅行**：好像就只有5.1就去了趟黄山，明显往外跑的少了。\n![迎客松](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/IMG_7398.jpg)\n\n**运动**：保证平均每周一次的篮球or羽毛球。\n\n**其他**：一切照旧，吉他继续学着，摄影继续拍着，游戏继续玩着，爱好最大的意义就是让你能感受到来自心底的放松。\n\n### 工作篇  \n\n23年一年下来公司变化蛮大的。  \n往大的方向看，公司大股东变了，老板换了，业务重心变了。小的方向看，公司搬家了，组织架构调整了，节奏强度变了。我不知道这些变化带来的结果会是好是坏，看不出来，无法预测，但我知道能做的就是“拥抱变化”+“顺势而为”。\n\n为什么会说感受到肩上的责任具象化了？\n之前带一个小的技术团队(5-10人)，不管是对公司还是对下面的同学，觉得自我能力是够的，不会拖累公司&误人子弟，所以对所谓的担子无感。\n但今年的调整有点让人猝不及防，直接跨界突破带3个技术团队，压力剧增。以前很少有晚上睡不着觉，现在大部分场景是晚上睡前都在考虑团队的事情，尽管明知道这样不长久，可自身就很难控制。生活和工作理应分开，懂是都懂，但真要做到蛮难的，特别是你面对一些新事物的时候。\n\n再聊回雷总的“顺势而为”。\n> “我领悟到，人是不能推着石头往山上走的，这样会很累，而且会被山上随时滚落的石头给打下去。要做的是，先爬到山顶，随便踢块石头下去。”\n\n顺势而为，就是指在抓住风口的机会，让风带飞。当年雷总在金山做wps，在小米做智能机确实都是风口，不过以后的风口是什么？谁知道？20年前的互联网+，10年前的移动互联网，5年前的短视频，现在的AI，大模型？而我们能在这种时代的浪潮中做些什么呢？做不了多少，能做的就是提升自我认知，尽力达到山顶。\n\n爬山的路会很累，但不爬就被落下了。\n\n## Flag\n1. 减重10kg\n2. 工作上，选择正确率80%\n3. 爱好上，深入音乐","source":"_posts/2023 总结 | 来影 - 顺势而为.md","raw":"---\ntitle: 2023 总结 | 来影 - 顺势而为\ndate: 2024-03-16\ncategories: 生活随笔\ntags: [随笔]\ndescription: 年终总结~\ntop:\n---\n\n## 前言\n“能力越大，责任越大”，其实也还有些责任是与能力无关的。之前会觉得能有多大责任，只不过没想到真到身上的时候，体感那么强烈。  \n<!-- more -->\n\n按惯例先check下去年的flag。  \n![23flag](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/clipboard_20240407_024305.png) \n总体来说，除了第3点锻炼少了点，其余还是符合预期的。今年要好好健身了，目标减重10kg！  \n***\n## 23年总结\n### 生活篇\n**旅行**：好像就只有5.1就去了趟黄山，明显往外跑的少了。\n![迎客松](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/IMG_7398.jpg)\n\n**运动**：保证平均每周一次的篮球or羽毛球。\n\n**其他**：一切照旧，吉他继续学着，摄影继续拍着，游戏继续玩着，爱好最大的意义就是让你能感受到来自心底的放松。\n\n### 工作篇  \n\n23年一年下来公司变化蛮大的。  \n往大的方向看，公司大股东变了，老板换了，业务重心变了。小的方向看，公司搬家了，组织架构调整了，节奏强度变了。我不知道这些变化带来的结果会是好是坏，看不出来，无法预测，但我知道能做的就是“拥抱变化”+“顺势而为”。\n\n为什么会说感受到肩上的责任具象化了？\n之前带一个小的技术团队(5-10人)，不管是对公司还是对下面的同学，觉得自我能力是够的，不会拖累公司&误人子弟，所以对所谓的担子无感。\n但今年的调整有点让人猝不及防，直接跨界突破带3个技术团队，压力剧增。以前很少有晚上睡不着觉，现在大部分场景是晚上睡前都在考虑团队的事情，尽管明知道这样不长久，可自身就很难控制。生活和工作理应分开，懂是都懂，但真要做到蛮难的，特别是你面对一些新事物的时候。\n\n再聊回雷总的“顺势而为”。\n> “我领悟到，人是不能推着石头往山上走的，这样会很累，而且会被山上随时滚落的石头给打下去。要做的是，先爬到山顶，随便踢块石头下去。”\n\n顺势而为，就是指在抓住风口的机会，让风带飞。当年雷总在金山做wps，在小米做智能机确实都是风口，不过以后的风口是什么？谁知道？20年前的互联网+，10年前的移动互联网，5年前的短视频，现在的AI，大模型？而我们能在这种时代的浪潮中做些什么呢？做不了多少，能做的就是提升自我认知，尽力达到山顶。\n\n爬山的路会很累，但不爬就被落下了。\n\n## Flag\n1. 减重10kg\n2. 工作上，选择正确率80%\n3. 爱好上，深入音乐","slug":"2023 总结 | 来影 - 顺势而为","published":1,"updated":"2024-04-07T08:44:13.234Z","_id":"clup4a7wj0008r2uf7i2lfc9o","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>“能力越大，责任越大”，其实也还有些责任是与能力无关的。之前会觉得能有多大责任，只不过没想到真到身上的时候，体感那么强烈。  </p>\n<span id=\"more\"></span>\n\n<p>按惯例先check下去年的flag。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/clipboard_20240407_024305.png\" alt=\"23flag\"><br>总体来说，除了第3点锻炼少了点，其余还是符合预期的。今年要好好健身了，目标减重10kg！  </p>\n<hr>\n<h2 id=\"23年总结\"><a href=\"#23年总结\" class=\"headerlink\" title=\"23年总结\"></a>23年总结</h2><h3 id=\"生活篇\"><a href=\"#生活篇\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h3><p><strong>旅行</strong>：好像就只有5.1就去了趟黄山，明显往外跑的少了。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/IMG_7398.jpg\" alt=\"迎客松\"></p>\n<p><strong>运动</strong>：保证平均每周一次的篮球or羽毛球。</p>\n<p><strong>其他</strong>：一切照旧，吉他继续学着，摄影继续拍着，游戏继续玩着，爱好最大的意义就是让你能感受到来自心底的放松。</p>\n<h3 id=\"工作篇\"><a href=\"#工作篇\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h3><p>23年一年下来公司变化蛮大的。<br>往大的方向看，公司大股东变了，老板换了，业务重心变了。小的方向看，公司搬家了，组织架构调整了，节奏强度变了。我不知道这些变化带来的结果会是好是坏，看不出来，无法预测，但我知道能做的就是“拥抱变化”+“顺势而为”。</p>\n<p>为什么会说感受到肩上的责任具象化了？<br>之前带一个小的技术团队(5-10人)，不管是对公司还是对下面的同学，觉得自我能力是够的，不会拖累公司&amp;误人子弟，所以对所谓的担子无感。<br>但今年的调整有点让人猝不及防，直接跨界突破带3个技术团队，压力剧增。以前很少有晚上睡不着觉，现在大部分场景是晚上睡前都在考虑团队的事情，尽管明知道这样不长久，可自身就很难控制。生活和工作理应分开，懂是都懂，但真要做到蛮难的，特别是你面对一些新事物的时候。</p>\n<p>再聊回雷总的“顺势而为”。</p>\n<blockquote>\n<p>“我领悟到，人是不能推着石头往山上走的，这样会很累，而且会被山上随时滚落的石头给打下去。要做的是，先爬到山顶，随便踢块石头下去。”</p>\n</blockquote>\n<p>顺势而为，就是指在抓住风口的机会，让风带飞。当年雷总在金山做wps，在小米做智能机确实都是风口，不过以后的风口是什么？谁知道？20年前的互联网+，10年前的移动互联网，5年前的短视频，现在的AI，大模型？而我们能在这种时代的浪潮中做些什么呢？做不了多少，能做的就是提升自我认知，尽力达到山顶。</p>\n<p>爬山的路会很累，但不爬就被落下了。</p>\n<h2 id=\"Flag\"><a href=\"#Flag\" class=\"headerlink\" title=\"Flag\"></a>Flag</h2><ol>\n<li>减重10kg</li>\n<li>工作上，选择正确率80%</li>\n<li>爱好上，深入音乐</li>\n</ol>\n","site":{"data":{}},"length":843,"excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>“能力越大，责任越大”，其实也还有些责任是与能力无关的。之前会觉得能有多大责任，只不过没想到真到身上的时候，体感那么强烈。  </p>","more":"<p>按惯例先check下去年的flag。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/clipboard_20240407_024305.png\" alt=\"23flag\"><br>总体来说，除了第3点锻炼少了点，其余还是符合预期的。今年要好好健身了，目标减重10kg！  </p>\n<hr>\n<h2 id=\"23年总结\"><a href=\"#23年总结\" class=\"headerlink\" title=\"23年总结\"></a>23年总结</h2><h3 id=\"生活篇\"><a href=\"#生活篇\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h3><p><strong>旅行</strong>：好像就只有5.1就去了趟黄山，明显往外跑的少了。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/IMG_7398.jpg\" alt=\"迎客松\"></p>\n<p><strong>运动</strong>：保证平均每周一次的篮球or羽毛球。</p>\n<p><strong>其他</strong>：一切照旧，吉他继续学着，摄影继续拍着，游戏继续玩着，爱好最大的意义就是让你能感受到来自心底的放松。</p>\n<h3 id=\"工作篇\"><a href=\"#工作篇\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h3><p>23年一年下来公司变化蛮大的。<br>往大的方向看，公司大股东变了，老板换了，业务重心变了。小的方向看，公司搬家了，组织架构调整了，节奏强度变了。我不知道这些变化带来的结果会是好是坏，看不出来，无法预测，但我知道能做的就是“拥抱变化”+“顺势而为”。</p>\n<p>为什么会说感受到肩上的责任具象化了？<br>之前带一个小的技术团队(5-10人)，不管是对公司还是对下面的同学，觉得自我能力是够的，不会拖累公司&amp;误人子弟，所以对所谓的担子无感。<br>但今年的调整有点让人猝不及防，直接跨界突破带3个技术团队，压力剧增。以前很少有晚上睡不着觉，现在大部分场景是晚上睡前都在考虑团队的事情，尽管明知道这样不长久，可自身就很难控制。生活和工作理应分开，懂是都懂，但真要做到蛮难的，特别是你面对一些新事物的时候。</p>\n<p>再聊回雷总的“顺势而为”。</p>\n<blockquote>\n<p>“我领悟到，人是不能推着石头往山上走的，这样会很累，而且会被山上随时滚落的石头给打下去。要做的是，先爬到山顶，随便踢块石头下去。”</p>\n</blockquote>\n<p>顺势而为，就是指在抓住风口的机会，让风带飞。当年雷总在金山做wps，在小米做智能机确实都是风口，不过以后的风口是什么？谁知道？20年前的互联网+，10年前的移动互联网，5年前的短视频，现在的AI，大模型？而我们能在这种时代的浪潮中做些什么呢？做不了多少，能做的就是提升自我认知，尽力达到山顶。</p>\n<p>爬山的路会很累，但不爬就被落下了。</p>\n<h2 id=\"Flag\"><a href=\"#Flag\" class=\"headerlink\" title=\"Flag\"></a>Flag</h2><ol>\n<li>减重10kg</li>\n<li>工作上，选择正确率80%</li>\n<li>爱好上，深入音乐</li>\n</ol>"},{"title":"关于AMD&CMD - elmer","date":"2017-09-10T16:00:00.000Z","description":"js中模块化思想","_content":"## AMD 和 CMD 两种前端模块化思想学习\n\n其实，这两个规范都是两个JS模块化框架在推广过程中被广泛认知出来的两种规范；\n<!-- more -->\n具体上，我们可以看这以下这些内容。\n>（出自）[http://www.cnblogs.com/dojo-lzz/p/4707725.html](http://www.cnblogs.com/dojo-lzz/p/4707725.html)\n***\n\n### RequireJS 和 SeaJS 都是很不错的模块加载器，两者区别如下：\n\n1. 两者定位有差异。RequireJS 想成为浏览器端的模块加载器，同时也想成为 Rhino / Node 等环境的模块加载器。SeaJS 则专注于 Web 浏览器端，同时通过 Node 扩展的方式可以很方便跑在 Node 服务器端\n\n2. 两者遵循的标准有差异。RequireJS 遵循的是 AMD（异步模块定义）规范，SeaJS 遵循的是 CMD （通用模块定义）规范。规范的不同，导致了两者 API 的不同。SeaJS 更简洁优雅，更贴近 CommonJS Modules/1.1 和 Node Modules 规范。\n\n3. 两者社区理念有差异。RequireJS 在尝试让第三方类库修改自身来支持 RequireJS，目前只有少数社区采纳。SeaJS 不强推，而采用自主封装的方式来“海纳百川”，目前已有较成熟的封装策略。\n\n4. 两者代码质量有差异。RequireJS 是没有明显的 bug，SeaJS 是明显没有 bug。\n\n5. 两者对调试等的支持有差异。SeaJS 通过插件，可以实现 Fiddler 中自动映射的功能，还可以实现自动 combo 等功能，非常方便便捷。RequireJS 无这方面的支持。\n\n6. 两者的插件机制有差异。RequireJS 采取的是在源码中预留接口的形式，源码中留有为插件而写的代码。SeaJS 采取的插件机制则与 Node 的方式一致：开放自身，让插件开发者可直接访问或修改，从而非常灵活，可以实现各种类型的插件。","source":"_posts/AmdorCmd.md","raw":"---\ntitle: 关于AMD&CMD - elmer\ndate: 2017-09-11\ncategories: [前端,javascript]\ntags: [JavaScript]\ndescription: js中模块化思想\n---\n## AMD 和 CMD 两种前端模块化思想学习\n\n其实，这两个规范都是两个JS模块化框架在推广过程中被广泛认知出来的两种规范；\n<!-- more -->\n具体上，我们可以看这以下这些内容。\n>（出自）[http://www.cnblogs.com/dojo-lzz/p/4707725.html](http://www.cnblogs.com/dojo-lzz/p/4707725.html)\n***\n\n### RequireJS 和 SeaJS 都是很不错的模块加载器，两者区别如下：\n\n1. 两者定位有差异。RequireJS 想成为浏览器端的模块加载器，同时也想成为 Rhino / Node 等环境的模块加载器。SeaJS 则专注于 Web 浏览器端，同时通过 Node 扩展的方式可以很方便跑在 Node 服务器端\n\n2. 两者遵循的标准有差异。RequireJS 遵循的是 AMD（异步模块定义）规范，SeaJS 遵循的是 CMD （通用模块定义）规范。规范的不同，导致了两者 API 的不同。SeaJS 更简洁优雅，更贴近 CommonJS Modules/1.1 和 Node Modules 规范。\n\n3. 两者社区理念有差异。RequireJS 在尝试让第三方类库修改自身来支持 RequireJS，目前只有少数社区采纳。SeaJS 不强推，而采用自主封装的方式来“海纳百川”，目前已有较成熟的封装策略。\n\n4. 两者代码质量有差异。RequireJS 是没有明显的 bug，SeaJS 是明显没有 bug。\n\n5. 两者对调试等的支持有差异。SeaJS 通过插件，可以实现 Fiddler 中自动映射的功能，还可以实现自动 combo 等功能，非常方便便捷。RequireJS 无这方面的支持。\n\n6. 两者的插件机制有差异。RequireJS 采取的是在源码中预留接口的形式，源码中留有为插件而写的代码。SeaJS 采取的插件机制则与 Node 的方式一致：开放自身，让插件开发者可直接访问或修改，从而非常灵活，可以实现各种类型的插件。","slug":"AmdorCmd","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wk000cr2ufbj9k5w7q","content":"<h2 id=\"AMD-和-CMD-两种前端模块化思想学习\"><a href=\"#AMD-和-CMD-两种前端模块化思想学习\" class=\"headerlink\" title=\"AMD 和 CMD 两种前端模块化思想学习\"></a>AMD 和 CMD 两种前端模块化思想学习</h2><p>其实，这两个规范都是两个JS模块化框架在推广过程中被广泛认知出来的两种规范；</p>\n<span id=\"more\"></span>\n<p>具体上，我们可以看这以下这些内容。</p>\n<blockquote>\n<p>（出自）<a href=\"http://www.cnblogs.com/dojo-lzz/p/4707725.html\">http://www.cnblogs.com/dojo-lzz/p/4707725.html</a></p>\n</blockquote>\n<hr>\n<h3 id=\"RequireJS-和-SeaJS-都是很不错的模块加载器，两者区别如下：\"><a href=\"#RequireJS-和-SeaJS-都是很不错的模块加载器，两者区别如下：\" class=\"headerlink\" title=\"RequireJS 和 SeaJS 都是很不错的模块加载器，两者区别如下：\"></a>RequireJS 和 SeaJS 都是很不错的模块加载器，两者区别如下：</h3><ol>\n<li><p>两者定位有差异。RequireJS 想成为浏览器端的模块加载器，同时也想成为 Rhino &#x2F; Node 等环境的模块加载器。SeaJS 则专注于 Web 浏览器端，同时通过 Node 扩展的方式可以很方便跑在 Node 服务器端</p>\n</li>\n<li><p>两者遵循的标准有差异。RequireJS 遵循的是 AMD（异步模块定义）规范，SeaJS 遵循的是 CMD （通用模块定义）规范。规范的不同，导致了两者 API 的不同。SeaJS 更简洁优雅，更贴近 CommonJS Modules&#x2F;1.1 和 Node Modules 规范。</p>\n</li>\n<li><p>两者社区理念有差异。RequireJS 在尝试让第三方类库修改自身来支持 RequireJS，目前只有少数社区采纳。SeaJS 不强推，而采用自主封装的方式来“海纳百川”，目前已有较成熟的封装策略。</p>\n</li>\n<li><p>两者代码质量有差异。RequireJS 是没有明显的 bug，SeaJS 是明显没有 bug。</p>\n</li>\n<li><p>两者对调试等的支持有差异。SeaJS 通过插件，可以实现 Fiddler 中自动映射的功能，还可以实现自动 combo 等功能，非常方便便捷。RequireJS 无这方面的支持。</p>\n</li>\n<li><p>两者的插件机制有差异。RequireJS 采取的是在源码中预留接口的形式，源码中留有为插件而写的代码。SeaJS 采取的插件机制则与 Node 的方式一致：开放自身，让插件开发者可直接访问或修改，从而非常灵活，可以实现各种类型的插件。</p>\n</li>\n</ol>\n","site":{"data":{}},"length":731,"excerpt":"<h2 id=\"AMD-和-CMD-两种前端模块化思想学习\"><a href=\"#AMD-和-CMD-两种前端模块化思想学习\" class=\"headerlink\" title=\"AMD 和 CMD 两种前端模块化思想学习\"></a>AMD 和 CMD 两种前端模块化思想学习</h2><p>其实，这两个规范都是两个JS模块化框架在推广过程中被广泛认知出来的两种规范；</p>","more":"<p>具体上，我们可以看这以下这些内容。</p>\n<blockquote>\n<p>（出自）<a href=\"http://www.cnblogs.com/dojo-lzz/p/4707725.html\">http://www.cnblogs.com/dojo-lzz/p/4707725.html</a></p>\n</blockquote>\n<hr>\n<h3 id=\"RequireJS-和-SeaJS-都是很不错的模块加载器，两者区别如下：\"><a href=\"#RequireJS-和-SeaJS-都是很不错的模块加载器，两者区别如下：\" class=\"headerlink\" title=\"RequireJS 和 SeaJS 都是很不错的模块加载器，两者区别如下：\"></a>RequireJS 和 SeaJS 都是很不错的模块加载器，两者区别如下：</h3><ol>\n<li><p>两者定位有差异。RequireJS 想成为浏览器端的模块加载器，同时也想成为 Rhino &#x2F; Node 等环境的模块加载器。SeaJS 则专注于 Web 浏览器端，同时通过 Node 扩展的方式可以很方便跑在 Node 服务器端</p>\n</li>\n<li><p>两者遵循的标准有差异。RequireJS 遵循的是 AMD（异步模块定义）规范，SeaJS 遵循的是 CMD （通用模块定义）规范。规范的不同，导致了两者 API 的不同。SeaJS 更简洁优雅，更贴近 CommonJS Modules&#x2F;1.1 和 Node Modules 规范。</p>\n</li>\n<li><p>两者社区理念有差异。RequireJS 在尝试让第三方类库修改自身来支持 RequireJS，目前只有少数社区采纳。SeaJS 不强推，而采用自主封装的方式来“海纳百川”，目前已有较成熟的封装策略。</p>\n</li>\n<li><p>两者代码质量有差异。RequireJS 是没有明显的 bug，SeaJS 是明显没有 bug。</p>\n</li>\n<li><p>两者对调试等的支持有差异。SeaJS 通过插件，可以实现 Fiddler 中自动映射的功能，还可以实现自动 combo 等功能，非常方便便捷。RequireJS 无这方面的支持。</p>\n</li>\n<li><p>两者的插件机制有差异。RequireJS 采取的是在源码中预留接口的形式，源码中留有为插件而写的代码。SeaJS 采取的插件机制则与 Node 的方式一致：开放自身，让插件开发者可直接访问或修改，从而非常灵活，可以实现各种类型的插件。</p>\n</li>\n</ol>"},{"title":"CSP - 内容安全策略","date":"2017-04-15T16:00:00.000Z","description":"XSS终结者 - CSP","_content":"\n## 关于对XSS终结者CSP的学习\n昨天在团队中做了关于前端安全XSS CRSF相关的分享，内容里有涉及到CSP，说实话在写ppt时，也只是粗略的看了下CSP，而没有去详细了解，今天就详细的做下记录吧\n<!-- more -->\n\n## CSP概念\nCSP 全称为 Content Security Policy，即内容安全策略。主要以白名单的形式配置可信任的内容来源，在网页中，能够使白名单中的内容正常执行（包含 JS，CSS，Image 等等），而非白名单的内容无法正常执行，从而减少跨站脚本攻击（XSS），当然，也能够减少运营商劫持的内容注入攻击。\n***\n### CSP发展时间轴\n毋容置疑CSP是一个伟大的策略，但CSP从最初设计到被W3C认可制定成通用标准，却经历了一个漫长而曲折的过程。\n1. CSP模型首次被提出\n这要从2007年说起，当时XSS攻击已经在OWASP TOP10攻击中排名第一位，CSP的最初的设想就在这一年被Mozilla项目组的Gervase Markham和WEB安全界大牛Robert Hansen ‘rsnake’两人共同提出的。\n2. 浏览器首次使用CSP\n2011年3月Firefox 4.0发布，首次把CSP当作一种正式的安全策略规范使用到浏览器中。当时火狐使用的是自己定义的X-Content-Security-Policy 头。单从CSP推广上来看，Firefox4.0的发布是划时代的，虽然此时的CSP只是Firefox自己定义的一个内部标准。但在此之后，CSP的概 念被全球迅速推广。\n3. Chrome使用CSP\n随后在2011年9月，谷歌在Chrome浏览器14.0版本发布时加入CSP，而Chrome浏览器使用的也是自己的 CSP标准，它使用X-Webkit-CSP头进行对CSP的解析，这个头从字面上更能看出来Chrome浏览器使用的是Webkit内核。此时世界主流 的2大浏览器Chrome、Firefox都已经支持了CSP。\n4. W3C起草CSP标准\n作为标准发布的W3C组织顺其自然在2011年11月在官网上发布了CSP1.0草案。W3C的CSP1.0草案的语法和Firefox和Chrome中截然不同，随着时间的推移1年后，W3C的CSP1.0草案已经到了推选阶段，基本可以正式发布。\n5. 全面支持W3C标准的CSP\n在2012年2月Chrome25版本发布时，宣布支持W3C标准的CSP1.0。2013年6月Firefox宣布在 23版本中全面支持W3C的CSP1.0标准。同样是在2013年6月，W3C发布CSP1.1标准，里面又加入了不少语法，现在大多浏览器还都不支持。 IE10中开始支持CSP中的’sandbox’语法，其他语法暂不支持\n***\n## CSP类型\n1. Content-Security-Policy\n2. Content-Security-Policy-Report-Only\n这两种策略类型的主要区别也可以从命名上看出，第一种对不安全的资源会进行阻止执行，而第二种只会进行数据上报，不会有实际的阻止。\n当定义多个策略的时候，浏览器会优先采用最先定义的。\n***\n## CSP示例\n示例：在 HTML 的 Head 中添加如下 Meta 标签，将在符合 CSP 标准的浏览器中使非同源的 不被加载执行。\n```html\n\t<meta http-equiv=\"Content-Security-Policy\" content=\"-src 'self'\">\n```\n### HTML Meta 标签\n　　在这种形式中，Meta 标签主要含有两部分的 key-value：http-equivcontent\n\thttp-equiv 的 value 为 CSP 的策略类型，而 content 则是声明指令集合，即白名单。如\n```html\n\t<meta http-equiv=\"Content-Security-Policy\" content=\"-src 'self'\">\n```\n　　在HTML 的 head 中 添加上面的 Meta 标签，那么当浏览器支持 CSP 标准时，由于使用的是 Content-Security-Policy 实际阻止的策略，所以将会使得非同源的 （根据指令集合来定）不会被加载及执行。\n　　Meta 标签的 Content-Security-Policy-Report-Only 方式在当前（2016/5/19）多数移动端浏览器上表现正常，但是 不推荐 这样做，如 chrome 50 会产生如下的提示\n　　The report-only Content Security Policy xxxxxxx was delivered via a element,which is disallowed. The policy has been ignored.\n# HTTP Header\n　　通过 Meta 的方式很是简单，但当涉及到的页面较多时，使用 Meta 标签的方式需要在每个页面都各自加上。而如果通过服务端配置 HTML 返回的响应头 HTTP header 带上 CSP 的指令的话，那将能够一劳永逸，同时支持多个页面。下图为响应头\n　　不仅如此，这种形式的 Content-Security-Policy-Report-Only 方式能够得到更好的兼容支持，也是推荐方式。\n***\n## CSP属性指令\n|指令\t|取值示例|说明\t|\n| ------------- |:-------------:| -----:|\n|default-src|\t‘self’ cdn.example.com\t|定义针对所有类型（js/image/css/web font/ajax/iframe/多媒体等）资源的默认加载策略，某类型资源如果没有单独定义策略，就使用默认。|\n|-src\t|‘self’ js.example.com\t|定义针对Java的加载策略|\n|object-src\t|‘self’\t|针对,, 等标签的加载策略|\n|style-src\t|‘self’ css.example.com\t|定义针对样式的加载策略|\n|img-src\t|‘self’ image.example.com\t|定义针对图片的加载策略|\n|media-src\t|‘media.example.com’\t|针对或者引入的html多媒体等标签的加载策略|\n|frame-src\t|‘self’\t|针对iframe的加载策略|\n|connect-src|\t‘self’\t|针对Ajax、WebSocket等请求的加载策略。不允许的情况下，浏览器会模拟一个状态为400的响应|\n|font-src\t|font.qq.com\t|针对Web Font的加载策略|\n|sandbox\t|allow-forms allow-s\t|对请求的资源启用sandbox|\n|report-uri\t|/some-report-uri|\t告诉浏览器如果请求的资源不被策略允许时，往哪个地址提交日志信息。不阻止任何内容，可以改用Content-Security-Policy-Report-Only头|\n|base-uri\t|‘self’\t|限制当前页面的url（CSP2）\n|child-src\t|‘self’\t|限制子窗口的源(iframe、弹窗等),取代frame-src（CSP2）\n|form-action\t|‘self’\t|限制表单能够提交到的源（CSP2）\n|frame-ancestors\t|‘none’\t|限制了当前页面可以被哪些页面以iframe,frame,object等方式加载（CSP2）\n|plugin-types\t|application/pdf\t|限制插件的类型（CSP2）\n***\n### CSP实践经验\n　　CSP 的阻止加载及执行的方式相当强大，也因为它如此强大，所以在使用时更是要小心谨慎，毕竟，如一个不小心制定了错误的指令集合方案，那将可能导致阻止了正常文件的加载，影响业务功能，这是相当危险的。\n　　一步步制定你的 CSP 方案\n　　1. 通过 HTML Meta 标签进行初步方案的制定\n　　这种方式实现成本低，只对当前的 HTML 有效，从而能够进行逐步灰度。当然也存在上面提及的兼容性问题，但如果现在是在移动端上，或者在可预期的浏览器内核上跑的话，在兼容性满足的情况下，那还是可以通过这个方式进行 Report-Only。结合自己业务的资源情况以及在 Chrome 上调试制定初步方案。\n　　2. 使用 HTTP Header 的 Content-Security-Policy-Report-Only 方式进一步确定方案\n　　由于上面的 Meta 标签存在一定的兼容问题，所以当我们制定了初步方案后，就可以开始使用 HTTP Header 的形式，小心驶得万年船，这里还是建议先使用 Report-Only 的方式，并指定上报的 url 来收集阻止的内容，通过上报的数据进行方案的优化，从而进一步确定具体方案。\n　　3. HTTP Header 改用 Content-Security-Policy 策略进行实际拦截阻止\n　　具体的 CSP 方案经过上面两轮洗礼，在分析完上报的数据，确定百无疏漏后，可将HTTP Header 改用 Content-Security-Policy 策略，从而进行实际拦截阻止。\n### 相关链接\n[XSS终结者-CSP理论与实践](http://mt.sohu.com/20160620/n455409002.shtml)\n[CSP 策略指令](https://developer.mozilla.org/zh-CN/docs/Web/Security/CSP/CSP_policy_directives)\n","source":"_posts/CSP - 内容安全策略.md","raw":"---\ntitle: CSP - 内容安全策略\ndate: 2017-04-16\ncategories: 前端\ntags: [前端安全]\ndescription: XSS终结者 - CSP\n---\n\n## 关于对XSS终结者CSP的学习\n昨天在团队中做了关于前端安全XSS CRSF相关的分享，内容里有涉及到CSP，说实话在写ppt时，也只是粗略的看了下CSP，而没有去详细了解，今天就详细的做下记录吧\n<!-- more -->\n\n## CSP概念\nCSP 全称为 Content Security Policy，即内容安全策略。主要以白名单的形式配置可信任的内容来源，在网页中，能够使白名单中的内容正常执行（包含 JS，CSS，Image 等等），而非白名单的内容无法正常执行，从而减少跨站脚本攻击（XSS），当然，也能够减少运营商劫持的内容注入攻击。\n***\n### CSP发展时间轴\n毋容置疑CSP是一个伟大的策略，但CSP从最初设计到被W3C认可制定成通用标准，却经历了一个漫长而曲折的过程。\n1. CSP模型首次被提出\n这要从2007年说起，当时XSS攻击已经在OWASP TOP10攻击中排名第一位，CSP的最初的设想就在这一年被Mozilla项目组的Gervase Markham和WEB安全界大牛Robert Hansen ‘rsnake’两人共同提出的。\n2. 浏览器首次使用CSP\n2011年3月Firefox 4.0发布，首次把CSP当作一种正式的安全策略规范使用到浏览器中。当时火狐使用的是自己定义的X-Content-Security-Policy 头。单从CSP推广上来看，Firefox4.0的发布是划时代的，虽然此时的CSP只是Firefox自己定义的一个内部标准。但在此之后，CSP的概 念被全球迅速推广。\n3. Chrome使用CSP\n随后在2011年9月，谷歌在Chrome浏览器14.0版本发布时加入CSP，而Chrome浏览器使用的也是自己的 CSP标准，它使用X-Webkit-CSP头进行对CSP的解析，这个头从字面上更能看出来Chrome浏览器使用的是Webkit内核。此时世界主流 的2大浏览器Chrome、Firefox都已经支持了CSP。\n4. W3C起草CSP标准\n作为标准发布的W3C组织顺其自然在2011年11月在官网上发布了CSP1.0草案。W3C的CSP1.0草案的语法和Firefox和Chrome中截然不同，随着时间的推移1年后，W3C的CSP1.0草案已经到了推选阶段，基本可以正式发布。\n5. 全面支持W3C标准的CSP\n在2012年2月Chrome25版本发布时，宣布支持W3C标准的CSP1.0。2013年6月Firefox宣布在 23版本中全面支持W3C的CSP1.0标准。同样是在2013年6月，W3C发布CSP1.1标准，里面又加入了不少语法，现在大多浏览器还都不支持。 IE10中开始支持CSP中的’sandbox’语法，其他语法暂不支持\n***\n## CSP类型\n1. Content-Security-Policy\n2. Content-Security-Policy-Report-Only\n这两种策略类型的主要区别也可以从命名上看出，第一种对不安全的资源会进行阻止执行，而第二种只会进行数据上报，不会有实际的阻止。\n当定义多个策略的时候，浏览器会优先采用最先定义的。\n***\n## CSP示例\n示例：在 HTML 的 Head 中添加如下 Meta 标签，将在符合 CSP 标准的浏览器中使非同源的 不被加载执行。\n```html\n\t<meta http-equiv=\"Content-Security-Policy\" content=\"-src 'self'\">\n```\n### HTML Meta 标签\n　　在这种形式中，Meta 标签主要含有两部分的 key-value：http-equivcontent\n\thttp-equiv 的 value 为 CSP 的策略类型，而 content 则是声明指令集合，即白名单。如\n```html\n\t<meta http-equiv=\"Content-Security-Policy\" content=\"-src 'self'\">\n```\n　　在HTML 的 head 中 添加上面的 Meta 标签，那么当浏览器支持 CSP 标准时，由于使用的是 Content-Security-Policy 实际阻止的策略，所以将会使得非同源的 （根据指令集合来定）不会被加载及执行。\n　　Meta 标签的 Content-Security-Policy-Report-Only 方式在当前（2016/5/19）多数移动端浏览器上表现正常，但是 不推荐 这样做，如 chrome 50 会产生如下的提示\n　　The report-only Content Security Policy xxxxxxx was delivered via a element,which is disallowed. The policy has been ignored.\n# HTTP Header\n　　通过 Meta 的方式很是简单，但当涉及到的页面较多时，使用 Meta 标签的方式需要在每个页面都各自加上。而如果通过服务端配置 HTML 返回的响应头 HTTP header 带上 CSP 的指令的话，那将能够一劳永逸，同时支持多个页面。下图为响应头\n　　不仅如此，这种形式的 Content-Security-Policy-Report-Only 方式能够得到更好的兼容支持，也是推荐方式。\n***\n## CSP属性指令\n|指令\t|取值示例|说明\t|\n| ------------- |:-------------:| -----:|\n|default-src|\t‘self’ cdn.example.com\t|定义针对所有类型（js/image/css/web font/ajax/iframe/多媒体等）资源的默认加载策略，某类型资源如果没有单独定义策略，就使用默认。|\n|-src\t|‘self’ js.example.com\t|定义针对Java的加载策略|\n|object-src\t|‘self’\t|针对,, 等标签的加载策略|\n|style-src\t|‘self’ css.example.com\t|定义针对样式的加载策略|\n|img-src\t|‘self’ image.example.com\t|定义针对图片的加载策略|\n|media-src\t|‘media.example.com’\t|针对或者引入的html多媒体等标签的加载策略|\n|frame-src\t|‘self’\t|针对iframe的加载策略|\n|connect-src|\t‘self’\t|针对Ajax、WebSocket等请求的加载策略。不允许的情况下，浏览器会模拟一个状态为400的响应|\n|font-src\t|font.qq.com\t|针对Web Font的加载策略|\n|sandbox\t|allow-forms allow-s\t|对请求的资源启用sandbox|\n|report-uri\t|/some-report-uri|\t告诉浏览器如果请求的资源不被策略允许时，往哪个地址提交日志信息。不阻止任何内容，可以改用Content-Security-Policy-Report-Only头|\n|base-uri\t|‘self’\t|限制当前页面的url（CSP2）\n|child-src\t|‘self’\t|限制子窗口的源(iframe、弹窗等),取代frame-src（CSP2）\n|form-action\t|‘self’\t|限制表单能够提交到的源（CSP2）\n|frame-ancestors\t|‘none’\t|限制了当前页面可以被哪些页面以iframe,frame,object等方式加载（CSP2）\n|plugin-types\t|application/pdf\t|限制插件的类型（CSP2）\n***\n### CSP实践经验\n　　CSP 的阻止加载及执行的方式相当强大，也因为它如此强大，所以在使用时更是要小心谨慎，毕竟，如一个不小心制定了错误的指令集合方案，那将可能导致阻止了正常文件的加载，影响业务功能，这是相当危险的。\n　　一步步制定你的 CSP 方案\n　　1. 通过 HTML Meta 标签进行初步方案的制定\n　　这种方式实现成本低，只对当前的 HTML 有效，从而能够进行逐步灰度。当然也存在上面提及的兼容性问题，但如果现在是在移动端上，或者在可预期的浏览器内核上跑的话，在兼容性满足的情况下，那还是可以通过这个方式进行 Report-Only。结合自己业务的资源情况以及在 Chrome 上调试制定初步方案。\n　　2. 使用 HTTP Header 的 Content-Security-Policy-Report-Only 方式进一步确定方案\n　　由于上面的 Meta 标签存在一定的兼容问题，所以当我们制定了初步方案后，就可以开始使用 HTTP Header 的形式，小心驶得万年船，这里还是建议先使用 Report-Only 的方式，并指定上报的 url 来收集阻止的内容，通过上报的数据进行方案的优化，从而进一步确定具体方案。\n　　3. HTTP Header 改用 Content-Security-Policy 策略进行实际拦截阻止\n　　具体的 CSP 方案经过上面两轮洗礼，在分析完上报的数据，确定百无疏漏后，可将HTTP Header 改用 Content-Security-Policy 策略，从而进行实际拦截阻止。\n### 相关链接\n[XSS终结者-CSP理论与实践](http://mt.sohu.com/20160620/n455409002.shtml)\n[CSP 策略指令](https://developer.mozilla.org/zh-CN/docs/Web/Security/CSP/CSP_policy_directives)\n","slug":"CSP - 内容安全策略","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wk000er2uf2s1y9alh","content":"<h2 id=\"关于对XSS终结者CSP的学习\"><a href=\"#关于对XSS终结者CSP的学习\" class=\"headerlink\" title=\"关于对XSS终结者CSP的学习\"></a>关于对XSS终结者CSP的学习</h2><p>昨天在团队中做了关于前端安全XSS CRSF相关的分享，内容里有涉及到CSP，说实话在写ppt时，也只是粗略的看了下CSP，而没有去详细了解，今天就详细的做下记录吧</p>\n<span id=\"more\"></span>\n\n<h2 id=\"CSP概念\"><a href=\"#CSP概念\" class=\"headerlink\" title=\"CSP概念\"></a>CSP概念</h2><p>CSP 全称为 Content Security Policy，即内容安全策略。主要以白名单的形式配置可信任的内容来源，在网页中，能够使白名单中的内容正常执行（包含 JS，CSS，Image 等等），而非白名单的内容无法正常执行，从而减少跨站脚本攻击（XSS），当然，也能够减少运营商劫持的内容注入攻击。</p>\n<hr>\n<h3 id=\"CSP发展时间轴\"><a href=\"#CSP发展时间轴\" class=\"headerlink\" title=\"CSP发展时间轴\"></a>CSP发展时间轴</h3><p>毋容置疑CSP是一个伟大的策略，但CSP从最初设计到被W3C认可制定成通用标准，却经历了一个漫长而曲折的过程。</p>\n<ol>\n<li>CSP模型首次被提出<br>这要从2007年说起，当时XSS攻击已经在OWASP TOP10攻击中排名第一位，CSP的最初的设想就在这一年被Mozilla项目组的Gervase Markham和WEB安全界大牛Robert Hansen ‘rsnake’两人共同提出的。</li>\n<li>浏览器首次使用CSP<br>2011年3月Firefox 4.0发布，首次把CSP当作一种正式的安全策略规范使用到浏览器中。当时火狐使用的是自己定义的X-Content-Security-Policy 头。单从CSP推广上来看，Firefox4.0的发布是划时代的，虽然此时的CSP只是Firefox自己定义的一个内部标准。但在此之后，CSP的概 念被全球迅速推广。</li>\n<li>Chrome使用CSP<br>随后在2011年9月，谷歌在Chrome浏览器14.0版本发布时加入CSP，而Chrome浏览器使用的也是自己的 CSP标准，它使用X-Webkit-CSP头进行对CSP的解析，这个头从字面上更能看出来Chrome浏览器使用的是Webkit内核。此时世界主流 的2大浏览器Chrome、Firefox都已经支持了CSP。</li>\n<li>W3C起草CSP标准<br>作为标准发布的W3C组织顺其自然在2011年11月在官网上发布了CSP1.0草案。W3C的CSP1.0草案的语法和Firefox和Chrome中截然不同，随着时间的推移1年后，W3C的CSP1.0草案已经到了推选阶段，基本可以正式发布。</li>\n<li>全面支持W3C标准的CSP<br>在2012年2月Chrome25版本发布时，宣布支持W3C标准的CSP1.0。2013年6月Firefox宣布在 23版本中全面支持W3C的CSP1.0标准。同样是在2013年6月，W3C发布CSP1.1标准，里面又加入了不少语法，现在大多浏览器还都不支持。 IE10中开始支持CSP中的’sandbox’语法，其他语法暂不支持</li>\n</ol>\n<hr>\n<h2 id=\"CSP类型\"><a href=\"#CSP类型\" class=\"headerlink\" title=\"CSP类型\"></a>CSP类型</h2><ol>\n<li>Content-Security-Policy</li>\n<li>Content-Security-Policy-Report-Only<br>这两种策略类型的主要区别也可以从命名上看出，第一种对不安全的资源会进行阻止执行，而第二种只会进行数据上报，不会有实际的阻止。<br>当定义多个策略的时候，浏览器会优先采用最先定义的。</li>\n</ol>\n<hr>\n<h2 id=\"CSP示例\"><a href=\"#CSP示例\" class=\"headerlink\" title=\"CSP示例\"></a>CSP示例</h2><p>示例：在 HTML 的 Head 中添加如下 Meta 标签，将在符合 CSP 标准的浏览器中使非同源的 不被加载执行。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;Content-Security-Policy&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;-src &#x27;self&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"HTML-Meta-标签\"><a href=\"#HTML-Meta-标签\" class=\"headerlink\" title=\"HTML Meta 标签\"></a>HTML Meta 标签</h3><p>　　在这种形式中，Meta 标签主要含有两部分的 key-value：http-equivcontent<br>    http-equiv 的 value 为 CSP 的策略类型，而 content 则是声明指令集合，即白名单。如</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;Content-Security-Policy&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;-src &#x27;self&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　在HTML 的 head 中 添加上面的 Meta 标签，那么当浏览器支持 CSP 标准时，由于使用的是 Content-Security-Policy 实际阻止的策略，所以将会使得非同源的 （根据指令集合来定）不会被加载及执行。<br>　　Meta 标签的 Content-Security-Policy-Report-Only 方式在当前（2016&#x2F;5&#x2F;19）多数移动端浏览器上表现正常，但是 不推荐 这样做，如 chrome 50 会产生如下的提示<br>　　The report-only Content Security Policy xxxxxxx was delivered via a element,which is disallowed. The policy has been ignored.</p>\n<h1 id=\"HTTP-Header\"><a href=\"#HTTP-Header\" class=\"headerlink\" title=\"HTTP Header\"></a>HTTP Header</h1><p>　　通过 Meta 的方式很是简单，但当涉及到的页面较多时，使用 Meta 标签的方式需要在每个页面都各自加上。而如果通过服务端配置 HTML 返回的响应头 HTTP header 带上 CSP 的指令的话，那将能够一劳永逸，同时支持多个页面。下图为响应头<br>　　不仅如此，这种形式的 Content-Security-Policy-Report-Only 方式能够得到更好的兼容支持，也是推荐方式。</p>\n<hr>\n<h2 id=\"CSP属性指令\"><a href=\"#CSP属性指令\" class=\"headerlink\" title=\"CSP属性指令\"></a>CSP属性指令</h2><table>\n<thead>\n<tr>\n<th>指令</th>\n<th align=\"center\">取值示例</th>\n<th align=\"right\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>default-src</td>\n<td align=\"center\">‘self’ cdn.example.com</td>\n<td align=\"right\">定义针对所有类型（js&#x2F;image&#x2F;css&#x2F;web font&#x2F;ajax&#x2F;iframe&#x2F;多媒体等）资源的默认加载策略，某类型资源如果没有单独定义策略，就使用默认。</td>\n</tr>\n<tr>\n<td>-src</td>\n<td align=\"center\">‘self’ js.example.com</td>\n<td align=\"right\">定义针对Java的加载策略</td>\n</tr>\n<tr>\n<td>object-src</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">针对,, 等标签的加载策略</td>\n</tr>\n<tr>\n<td>style-src</td>\n<td align=\"center\">‘self’ css.example.com</td>\n<td align=\"right\">定义针对样式的加载策略</td>\n</tr>\n<tr>\n<td>img-src</td>\n<td align=\"center\">‘self’ image.example.com</td>\n<td align=\"right\">定义针对图片的加载策略</td>\n</tr>\n<tr>\n<td>media-src</td>\n<td align=\"center\">‘media.example.com’</td>\n<td align=\"right\">针对或者引入的html多媒体等标签的加载策略</td>\n</tr>\n<tr>\n<td>frame-src</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">针对iframe的加载策略</td>\n</tr>\n<tr>\n<td>connect-src</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">针对Ajax、WebSocket等请求的加载策略。不允许的情况下，浏览器会模拟一个状态为400的响应</td>\n</tr>\n<tr>\n<td>font-src</td>\n<td align=\"center\">font.qq.com</td>\n<td align=\"right\">针对Web Font的加载策略</td>\n</tr>\n<tr>\n<td>sandbox</td>\n<td align=\"center\">allow-forms allow-s</td>\n<td align=\"right\">对请求的资源启用sandbox</td>\n</tr>\n<tr>\n<td>report-uri</td>\n<td align=\"center\">&#x2F;some-report-uri</td>\n<td align=\"right\">告诉浏览器如果请求的资源不被策略允许时，往哪个地址提交日志信息。不阻止任何内容，可以改用Content-Security-Policy-Report-Only头</td>\n</tr>\n<tr>\n<td>base-uri</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">限制当前页面的url（CSP2）</td>\n</tr>\n<tr>\n<td>child-src</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">限制子窗口的源(iframe、弹窗等),取代frame-src（CSP2）</td>\n</tr>\n<tr>\n<td>form-action</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">限制表单能够提交到的源（CSP2）</td>\n</tr>\n<tr>\n<td>frame-ancestors</td>\n<td align=\"center\">‘none’</td>\n<td align=\"right\">限制了当前页面可以被哪些页面以iframe,frame,object等方式加载（CSP2）</td>\n</tr>\n<tr>\n<td>plugin-types</td>\n<td align=\"center\">application&#x2F;pdf</td>\n<td align=\"right\">限制插件的类型（CSP2）</td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"CSP实践经验\"><a href=\"#CSP实践经验\" class=\"headerlink\" title=\"CSP实践经验\"></a>CSP实践经验</h3><p>　　CSP 的阻止加载及执行的方式相当强大，也因为它如此强大，所以在使用时更是要小心谨慎，毕竟，如一个不小心制定了错误的指令集合方案，那将可能导致阻止了正常文件的加载，影响业务功能，这是相当危险的。<br>　　一步步制定你的 CSP 方案<br>　　1. 通过 HTML Meta 标签进行初步方案的制定<br>　　这种方式实现成本低，只对当前的 HTML 有效，从而能够进行逐步灰度。当然也存在上面提及的兼容性问题，但如果现在是在移动端上，或者在可预期的浏览器内核上跑的话，在兼容性满足的情况下，那还是可以通过这个方式进行 Report-Only。结合自己业务的资源情况以及在 Chrome 上调试制定初步方案。<br>　　2. 使用 HTTP Header 的 Content-Security-Policy-Report-Only 方式进一步确定方案<br>　　由于上面的 Meta 标签存在一定的兼容问题，所以当我们制定了初步方案后，就可以开始使用 HTTP Header 的形式，小心驶得万年船，这里还是建议先使用 Report-Only 的方式，并指定上报的 url 来收集阻止的内容，通过上报的数据进行方案的优化，从而进一步确定具体方案。<br>　　3. HTTP Header 改用 Content-Security-Policy 策略进行实际拦截阻止<br>　　具体的 CSP 方案经过上面两轮洗礼，在分析完上报的数据，确定百无疏漏后，可将HTTP Header 改用 Content-Security-Policy 策略，从而进行实际拦截阻止。</p>\n<h3 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h3><p><a href=\"http://mt.sohu.com/20160620/n455409002.shtml\">XSS终结者-CSP理论与实践</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Security/CSP/CSP_policy_directives\">CSP 策略指令</a></p>\n","site":{"data":{}},"length":3599,"excerpt":"<h2 id=\"关于对XSS终结者CSP的学习\"><a href=\"#关于对XSS终结者CSP的学习\" class=\"headerlink\" title=\"关于对XSS终结者CSP的学习\"></a>关于对XSS终结者CSP的学习</h2><p>昨天在团队中做了关于前端安全XSS CRSF相关的分享，内容里有涉及到CSP，说实话在写ppt时，也只是粗略的看了下CSP，而没有去详细了解，今天就详细的做下记录吧</p>","more":"<h2 id=\"CSP概念\"><a href=\"#CSP概念\" class=\"headerlink\" title=\"CSP概念\"></a>CSP概念</h2><p>CSP 全称为 Content Security Policy，即内容安全策略。主要以白名单的形式配置可信任的内容来源，在网页中，能够使白名单中的内容正常执行（包含 JS，CSS，Image 等等），而非白名单的内容无法正常执行，从而减少跨站脚本攻击（XSS），当然，也能够减少运营商劫持的内容注入攻击。</p>\n<hr>\n<h3 id=\"CSP发展时间轴\"><a href=\"#CSP发展时间轴\" class=\"headerlink\" title=\"CSP发展时间轴\"></a>CSP发展时间轴</h3><p>毋容置疑CSP是一个伟大的策略，但CSP从最初设计到被W3C认可制定成通用标准，却经历了一个漫长而曲折的过程。</p>\n<ol>\n<li>CSP模型首次被提出<br>这要从2007年说起，当时XSS攻击已经在OWASP TOP10攻击中排名第一位，CSP的最初的设想就在这一年被Mozilla项目组的Gervase Markham和WEB安全界大牛Robert Hansen ‘rsnake’两人共同提出的。</li>\n<li>浏览器首次使用CSP<br>2011年3月Firefox 4.0发布，首次把CSP当作一种正式的安全策略规范使用到浏览器中。当时火狐使用的是自己定义的X-Content-Security-Policy 头。单从CSP推广上来看，Firefox4.0的发布是划时代的，虽然此时的CSP只是Firefox自己定义的一个内部标准。但在此之后，CSP的概 念被全球迅速推广。</li>\n<li>Chrome使用CSP<br>随后在2011年9月，谷歌在Chrome浏览器14.0版本发布时加入CSP，而Chrome浏览器使用的也是自己的 CSP标准，它使用X-Webkit-CSP头进行对CSP的解析，这个头从字面上更能看出来Chrome浏览器使用的是Webkit内核。此时世界主流 的2大浏览器Chrome、Firefox都已经支持了CSP。</li>\n<li>W3C起草CSP标准<br>作为标准发布的W3C组织顺其自然在2011年11月在官网上发布了CSP1.0草案。W3C的CSP1.0草案的语法和Firefox和Chrome中截然不同，随着时间的推移1年后，W3C的CSP1.0草案已经到了推选阶段，基本可以正式发布。</li>\n<li>全面支持W3C标准的CSP<br>在2012年2月Chrome25版本发布时，宣布支持W3C标准的CSP1.0。2013年6月Firefox宣布在 23版本中全面支持W3C的CSP1.0标准。同样是在2013年6月，W3C发布CSP1.1标准，里面又加入了不少语法，现在大多浏览器还都不支持。 IE10中开始支持CSP中的’sandbox’语法，其他语法暂不支持</li>\n</ol>\n<hr>\n<h2 id=\"CSP类型\"><a href=\"#CSP类型\" class=\"headerlink\" title=\"CSP类型\"></a>CSP类型</h2><ol>\n<li>Content-Security-Policy</li>\n<li>Content-Security-Policy-Report-Only<br>这两种策略类型的主要区别也可以从命名上看出，第一种对不安全的资源会进行阻止执行，而第二种只会进行数据上报，不会有实际的阻止。<br>当定义多个策略的时候，浏览器会优先采用最先定义的。</li>\n</ol>\n<hr>\n<h2 id=\"CSP示例\"><a href=\"#CSP示例\" class=\"headerlink\" title=\"CSP示例\"></a>CSP示例</h2><p>示例：在 HTML 的 Head 中添加如下 Meta 标签，将在符合 CSP 标准的浏览器中使非同源的 不被加载执行。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;Content-Security-Policy&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;-src &#x27;self&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"HTML-Meta-标签\"><a href=\"#HTML-Meta-标签\" class=\"headerlink\" title=\"HTML Meta 标签\"></a>HTML Meta 标签</h3><p>　　在这种形式中，Meta 标签主要含有两部分的 key-value：http-equivcontent<br>    http-equiv 的 value 为 CSP 的策略类型，而 content 则是声明指令集合，即白名单。如</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;Content-Security-Policy&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;-src &#x27;self&#x27;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>　　在HTML 的 head 中 添加上面的 Meta 标签，那么当浏览器支持 CSP 标准时，由于使用的是 Content-Security-Policy 实际阻止的策略，所以将会使得非同源的 （根据指令集合来定）不会被加载及执行。<br>　　Meta 标签的 Content-Security-Policy-Report-Only 方式在当前（2016&#x2F;5&#x2F;19）多数移动端浏览器上表现正常，但是 不推荐 这样做，如 chrome 50 会产生如下的提示<br>　　The report-only Content Security Policy xxxxxxx was delivered via a element,which is disallowed. The policy has been ignored.</p>\n<h1 id=\"HTTP-Header\"><a href=\"#HTTP-Header\" class=\"headerlink\" title=\"HTTP Header\"></a>HTTP Header</h1><p>　　通过 Meta 的方式很是简单，但当涉及到的页面较多时，使用 Meta 标签的方式需要在每个页面都各自加上。而如果通过服务端配置 HTML 返回的响应头 HTTP header 带上 CSP 的指令的话，那将能够一劳永逸，同时支持多个页面。下图为响应头<br>　　不仅如此，这种形式的 Content-Security-Policy-Report-Only 方式能够得到更好的兼容支持，也是推荐方式。</p>\n<hr>\n<h2 id=\"CSP属性指令\"><a href=\"#CSP属性指令\" class=\"headerlink\" title=\"CSP属性指令\"></a>CSP属性指令</h2><table>\n<thead>\n<tr>\n<th>指令</th>\n<th align=\"center\">取值示例</th>\n<th align=\"right\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>default-src</td>\n<td align=\"center\">‘self’ cdn.example.com</td>\n<td align=\"right\">定义针对所有类型（js&#x2F;image&#x2F;css&#x2F;web font&#x2F;ajax&#x2F;iframe&#x2F;多媒体等）资源的默认加载策略，某类型资源如果没有单独定义策略，就使用默认。</td>\n</tr>\n<tr>\n<td>-src</td>\n<td align=\"center\">‘self’ js.example.com</td>\n<td align=\"right\">定义针对Java的加载策略</td>\n</tr>\n<tr>\n<td>object-src</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">针对,, 等标签的加载策略</td>\n</tr>\n<tr>\n<td>style-src</td>\n<td align=\"center\">‘self’ css.example.com</td>\n<td align=\"right\">定义针对样式的加载策略</td>\n</tr>\n<tr>\n<td>img-src</td>\n<td align=\"center\">‘self’ image.example.com</td>\n<td align=\"right\">定义针对图片的加载策略</td>\n</tr>\n<tr>\n<td>media-src</td>\n<td align=\"center\">‘media.example.com’</td>\n<td align=\"right\">针对或者引入的html多媒体等标签的加载策略</td>\n</tr>\n<tr>\n<td>frame-src</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">针对iframe的加载策略</td>\n</tr>\n<tr>\n<td>connect-src</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">针对Ajax、WebSocket等请求的加载策略。不允许的情况下，浏览器会模拟一个状态为400的响应</td>\n</tr>\n<tr>\n<td>font-src</td>\n<td align=\"center\">font.qq.com</td>\n<td align=\"right\">针对Web Font的加载策略</td>\n</tr>\n<tr>\n<td>sandbox</td>\n<td align=\"center\">allow-forms allow-s</td>\n<td align=\"right\">对请求的资源启用sandbox</td>\n</tr>\n<tr>\n<td>report-uri</td>\n<td align=\"center\">&#x2F;some-report-uri</td>\n<td align=\"right\">告诉浏览器如果请求的资源不被策略允许时，往哪个地址提交日志信息。不阻止任何内容，可以改用Content-Security-Policy-Report-Only头</td>\n</tr>\n<tr>\n<td>base-uri</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">限制当前页面的url（CSP2）</td>\n</tr>\n<tr>\n<td>child-src</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">限制子窗口的源(iframe、弹窗等),取代frame-src（CSP2）</td>\n</tr>\n<tr>\n<td>form-action</td>\n<td align=\"center\">‘self’</td>\n<td align=\"right\">限制表单能够提交到的源（CSP2）</td>\n</tr>\n<tr>\n<td>frame-ancestors</td>\n<td align=\"center\">‘none’</td>\n<td align=\"right\">限制了当前页面可以被哪些页面以iframe,frame,object等方式加载（CSP2）</td>\n</tr>\n<tr>\n<td>plugin-types</td>\n<td align=\"center\">application&#x2F;pdf</td>\n<td align=\"right\">限制插件的类型（CSP2）</td>\n</tr>\n</tbody></table>\n<hr>\n<h3 id=\"CSP实践经验\"><a href=\"#CSP实践经验\" class=\"headerlink\" title=\"CSP实践经验\"></a>CSP实践经验</h3><p>　　CSP 的阻止加载及执行的方式相当强大，也因为它如此强大，所以在使用时更是要小心谨慎，毕竟，如一个不小心制定了错误的指令集合方案，那将可能导致阻止了正常文件的加载，影响业务功能，这是相当危险的。<br>　　一步步制定你的 CSP 方案<br>　　1. 通过 HTML Meta 标签进行初步方案的制定<br>　　这种方式实现成本低，只对当前的 HTML 有效，从而能够进行逐步灰度。当然也存在上面提及的兼容性问题，但如果现在是在移动端上，或者在可预期的浏览器内核上跑的话，在兼容性满足的情况下，那还是可以通过这个方式进行 Report-Only。结合自己业务的资源情况以及在 Chrome 上调试制定初步方案。<br>　　2. 使用 HTTP Header 的 Content-Security-Policy-Report-Only 方式进一步确定方案<br>　　由于上面的 Meta 标签存在一定的兼容问题，所以当我们制定了初步方案后，就可以开始使用 HTTP Header 的形式，小心驶得万年船，这里还是建议先使用 Report-Only 的方式，并指定上报的 url 来收集阻止的内容，通过上报的数据进行方案的优化，从而进一步确定具体方案。<br>　　3. HTTP Header 改用 Content-Security-Policy 策略进行实际拦截阻止<br>　　具体的 CSP 方案经过上面两轮洗礼，在分析完上报的数据，确定百无疏漏后，可将HTTP Header 改用 Content-Security-Policy 策略，从而进行实际拦截阻止。</p>\n<h3 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h3><p><a href=\"http://mt.sohu.com/20160620/n455409002.shtml\">XSS终结者-CSP理论与实践</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Security/CSP/CSP_policy_directives\">CSP 策略指令</a></p>"},{"title":"js面向对象","date":"2018-08-15T16:00:00.000Z","description":"js创建对象几种方式与js继承的实现","_content":"## ECMAScript中的创建对象模式与继承\n***\n>ECMAScript支持面向对象编程，但是没有类和接口。对象可以在代码执行过程中创建和增强，因此具有动态性而非严格定义的实体。在没有类的情况下，可以采用下列模式创建对象。\n\n<!--more-->\n***\n### js创建对象几种方式\n```javascript\n\t//工厂模式  解决了创建相似对象的问题\n\tfunction make(name,size,price){\n\t\tvar o =  new Object();\n\t\to.name = name;\n\t\to.size = size;\n\t\to.price = price;\n\t\to.showPrice = function(){\n\t\t\tconsole.log(this.price);\n\t\t};\n\t\treturn o;\n\t}\n\tvar suit = make('nike','xl',666);\n\t\n\t//构造函数模式  \n\tfunction Make(name,size,price){\n\t\tthis.name = name;\n\t\tthis.size = size;\n\t\tthis.price = price;\n\t\tthis.showPrice = function(){\n\t\t\tconsole.log(this.price);\n\t\t};\n\t}\n\tvar suit = new Make('nike','xl',666);\n\t\t\n\t//原型模式\n\tfunction Make(){\n\t}\n\tMake.prototype.name = 'nike';\n\tMake.prototype.size = 'xl';\n\tMake.prototype.price = 666;\n\tMake.prototype.showPrice = function(){\n\t\tconsole.log(this.price);\n\t}\n\t\n\tvar suit1 = new Make();\n\tvar suit2 = new Make();\n\tsuit1.name = '360';\n\tconsole.log(suit1.name); //'360' —— 来自实例\n\tconsole.log(suit2.name); //'nike' —— 来自原型\n\tdelete suit1.name;\n\tconsole.log(suit1.name); //'nike' —— 来自原型\n\t\n\t//组合模式 目前用的最多，认同度最高的一种创建自定义类型的方法\n\tfunction Make(name,size,price){\n\t\tthis.name = name;\n\t\tthis.size = size;\n\t\tthis.price = price;\n\t\tthis.number = 2;\n\t}\n\tMake.prototype = {\n\t\tconstructor : Make,\n\t\tshowPrice : function(){\n\t\t\tconsole.log(this.price);\n\t\t}\n\t}\n\t\n\tvar suit1 = new Make('nike','xl',666);\n\tvar suit2 = new Make('360','l',233);\n\tconsole.log(suit1.name === suit2.name); //false \n\tconsole.log(suit1.showPrice === suit2.showPrice); //true \n\t\n```\n***\n### js继承的实现\n> js中继承的实现原理：利用原型让一个引用类型继承另一个引用类型的属性和方法。\n\n***\n```javascript\n\t//同样的 原型继承会带来一些问题，第一个就是引用类型属性修改时会把对象内所有该属性修改，第二个就是创建子类函数实例时无法向超类型的构造函数传参\n\t//从而有个更好的继承方式  组合继承 原型+构造函数\n\tfunction SuperType(name){\n\t\tthis.name = name;\n\t\tthis.color = [\"red\",\"blue\",\"green\"];\n\t}\n\tSuperType.prototype.sayName = function(){\n\t\tconsole.log(this.name);\n\t}\n\tfunction SubType(name,age){\n\t\t//使用call方法继承SuperType 和  属性\n\t\tSuperType.call(this.name);\n\t\tthis.age = age;\n\t}\n\t//继承方法\n\tSubType.prototype = new SuperType();\n\tSubType.prototype.constructor = SubType;\n\tSubType.prototype.sayAge = function(){\n\t\tconsole.log(this.age)\n\t};\n```\n","source":"_posts/ECMAScript面向对象篇(OO).md","raw":"---\ntitle: js面向对象\ndate: 2018-08-16\ncategories: [前端,javascript]\ntags: [JavaScript]\ndescription: js创建对象几种方式与js继承的实现\n---\n## ECMAScript中的创建对象模式与继承\n***\n>ECMAScript支持面向对象编程，但是没有类和接口。对象可以在代码执行过程中创建和增强，因此具有动态性而非严格定义的实体。在没有类的情况下，可以采用下列模式创建对象。\n\n<!--more-->\n***\n### js创建对象几种方式\n```javascript\n\t//工厂模式  解决了创建相似对象的问题\n\tfunction make(name,size,price){\n\t\tvar o =  new Object();\n\t\to.name = name;\n\t\to.size = size;\n\t\to.price = price;\n\t\to.showPrice = function(){\n\t\t\tconsole.log(this.price);\n\t\t};\n\t\treturn o;\n\t}\n\tvar suit = make('nike','xl',666);\n\t\n\t//构造函数模式  \n\tfunction Make(name,size,price){\n\t\tthis.name = name;\n\t\tthis.size = size;\n\t\tthis.price = price;\n\t\tthis.showPrice = function(){\n\t\t\tconsole.log(this.price);\n\t\t};\n\t}\n\tvar suit = new Make('nike','xl',666);\n\t\t\n\t//原型模式\n\tfunction Make(){\n\t}\n\tMake.prototype.name = 'nike';\n\tMake.prototype.size = 'xl';\n\tMake.prototype.price = 666;\n\tMake.prototype.showPrice = function(){\n\t\tconsole.log(this.price);\n\t}\n\t\n\tvar suit1 = new Make();\n\tvar suit2 = new Make();\n\tsuit1.name = '360';\n\tconsole.log(suit1.name); //'360' —— 来自实例\n\tconsole.log(suit2.name); //'nike' —— 来自原型\n\tdelete suit1.name;\n\tconsole.log(suit1.name); //'nike' —— 来自原型\n\t\n\t//组合模式 目前用的最多，认同度最高的一种创建自定义类型的方法\n\tfunction Make(name,size,price){\n\t\tthis.name = name;\n\t\tthis.size = size;\n\t\tthis.price = price;\n\t\tthis.number = 2;\n\t}\n\tMake.prototype = {\n\t\tconstructor : Make,\n\t\tshowPrice : function(){\n\t\t\tconsole.log(this.price);\n\t\t}\n\t}\n\t\n\tvar suit1 = new Make('nike','xl',666);\n\tvar suit2 = new Make('360','l',233);\n\tconsole.log(suit1.name === suit2.name); //false \n\tconsole.log(suit1.showPrice === suit2.showPrice); //true \n\t\n```\n***\n### js继承的实现\n> js中继承的实现原理：利用原型让一个引用类型继承另一个引用类型的属性和方法。\n\n***\n```javascript\n\t//同样的 原型继承会带来一些问题，第一个就是引用类型属性修改时会把对象内所有该属性修改，第二个就是创建子类函数实例时无法向超类型的构造函数传参\n\t//从而有个更好的继承方式  组合继承 原型+构造函数\n\tfunction SuperType(name){\n\t\tthis.name = name;\n\t\tthis.color = [\"red\",\"blue\",\"green\"];\n\t}\n\tSuperType.prototype.sayName = function(){\n\t\tconsole.log(this.name);\n\t}\n\tfunction SubType(name,age){\n\t\t//使用call方法继承SuperType 和  属性\n\t\tSuperType.call(this.name);\n\t\tthis.age = age;\n\t}\n\t//继承方法\n\tSubType.prototype = new SuperType();\n\tSubType.prototype.constructor = SubType;\n\tSubType.prototype.sayAge = function(){\n\t\tconsole.log(this.age)\n\t};\n```\n","slug":"ECMAScript面向对象篇(OO)","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wl000jr2uf04wkhpea","content":"<h2 id=\"ECMAScript中的创建对象模式与继承\"><a href=\"#ECMAScript中的创建对象模式与继承\" class=\"headerlink\" title=\"ECMAScript中的创建对象模式与继承\"></a>ECMAScript中的创建对象模式与继承</h2><hr>\n<blockquote>\n<p>ECMAScript支持面向对象编程，但是没有类和接口。对象可以在代码执行过程中创建和增强，因此具有动态性而非严格定义的实体。在没有类的情况下，可以采用下列模式创建对象。</p>\n</blockquote>\n<span id=\"more\"></span>\n<hr>\n<h3 id=\"js创建对象几种方式\"><a href=\"#js创建对象几种方式\" class=\"headerlink\" title=\"js创建对象几种方式\"></a>js创建对象几种方式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//工厂模式  解决了创建相似对象的问题</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">make</span>(<span class=\"params\">name,size,price</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> o =  <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">\to.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">\to.<span class=\"property\">size</span> = size;</span><br><span class=\"line\">\to.<span class=\"property\">price</span> = price;</span><br><span class=\"line\">\to.<span class=\"property\">showPrice</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">price</span>);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> suit = <span class=\"title function_\">make</span>(<span class=\"string\">&#x27;nike&#x27;</span>,<span class=\"string\">&#x27;xl&#x27;</span>,<span class=\"number\">666</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//构造函数模式  </span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Make</span>(<span class=\"params\">name,size,price</span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">size</span> = size;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">price</span> = price;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">showPrice</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">price</span>);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> suit = <span class=\"keyword\">new</span> <span class=\"title class_\">Make</span>(<span class=\"string\">&#x27;nike&#x27;</span>,<span class=\"string\">&#x27;xl&#x27;</span>,<span class=\"number\">666</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">//原型模式</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Make</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Make</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;nike&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Make</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">size</span> = <span class=\"string\">&#x27;xl&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Make</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">price</span> = <span class=\"number\">666</span>;</span><br><span class=\"line\"><span class=\"title class_\">Make</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">showPrice</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">price</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> suit1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Make</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> suit2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Make</span>();</span><br><span class=\"line\">suit1.<span class=\"property\">name</span> = <span class=\"string\">&#x27;360&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(suit1.<span class=\"property\">name</span>); <span class=\"comment\">//&#x27;360&#x27; —— 来自实例</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(suit2.<span class=\"property\">name</span>); <span class=\"comment\">//&#x27;nike&#x27; —— 来自原型</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> suit1.<span class=\"property\">name</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(suit1.<span class=\"property\">name</span>); <span class=\"comment\">//&#x27;nike&#x27; —— 来自原型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//组合模式 目前用的最多，认同度最高的一种创建自定义类型的方法</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Make</span>(<span class=\"params\">name,size,price</span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">size</span> = size;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">price</span> = price;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">number</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Make</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = &#123;</span><br><span class=\"line\">\tconstructor : <span class=\"title class_\">Make</span>,</span><br><span class=\"line\">\tshowPrice : <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">price</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> suit1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Make</span>(<span class=\"string\">&#x27;nike&#x27;</span>,<span class=\"string\">&#x27;xl&#x27;</span>,<span class=\"number\">666</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> suit2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Make</span>(<span class=\"string\">&#x27;360&#x27;</span>,<span class=\"string\">&#x27;l&#x27;</span>,<span class=\"number\">233</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(suit1.<span class=\"property\">name</span> === suit2.<span class=\"property\">name</span>); <span class=\"comment\">//false </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(suit1.<span class=\"property\">showPrice</span> === suit2.<span class=\"property\">showPrice</span>); <span class=\"comment\">//true </span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"js继承的实现\"><a href=\"#js继承的实现\" class=\"headerlink\" title=\"js继承的实现\"></a>js继承的实现</h3><blockquote>\n<p>js中继承的实现原理：利用原型让一个引用类型继承另一个引用类型的属性和方法。</p>\n</blockquote>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//同样的 原型继承会带来一些问题，第一个就是引用类型属性修改时会把对象内所有该属性修改，第二个就是创建子类函数实例时无法向超类型的构造函数传参</span></span><br><span class=\"line\"><span class=\"comment\">//从而有个更好的继承方式  组合继承 原型+构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">SuperType</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = [<span class=\"string\">&quot;red&quot;</span>,<span class=\"string\">&quot;blue&quot;</span>,<span class=\"string\">&quot;green&quot;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">SuperType</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sayName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">SubType</span>(<span class=\"params\">name,age</span>)&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//使用call方法继承SuperType 和  属性</span></span><br><span class=\"line\">\t<span class=\"title class_\">SuperType</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//继承方法</span></span><br><span class=\"line\"><span class=\"title class_\">SubType</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> <span class=\"title class_\">SuperType</span>();</span><br><span class=\"line\"><span class=\"title class_\">SubType</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">SubType</span>;</span><br><span class=\"line\"><span class=\"title class_\">SubType</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sayAge</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">age</span>)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":2136,"excerpt":"<h2 id=\"ECMAScript中的创建对象模式与继承\"><a href=\"#ECMAScript中的创建对象模式与继承\" class=\"headerlink\" title=\"ECMAScript中的创建对象模式与继承\"></a>ECMAScript中的创建对象模式与继承</h2><hr>\n<blockquote>\n<p>ECMAScript支持面向对象编程，但是没有类和接口。对象可以在代码执行过程中创建和增强，因此具有动态性而非严格定义的实体。在没有类的情况下，可以采用下列模式创建对象。</p>\n</blockquote>","more":"<hr>\n<h3 id=\"js创建对象几种方式\"><a href=\"#js创建对象几种方式\" class=\"headerlink\" title=\"js创建对象几种方式\"></a>js创建对象几种方式</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//工厂模式  解决了创建相似对象的问题</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">make</span>(<span class=\"params\">name,size,price</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> o =  <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>();</span><br><span class=\"line\">\to.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">\to.<span class=\"property\">size</span> = size;</span><br><span class=\"line\">\to.<span class=\"property\">price</span> = price;</span><br><span class=\"line\">\to.<span class=\"property\">showPrice</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">price</span>);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> o;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> suit = <span class=\"title function_\">make</span>(<span class=\"string\">&#x27;nike&#x27;</span>,<span class=\"string\">&#x27;xl&#x27;</span>,<span class=\"number\">666</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//构造函数模式  </span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Make</span>(<span class=\"params\">name,size,price</span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">size</span> = size;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">price</span> = price;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">showPrice</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">price</span>);</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> suit = <span class=\"keyword\">new</span> <span class=\"title class_\">Make</span>(<span class=\"string\">&#x27;nike&#x27;</span>,<span class=\"string\">&#x27;xl&#x27;</span>,<span class=\"number\">666</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"comment\">//原型模式</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Make</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Make</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;nike&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Make</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">size</span> = <span class=\"string\">&#x27;xl&#x27;</span>;</span><br><span class=\"line\"><span class=\"title class_\">Make</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">price</span> = <span class=\"number\">666</span>;</span><br><span class=\"line\"><span class=\"title class_\">Make</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">showPrice</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">price</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> suit1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Make</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> suit2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Make</span>();</span><br><span class=\"line\">suit1.<span class=\"property\">name</span> = <span class=\"string\">&#x27;360&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(suit1.<span class=\"property\">name</span>); <span class=\"comment\">//&#x27;360&#x27; —— 来自实例</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(suit2.<span class=\"property\">name</span>); <span class=\"comment\">//&#x27;nike&#x27; —— 来自原型</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> suit1.<span class=\"property\">name</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(suit1.<span class=\"property\">name</span>); <span class=\"comment\">//&#x27;nike&#x27; —— 来自原型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//组合模式 目前用的最多，认同度最高的一种创建自定义类型的方法</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Make</span>(<span class=\"params\">name,size,price</span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">size</span> = size;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">price</span> = price;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">number</span> = <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Make</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = &#123;</span><br><span class=\"line\">\tconstructor : <span class=\"title class_\">Make</span>,</span><br><span class=\"line\">\tshowPrice : <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">price</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> suit1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Make</span>(<span class=\"string\">&#x27;nike&#x27;</span>,<span class=\"string\">&#x27;xl&#x27;</span>,<span class=\"number\">666</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> suit2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Make</span>(<span class=\"string\">&#x27;360&#x27;</span>,<span class=\"string\">&#x27;l&#x27;</span>,<span class=\"number\">233</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(suit1.<span class=\"property\">name</span> === suit2.<span class=\"property\">name</span>); <span class=\"comment\">//false </span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(suit1.<span class=\"property\">showPrice</span> === suit2.<span class=\"property\">showPrice</span>); <span class=\"comment\">//true </span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"js继承的实现\"><a href=\"#js继承的实现\" class=\"headerlink\" title=\"js继承的实现\"></a>js继承的实现</h3><blockquote>\n<p>js中继承的实现原理：利用原型让一个引用类型继承另一个引用类型的属性和方法。</p>\n</blockquote>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//同样的 原型继承会带来一些问题，第一个就是引用类型属性修改时会把对象内所有该属性修改，第二个就是创建子类函数实例时无法向超类型的构造函数传参</span></span><br><span class=\"line\"><span class=\"comment\">//从而有个更好的继承方式  组合继承 原型+构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">SuperType</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = [<span class=\"string\">&quot;red&quot;</span>,<span class=\"string\">&quot;blue&quot;</span>,<span class=\"string\">&quot;green&quot;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">SuperType</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sayName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">SubType</span>(<span class=\"params\">name,age</span>)&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//使用call方法继承SuperType 和  属性</span></span><br><span class=\"line\">\t<span class=\"title class_\">SuperType</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">\t<span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//继承方法</span></span><br><span class=\"line\"><span class=\"title class_\">SubType</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> <span class=\"title class_\">SuperType</span>();</span><br><span class=\"line\"><span class=\"title class_\">SubType</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">SubType</span>;</span><br><span class=\"line\"><span class=\"title class_\">SubType</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">sayAge</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">age</span>)</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>"},{"title":"JS中math，string对象理解","date":"2016-08-14T16:00:00.000Z","description":"JS内置对象学习","_content":"### Math对象的一些常用方法\nPI:3.1415926.....\nabs(x) 返回数字的相对值\nceil(x) 返回 x 四舍五入后的最大整数\nfloor(x) 返回 x 四舍五入后的最小整数\nmax(x,y) 返回 x 和 y 之间较大的数\nmin(x,y) 返回 x 和 y 之间较小的数\nrandom() 返回位于 0 到 1 之间的随机函数\n<!-- more -->\n## 指定范围内随机数\n1产生一个0-max的随机数\n// max - 期望的最大值\nparseInt(Math.random()\\*(max+1),10);\nMath.floor(Math.random()\\*(max+1));\n2产生一个1-max的随机数\n// max - 期望的最大值\nparseInt(Math.random()\\*max,10)+1;\nMath.floor(Math.random()\\*max)+1;\nMath.ceil(Math.random()\\*max);\n3产生一个min-max的随机数\n// max - 期望的最大值\n// min - 期望的最小值 \nparseInt(Math.random()\\*(max-min+1)+min,10);\nMath.floor(Math.random()\\*(max-min+1)+min);\nround(x) 四舍五进后与整\npow(x,y) 返回 y^x 的值\n\n>Math 对象并不像 Date 和 String 那样是对象的类，因此没有构造函数 Math()，像 Math.sin() 这样的函数只是函数，不是某个对象的方法。您无需创建它，通过把 Math 作为对象使用就可以调用其所有属性和方法。\n\n***\n### String对象的一些常用方法\nString\ntoLowerCase() 把字符串中的文本变成小写\ntoUpperCase() 把字符串中的文本变成大写\nsplit(delimiter)将字符串分配为数组\nsubstr(startIndex, length) 从startIndex与,取length个字符\nsubstring(startIndex, endIndex) 从startIndex和endIndex之间的字符,没有包含endIndex\nindexOf(searchString, startIndex) 返回字符串中第一个呈现指定字符串的地位\nlastlndexOf(searchString, startIndex) 返回字符串中最后一个呈现指定字符串的地位\ncharAt(index) 返回指定索引处的字符\nreplace(regex, newString)将字符串中的某些字符替代成其它字符","source":"_posts/JS-Math&Str.md","raw":"---\ntitle: JS中math，string对象理解\ndate: 2016-08-15\ncategories: [前端,javascript]\ntags: [JavaScript]\ndescription: JS内置对象学习\n---\n### Math对象的一些常用方法\nPI:3.1415926.....\nabs(x) 返回数字的相对值\nceil(x) 返回 x 四舍五入后的最大整数\nfloor(x) 返回 x 四舍五入后的最小整数\nmax(x,y) 返回 x 和 y 之间较大的数\nmin(x,y) 返回 x 和 y 之间较小的数\nrandom() 返回位于 0 到 1 之间的随机函数\n<!-- more -->\n## 指定范围内随机数\n1产生一个0-max的随机数\n// max - 期望的最大值\nparseInt(Math.random()\\*(max+1),10);\nMath.floor(Math.random()\\*(max+1));\n2产生一个1-max的随机数\n// max - 期望的最大值\nparseInt(Math.random()\\*max,10)+1;\nMath.floor(Math.random()\\*max)+1;\nMath.ceil(Math.random()\\*max);\n3产生一个min-max的随机数\n// max - 期望的最大值\n// min - 期望的最小值 \nparseInt(Math.random()\\*(max-min+1)+min,10);\nMath.floor(Math.random()\\*(max-min+1)+min);\nround(x) 四舍五进后与整\npow(x,y) 返回 y^x 的值\n\n>Math 对象并不像 Date 和 String 那样是对象的类，因此没有构造函数 Math()，像 Math.sin() 这样的函数只是函数，不是某个对象的方法。您无需创建它，通过把 Math 作为对象使用就可以调用其所有属性和方法。\n\n***\n### String对象的一些常用方法\nString\ntoLowerCase() 把字符串中的文本变成小写\ntoUpperCase() 把字符串中的文本变成大写\nsplit(delimiter)将字符串分配为数组\nsubstr(startIndex, length) 从startIndex与,取length个字符\nsubstring(startIndex, endIndex) 从startIndex和endIndex之间的字符,没有包含endIndex\nindexOf(searchString, startIndex) 返回字符串中第一个呈现指定字符串的地位\nlastlndexOf(searchString, startIndex) 返回字符串中最后一个呈现指定字符串的地位\ncharAt(index) 返回指定索引处的字符\nreplace(regex, newString)将字符串中的某些字符替代成其它字符","slug":"JS-Math&Str","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wl000mr2uf7gs97qia","content":"<h3 id=\"Math对象的一些常用方法\"><a href=\"#Math对象的一些常用方法\" class=\"headerlink\" title=\"Math对象的一些常用方法\"></a>Math对象的一些常用方法</h3><p>PI:3.1415926…..<br>abs(x) 返回数字的相对值<br>ceil(x) 返回 x 四舍五入后的最大整数<br>floor(x) 返回 x 四舍五入后的最小整数<br>max(x,y) 返回 x 和 y 之间较大的数<br>min(x,y) 返回 x 和 y 之间较小的数<br>random() 返回位于 0 到 1 之间的随机函数</p>\n<span id=\"more\"></span>\n<h2 id=\"指定范围内随机数\"><a href=\"#指定范围内随机数\" class=\"headerlink\" title=\"指定范围内随机数\"></a>指定范围内随机数</h2><p>1产生一个0-max的随机数<br>&#x2F;&#x2F; max - 期望的最大值<br>parseInt(Math.random()*(max+1),10);<br>Math.floor(Math.random()*(max+1));<br>2产生一个1-max的随机数<br>&#x2F;&#x2F; max - 期望的最大值<br>parseInt(Math.random()*max,10)+1;<br>Math.floor(Math.random()*max)+1;<br>Math.ceil(Math.random()*max);<br>3产生一个min-max的随机数<br>&#x2F;&#x2F; max - 期望的最大值<br>&#x2F;&#x2F; min - 期望的最小值<br>parseInt(Math.random()*(max-min+1)+min,10);<br>Math.floor(Math.random()*(max-min+1)+min);<br>round(x) 四舍五进后与整<br>pow(x,y) 返回 y^x 的值</p>\n<blockquote>\n<p>Math 对象并不像 Date 和 String 那样是对象的类，因此没有构造函数 Math()，像 Math.sin() 这样的函数只是函数，不是某个对象的方法。您无需创建它，通过把 Math 作为对象使用就可以调用其所有属性和方法。</p>\n</blockquote>\n<hr>\n<h3 id=\"String对象的一些常用方法\"><a href=\"#String对象的一些常用方法\" class=\"headerlink\" title=\"String对象的一些常用方法\"></a>String对象的一些常用方法</h3><p>String<br>toLowerCase() 把字符串中的文本变成小写<br>toUpperCase() 把字符串中的文本变成大写<br>split(delimiter)将字符串分配为数组<br>substr(startIndex, length) 从startIndex与,取length个字符<br>substring(startIndex, endIndex) 从startIndex和endIndex之间的字符,没有包含endIndex<br>indexOf(searchString, startIndex) 返回字符串中第一个呈现指定字符串的地位<br>lastlndexOf(searchString, startIndex) 返回字符串中最后一个呈现指定字符串的地位<br>charAt(index) 返回指定索引处的字符<br>replace(regex, newString)将字符串中的某些字符替代成其它字符</p>\n","site":{"data":{}},"length":1052,"excerpt":"<h3 id=\"Math对象的一些常用方法\"><a href=\"#Math对象的一些常用方法\" class=\"headerlink\" title=\"Math对象的一些常用方法\"></a>Math对象的一些常用方法</h3><p>PI:3.1415926…..<br>abs(x) 返回数字的相对值<br>ceil(x) 返回 x 四舍五入后的最大整数<br>floor(x) 返回 x 四舍五入后的最小整数<br>max(x,y) 返回 x 和 y 之间较大的数<br>min(x,y) 返回 x 和 y 之间较小的数<br>random() 返回位于 0 到 1 之间的随机函数</p>","more":"<h2 id=\"指定范围内随机数\"><a href=\"#指定范围内随机数\" class=\"headerlink\" title=\"指定范围内随机数\"></a>指定范围内随机数</h2><p>1产生一个0-max的随机数<br>&#x2F;&#x2F; max - 期望的最大值<br>parseInt(Math.random()*(max+1),10);<br>Math.floor(Math.random()*(max+1));<br>2产生一个1-max的随机数<br>&#x2F;&#x2F; max - 期望的最大值<br>parseInt(Math.random()*max,10)+1;<br>Math.floor(Math.random()*max)+1;<br>Math.ceil(Math.random()*max);<br>3产生一个min-max的随机数<br>&#x2F;&#x2F; max - 期望的最大值<br>&#x2F;&#x2F; min - 期望的最小值<br>parseInt(Math.random()*(max-min+1)+min,10);<br>Math.floor(Math.random()*(max-min+1)+min);<br>round(x) 四舍五进后与整<br>pow(x,y) 返回 y^x 的值</p>\n<blockquote>\n<p>Math 对象并不像 Date 和 String 那样是对象的类，因此没有构造函数 Math()，像 Math.sin() 这样的函数只是函数，不是某个对象的方法。您无需创建它，通过把 Math 作为对象使用就可以调用其所有属性和方法。</p>\n</blockquote>\n<hr>\n<h3 id=\"String对象的一些常用方法\"><a href=\"#String对象的一些常用方法\" class=\"headerlink\" title=\"String对象的一些常用方法\"></a>String对象的一些常用方法</h3><p>String<br>toLowerCase() 把字符串中的文本变成小写<br>toUpperCase() 把字符串中的文本变成大写<br>split(delimiter)将字符串分配为数组<br>substr(startIndex, length) 从startIndex与,取length个字符<br>substring(startIndex, endIndex) 从startIndex和endIndex之间的字符,没有包含endIndex<br>indexOf(searchString, startIndex) 返回字符串中第一个呈现指定字符串的地位<br>lastlndexOf(searchString, startIndex) 返回字符串中最后一个呈现指定字符串的地位<br>charAt(index) 返回指定索引处的字符<br>replace(regex, newString)将字符串中的某些字符替代成其它字符</p>"},{"title":"JS异常处理","date":"2016-07-17T16:00:00.000Z","description":"js中异常机制","_content":"\n## JS异常处理机制\nECMA-262第三版引入了跟java中一样的try catch语句，用于js代码中的错误处理。\n<!-- more -->\n```javascript\n<script>\n\tvar tip = \"正常执行\",err = \"异常处理1\";\n\tfunction try_catch(){\n\t\ttry{\n\t\t\t//可能会导致错误的代码\n\t\t\tconsole.log(tips);\n\t\t}catch(error){\n\t\t\t//在错误时怎么处理\n\t\t\tconsole.log(err);\n\t\t\tconsole.log(error);\n\t\t\tconsole.log(error.message);\n\t\t\tthrow '任何玩意都行，反正是自定义的错误信息'; //抛出异常\n\t\t\treturn ;\n\t\t}finally{\n\t\t\tconsole.log('最后始终要执行。'); //return都毫无效果\n\t\t}\n\t}\n\ttry_catch();\n</script>\n```\n浏览器 console结果：\n\n异常处理 \nexception.html:25 ReferenceError: tips is not defined\n    at try_catch (exception.html:22)\n    at exception.html:33\nexception.html:26 tips is not defined\nexception.html:30 最后始终要执行。\nexception.html:27 Uncaught 任何玩意都行，反正是自定义的错误信息\ntry_catch @ exception.html:27\n(anonymous) @ exception.html:33\n\n*补充：try catch只适用于同步代码，异步异常无法捕获*\n## 需要注意的地方：finally是不管try catch怎样都会执行的，所以用的时候要慎重。\n\n","source":"_posts/JS-error.md","raw":"---\ntitle: JS异常处理\ndate: 2016-07-18\ncategories: [前端,javascript]\ntags: [JavaScript]\ndescription: js中异常机制\n---\n\n## JS异常处理机制\nECMA-262第三版引入了跟java中一样的try catch语句，用于js代码中的错误处理。\n<!-- more -->\n```javascript\n<script>\n\tvar tip = \"正常执行\",err = \"异常处理1\";\n\tfunction try_catch(){\n\t\ttry{\n\t\t\t//可能会导致错误的代码\n\t\t\tconsole.log(tips);\n\t\t}catch(error){\n\t\t\t//在错误时怎么处理\n\t\t\tconsole.log(err);\n\t\t\tconsole.log(error);\n\t\t\tconsole.log(error.message);\n\t\t\tthrow '任何玩意都行，反正是自定义的错误信息'; //抛出异常\n\t\t\treturn ;\n\t\t}finally{\n\t\t\tconsole.log('最后始终要执行。'); //return都毫无效果\n\t\t}\n\t}\n\ttry_catch();\n</script>\n```\n浏览器 console结果：\n\n异常处理 \nexception.html:25 ReferenceError: tips is not defined\n    at try_catch (exception.html:22)\n    at exception.html:33\nexception.html:26 tips is not defined\nexception.html:30 最后始终要执行。\nexception.html:27 Uncaught 任何玩意都行，反正是自定义的错误信息\ntry_catch @ exception.html:27\n(anonymous) @ exception.html:33\n\n*补充：try catch只适用于同步代码，异步异常无法捕获*\n## 需要注意的地方：finally是不管try catch怎样都会执行的，所以用的时候要慎重。\n\n","slug":"JS-error","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wl000rr2uf9crq3i89","content":"<h2 id=\"JS异常处理机制\"><a href=\"#JS异常处理机制\" class=\"headerlink\" title=\"JS异常处理机制\"></a>JS异常处理机制</h2><p>ECMA-262第三版引入了跟java中一样的try catch语句，用于js代码中的错误处理。</p>\n<span id=\"more\"></span>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> tip = <span class=\"string\">&quot;正常执行&quot;</span>,err = <span class=\"string\">&quot;异常处理1&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">try_catch</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//可能会导致错误的代码</span></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(tips);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">catch</span>(error)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//在错误时怎么处理</span></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err);</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error);</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error.<span class=\"property\">message</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"string\">&#x27;任何玩意都行，反正是自定义的错误信息&#x27;</span>; <span class=\"comment\">//抛出异常</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;最后始终要执行。&#x27;</span>); <span class=\"comment\">//return都毫无效果</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"title function_\">try_catch</span>();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>浏览器 console结果：</p>\n<p>异常处理<br>exception.html:25 ReferenceError: tips is not defined<br>    at try_catch (exception.html:22)<br>    at exception.html:33<br>exception.html:26 tips is not defined<br>exception.html:30 最后始终要执行。<br>exception.html:27 Uncaught 任何玩意都行，反正是自定义的错误信息<br>try_catch @ exception.html:27<br>(anonymous) @ exception.html:33</p>\n<p><em>补充：try catch只适用于同步代码，异步异常无法捕获</em></p>\n<h2 id=\"需要注意的地方：finally是不管try-catch怎样都会执行的，所以用的时候要慎重。\"><a href=\"#需要注意的地方：finally是不管try-catch怎样都会执行的，所以用的时候要慎重。\" class=\"headerlink\" title=\"需要注意的地方：finally是不管try catch怎样都会执行的，所以用的时候要慎重。\"></a>需要注意的地方：finally是不管try catch怎样都会执行的，所以用的时候要慎重。</h2>","site":{"data":{}},"length":802,"excerpt":"<h2 id=\"JS异常处理机制\"><a href=\"#JS异常处理机制\" class=\"headerlink\" title=\"JS异常处理机制\"></a>JS异常处理机制</h2><p>ECMA-262第三版引入了跟java中一样的try catch语句，用于js代码中的错误处理。</p>","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> tip = <span class=\"string\">&quot;正常执行&quot;</span>,err = <span class=\"string\">&quot;异常处理1&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">try_catch</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//可能会导致错误的代码</span></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(tips);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">catch</span>(error)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//在错误时怎么处理</span></span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(err);</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error);</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(error.<span class=\"property\">message</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"string\">&#x27;任何玩意都行，反正是自定义的错误信息&#x27;</span>; <span class=\"comment\">//抛出异常</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">finally</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;最后始终要执行。&#x27;</span>); <span class=\"comment\">//return都毫无效果</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"title function_\">try_catch</span>();</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>浏览器 console结果：</p>\n<p>异常处理<br>exception.html:25 ReferenceError: tips is not defined<br>    at try_catch (exception.html:22)<br>    at exception.html:33<br>exception.html:26 tips is not defined<br>exception.html:30 最后始终要执行。<br>exception.html:27 Uncaught 任何玩意都行，反正是自定义的错误信息<br>try_catch @ exception.html:27<br>(anonymous) @ exception.html:33</p>\n<p><em>补充：try catch只适用于同步代码，异步异常无法捕获</em></p>\n<h2 id=\"需要注意的地方：finally是不管try-catch怎样都会执行的，所以用的时候要慎重。\"><a href=\"#需要注意的地方：finally是不管try-catch怎样都会执行的，所以用的时候要慎重。\" class=\"headerlink\" title=\"需要注意的地方：finally是不管try catch怎样都会执行的，所以用的时候要慎重。\"></a>需要注意的地方：finally是不管try catch怎样都会执行的，所以用的时候要慎重。</h2>"},{"title":"JS中的Event-loop","date":"2020-02-29T16:00:00.000Z","description":"JavaScript-JS中的Event-loop","_content":"\n<a name=\"e8FK1\"></a>\n### 一道面试题\n理解Event-loop之前，我们先来看一道经典的面试题。\n<!--more-->\n\n> 最后的打印顺序是什么？\n> ```javascript\nconsole.log(1);\n\nsetTimeout(() => {\n  console.log(2);\n  Promise.resolve().then(() => {\n    console.log(3)\n  });\n});\n\nnew Promise((resolve, reject) => {\n  console.log(4)\n  resolve(5)\n}).then((data) => {\n  console.log(data);\n})\n\nsetTimeout(() => {\n  console.log(6);\n})\n\nconsole.log(7);\n```\n\n是不是看着一下子有点懵，别急，relax，我们慢慢来剖析。\n\n---\n\n<a name=\"KXDDw\"></a>\n### 理解一些概念\n**宏队列，macrotask，也叫tasks。** 一些异步任务的回调会依次进入macro task queue，等待后续被调用，这些异步任务包括：\n\n- setTimeout\n- setInterval\n- setImmediate (Node独有)\n- requestAnimationFrame (浏览器独有)\n- I/O\n- UI rendering (浏览器独有）\n\n**微队列，microtask，也叫jobs。** 另一些异步任务的回调会依次进入micro task queue，等待后续被调用，这些异步任务包括：\n\n- process.nextTick (Node独有)\n- Promise\n- Object.observe\n- MutationObserver\n\n（注：只针对浏览器和NodeJS）\n\n<a name=\"UyWFt\"></a>\n### 看懂一张图\n浏览器event-loop机制\n\n![event-loop.png](https://picture-1256757196.cos.ap-chengdu.myqcloud.com/event.png)\n\n解释下这个流程，发生的一些事情：\n\n1. 执行全局Script同步代码，这些同步代码有一些是同步语句，有一些是异步语句（比如setTimeout等）；\n1. 全局Script代码执行完毕后，调用栈Stack会清空；\n1. 从微队列microtask queue中取出位于队首的回调任务，放入调用栈Stack中执行，执行完后microtask queue长度减1；\n1. 继续取出位于队首的任务，放入调用栈Stack中执行，以此类推，直到直到把microtask queue中的所有任务都执行完毕。**注意，如果在执行microtask的过程中，又产生了microtask，那么会加入到队列的末尾，也会在这个周期被调用执行**；\n1. microtask queue中的所有任务都执行完毕，此时microtask queue为空队列，调用栈Stack也为空；\n1. 取出宏队列macrotask queue中位于队首的任务，放入Stack中执行；\n1. 执行完毕后，调用栈Stack为空；\n1. 重复第3-7个步骤；\n1. 重复第3-7个步骤；\n\n...\n\n比较重要的3个流程：\n\n1. 宏队列macrotask一次只从队列中取一个任务执行，执行完后就去执行微任务队列中的任务；\n1. 微任务队列中所有的任务都会被依次取出来执行，知道microtask queue为空；\n1. 图中没有画UI rendering的节点，因为这个是由浏览器自行判断决定的，但是只要执行UI rendering，它的节点是在执行完所有的microtask之后，下一个macrotask之前，紧跟着执行UI render。\n\n现在可以去尝试着剖析那道题了。\n\n<a name=\"y52qe\"></a>\n### 解题\n\n```javascript\nconsole.log(1);\n\nsetTimeout(() => {\n  console.log(2);\n  Promise.resolve().then(() => {\n    console.log(3)\n  });\n});\n\nnew Promise((resolve, reject) => {\n  console.log(4)\n  resolve(5)\n}).then((data) => {\n  console.log(data);\n})\n\nsetTimeout(() => {\n  console.log(6);\n})\n\nconsole.log(7);\n\n// step1. 执行全局代码，打印1\n// step2. setTimeout 放入宏任务队列，待执行\n// step3. promise 同步代码先执行，打印4，.then() promise异步代码放入微任务队列\n// step4. setTimeout 放入宏任务队列，待执行\n// step5. 执行全局代码，打印7\n// step6. 执行微任务队列，队首任务，打印5\n// step7. 执行宏任务队列，队首任务，打印2，执行完后执行微任务队列，队首任务，打印3\n// step8. 执行宏任务队列，队首任务，打印6\n\n// 最后的答案就是：\n// 1、4、7、5、2、3、6\n// 不相信的话可以去浏览器console试试，打印结果。\n```\n\n---\n\n<a name=\"DotTL\"></a>\n### 发现一张动图，生动形象\n\n```javascript\nconst foo = () => console.log(\"First\");\nconst bar = () => setTimeout(() => console.log(\"Second\"), 500);\nconst baz = () => console.log(\"Third\");\n\nbar();\nfoo();\nbaz();\n\n```\n\n\n[https://user-gold-cdn.xitu.io/2019/12/31/16f593b2275fec67?imageslim](https://user-gold-cdn.xitu.io/2019/12/31/16f593b2275fec67?imageslim)\n","source":"_posts/JavaScript-JS中的Event-loop.md","raw":"---\ntitle: JS中的Event-loop\ndate: 2020-03-01\ncategories: [前端,javascript]\ntags: [javascript,前端]\ndescription: JavaScript-JS中的Event-loop\n---\n\n<a name=\"e8FK1\"></a>\n### 一道面试题\n理解Event-loop之前，我们先来看一道经典的面试题。\n<!--more-->\n\n> 最后的打印顺序是什么？\n> ```javascript\nconsole.log(1);\n\nsetTimeout(() => {\n  console.log(2);\n  Promise.resolve().then(() => {\n    console.log(3)\n  });\n});\n\nnew Promise((resolve, reject) => {\n  console.log(4)\n  resolve(5)\n}).then((data) => {\n  console.log(data);\n})\n\nsetTimeout(() => {\n  console.log(6);\n})\n\nconsole.log(7);\n```\n\n是不是看着一下子有点懵，别急，relax，我们慢慢来剖析。\n\n---\n\n<a name=\"KXDDw\"></a>\n### 理解一些概念\n**宏队列，macrotask，也叫tasks。** 一些异步任务的回调会依次进入macro task queue，等待后续被调用，这些异步任务包括：\n\n- setTimeout\n- setInterval\n- setImmediate (Node独有)\n- requestAnimationFrame (浏览器独有)\n- I/O\n- UI rendering (浏览器独有）\n\n**微队列，microtask，也叫jobs。** 另一些异步任务的回调会依次进入micro task queue，等待后续被调用，这些异步任务包括：\n\n- process.nextTick (Node独有)\n- Promise\n- Object.observe\n- MutationObserver\n\n（注：只针对浏览器和NodeJS）\n\n<a name=\"UyWFt\"></a>\n### 看懂一张图\n浏览器event-loop机制\n\n![event-loop.png](https://picture-1256757196.cos.ap-chengdu.myqcloud.com/event.png)\n\n解释下这个流程，发生的一些事情：\n\n1. 执行全局Script同步代码，这些同步代码有一些是同步语句，有一些是异步语句（比如setTimeout等）；\n1. 全局Script代码执行完毕后，调用栈Stack会清空；\n1. 从微队列microtask queue中取出位于队首的回调任务，放入调用栈Stack中执行，执行完后microtask queue长度减1；\n1. 继续取出位于队首的任务，放入调用栈Stack中执行，以此类推，直到直到把microtask queue中的所有任务都执行完毕。**注意，如果在执行microtask的过程中，又产生了microtask，那么会加入到队列的末尾，也会在这个周期被调用执行**；\n1. microtask queue中的所有任务都执行完毕，此时microtask queue为空队列，调用栈Stack也为空；\n1. 取出宏队列macrotask queue中位于队首的任务，放入Stack中执行；\n1. 执行完毕后，调用栈Stack为空；\n1. 重复第3-7个步骤；\n1. 重复第3-7个步骤；\n\n...\n\n比较重要的3个流程：\n\n1. 宏队列macrotask一次只从队列中取一个任务执行，执行完后就去执行微任务队列中的任务；\n1. 微任务队列中所有的任务都会被依次取出来执行，知道microtask queue为空；\n1. 图中没有画UI rendering的节点，因为这个是由浏览器自行判断决定的，但是只要执行UI rendering，它的节点是在执行完所有的microtask之后，下一个macrotask之前，紧跟着执行UI render。\n\n现在可以去尝试着剖析那道题了。\n\n<a name=\"y52qe\"></a>\n### 解题\n\n```javascript\nconsole.log(1);\n\nsetTimeout(() => {\n  console.log(2);\n  Promise.resolve().then(() => {\n    console.log(3)\n  });\n});\n\nnew Promise((resolve, reject) => {\n  console.log(4)\n  resolve(5)\n}).then((data) => {\n  console.log(data);\n})\n\nsetTimeout(() => {\n  console.log(6);\n})\n\nconsole.log(7);\n\n// step1. 执行全局代码，打印1\n// step2. setTimeout 放入宏任务队列，待执行\n// step3. promise 同步代码先执行，打印4，.then() promise异步代码放入微任务队列\n// step4. setTimeout 放入宏任务队列，待执行\n// step5. 执行全局代码，打印7\n// step6. 执行微任务队列，队首任务，打印5\n// step7. 执行宏任务队列，队首任务，打印2，执行完后执行微任务队列，队首任务，打印3\n// step8. 执行宏任务队列，队首任务，打印6\n\n// 最后的答案就是：\n// 1、4、7、5、2、3、6\n// 不相信的话可以去浏览器console试试，打印结果。\n```\n\n---\n\n<a name=\"DotTL\"></a>\n### 发现一张动图，生动形象\n\n```javascript\nconst foo = () => console.log(\"First\");\nconst bar = () => setTimeout(() => console.log(\"Second\"), 500);\nconst baz = () => console.log(\"Third\");\n\nbar();\nfoo();\nbaz();\n\n```\n\n\n[https://user-gold-cdn.xitu.io/2019/12/31/16f593b2275fec67?imageslim](https://user-gold-cdn.xitu.io/2019/12/31/16f593b2275fec67?imageslim)\n","slug":"JavaScript-JS中的Event-loop","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wm000tr2uf0hnpbik9","content":"<p><a name=\"e8FK1\"></a></p>\n<h3 id=\"一道面试题\"><a href=\"#一道面试题\" class=\"headerlink\" title=\"一道面试题\"></a>一道面试题</h3><p>理解Event-loop之前，我们先来看一道经典的面试题。</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>最后的打印顺序是什么？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\"> &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">4</span>)</span><br><span class=\"line\"> <span class=\"title function_\">resolve</span>(<span class=\"number\">5</span>)</span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">6</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">7</span>);</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>是不是看着一下子有点懵，别急，relax，我们慢慢来剖析。</p>\n<hr>\n<p><a name=\"KXDDw\"></a></p>\n<h3 id=\"理解一些概念\"><a href=\"#理解一些概念\" class=\"headerlink\" title=\"理解一些概念\"></a>理解一些概念</h3><p><strong>宏队列，macrotask，也叫tasks。</strong> 一些异步任务的回调会依次进入macro task queue，等待后续被调用，这些异步任务包括：</p>\n<ul>\n<li>setTimeout</li>\n<li>setInterval</li>\n<li>setImmediate (Node独有)</li>\n<li>requestAnimationFrame (浏览器独有)</li>\n<li>I&#x2F;O</li>\n<li>UI rendering (浏览器独有）</li>\n</ul>\n<p><strong>微队列，microtask，也叫jobs。</strong> 另一些异步任务的回调会依次进入micro task queue，等待后续被调用，这些异步任务包括：</p>\n<ul>\n<li>process.nextTick (Node独有)</li>\n<li>Promise</li>\n<li>Object.observe</li>\n<li>MutationObserver</li>\n</ul>\n<p>（注：只针对浏览器和NodeJS）</p>\n<p><a name=\"UyWFt\"></a></p>\n<h3 id=\"看懂一张图\"><a href=\"#看懂一张图\" class=\"headerlink\" title=\"看懂一张图\"></a>看懂一张图</h3><p>浏览器event-loop机制</p>\n<p><img src=\"https://picture-1256757196.cos.ap-chengdu.myqcloud.com/event.png\" alt=\"event-loop.png\"></p>\n<p>解释下这个流程，发生的一些事情：</p>\n<ol>\n<li>执行全局Script同步代码，这些同步代码有一些是同步语句，有一些是异步语句（比如setTimeout等）；</li>\n<li>全局Script代码执行完毕后，调用栈Stack会清空；</li>\n<li>从微队列microtask queue中取出位于队首的回调任务，放入调用栈Stack中执行，执行完后microtask queue长度减1；</li>\n<li>继续取出位于队首的任务，放入调用栈Stack中执行，以此类推，直到直到把microtask queue中的所有任务都执行完毕。<strong>注意，如果在执行microtask的过程中，又产生了microtask，那么会加入到队列的末尾，也会在这个周期被调用执行</strong>；</li>\n<li>microtask queue中的所有任务都执行完毕，此时microtask queue为空队列，调用栈Stack也为空；</li>\n<li>取出宏队列macrotask queue中位于队首的任务，放入Stack中执行；</li>\n<li>执行完毕后，调用栈Stack为空；</li>\n<li>重复第3-7个步骤；</li>\n<li>重复第3-7个步骤；</li>\n</ol>\n<p>…</p>\n<p>比较重要的3个流程：</p>\n<ol>\n<li>宏队列macrotask一次只从队列中取一个任务执行，执行完后就去执行微任务队列中的任务；</li>\n<li>微任务队列中所有的任务都会被依次取出来执行，知道microtask queue为空；</li>\n<li>图中没有画UI rendering的节点，因为这个是由浏览器自行判断决定的，但是只要执行UI rendering，它的节点是在执行完所有的microtask之后，下一个macrotask之前，紧跟着执行UI render。</li>\n</ol>\n<p>现在可以去尝试着剖析那道题了。</p>\n<p><a name=\"y52qe\"></a></p>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">  <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">4</span>)</span><br><span class=\"line\">  <span class=\"title function_\">resolve</span>(<span class=\"number\">5</span>)</span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">6</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// step1. 执行全局代码，打印1</span></span><br><span class=\"line\"><span class=\"comment\">// step2. setTimeout 放入宏任务队列，待执行</span></span><br><span class=\"line\"><span class=\"comment\">// step3. promise 同步代码先执行，打印4，.then() promise异步代码放入微任务队列</span></span><br><span class=\"line\"><span class=\"comment\">// step4. setTimeout 放入宏任务队列，待执行</span></span><br><span class=\"line\"><span class=\"comment\">// step5. 执行全局代码，打印7</span></span><br><span class=\"line\"><span class=\"comment\">// step6. 执行微任务队列，队首任务，打印5</span></span><br><span class=\"line\"><span class=\"comment\">// step7. 执行宏任务队列，队首任务，打印2，执行完后执行微任务队列，队首任务，打印3</span></span><br><span class=\"line\"><span class=\"comment\">// step8. 执行宏任务队列，队首任务，打印6</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 最后的答案就是：</span></span><br><span class=\"line\"><span class=\"comment\">// 1、4、7、5、2、3、6</span></span><br><span class=\"line\"><span class=\"comment\">// 不相信的话可以去浏览器console试试，打印结果。</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><a name=\"DotTL\"></a></p>\n<h3 id=\"发现一张动图，生动形象\"><a href=\"#发现一张动图，生动形象\" class=\"headerlink\" title=\"发现一张动图，生动形象\"></a>发现一张动图，生动形象</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">foo</span> = (<span class=\"params\"></span>) =&gt; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;First&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">bar</span> = (<span class=\"params\"></span>) =&gt; <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Second&quot;</span>), <span class=\"number\">500</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">baz</span> = (<span class=\"params\"></span>) =&gt; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Third&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">bar</span>();</span><br><span class=\"line\"><span class=\"title function_\">foo</span>();</span><br><span class=\"line\"><span class=\"title function_\">baz</span>();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p><a href=\"https://user-gold-cdn.xitu.io/2019/12/31/16f593b2275fec67?imageslim\">https://user-gold-cdn.xitu.io/2019/12/31/16f593b2275fec67?imageslim</a></p>\n","site":{"data":{}},"length":2304,"excerpt":"<p><a name=\"e8FK1\"></a></p>\n<h3 id=\"一道面试题\"><a href=\"#一道面试题\" class=\"headerlink\" title=\"一道面试题\"></a>一道面试题</h3><p>理解Event-loop之前，我们先来看一道经典的面试题。</p>","more":"<blockquote>\n<p>最后的打印顺序是什么？</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"> <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\"> &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">4</span>)</span><br><span class=\"line\"> <span class=\"title function_\">resolve</span>(<span class=\"number\">5</span>)</span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">6</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">7</span>);</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>是不是看着一下子有点懵，别急，relax，我们慢慢来剖析。</p>\n<hr>\n<p><a name=\"KXDDw\"></a></p>\n<h3 id=\"理解一些概念\"><a href=\"#理解一些概念\" class=\"headerlink\" title=\"理解一些概念\"></a>理解一些概念</h3><p><strong>宏队列，macrotask，也叫tasks。</strong> 一些异步任务的回调会依次进入macro task queue，等待后续被调用，这些异步任务包括：</p>\n<ul>\n<li>setTimeout</li>\n<li>setInterval</li>\n<li>setImmediate (Node独有)</li>\n<li>requestAnimationFrame (浏览器独有)</li>\n<li>I&#x2F;O</li>\n<li>UI rendering (浏览器独有）</li>\n</ul>\n<p><strong>微队列，microtask，也叫jobs。</strong> 另一些异步任务的回调会依次进入micro task queue，等待后续被调用，这些异步任务包括：</p>\n<ul>\n<li>process.nextTick (Node独有)</li>\n<li>Promise</li>\n<li>Object.observe</li>\n<li>MutationObserver</li>\n</ul>\n<p>（注：只针对浏览器和NodeJS）</p>\n<p><a name=\"UyWFt\"></a></p>\n<h3 id=\"看懂一张图\"><a href=\"#看懂一张图\" class=\"headerlink\" title=\"看懂一张图\"></a>看懂一张图</h3><p>浏览器event-loop机制</p>\n<p><img src=\"https://picture-1256757196.cos.ap-chengdu.myqcloud.com/event.png\" alt=\"event-loop.png\"></p>\n<p>解释下这个流程，发生的一些事情：</p>\n<ol>\n<li>执行全局Script同步代码，这些同步代码有一些是同步语句，有一些是异步语句（比如setTimeout等）；</li>\n<li>全局Script代码执行完毕后，调用栈Stack会清空；</li>\n<li>从微队列microtask queue中取出位于队首的回调任务，放入调用栈Stack中执行，执行完后microtask queue长度减1；</li>\n<li>继续取出位于队首的任务，放入调用栈Stack中执行，以此类推，直到直到把microtask queue中的所有任务都执行完毕。<strong>注意，如果在执行microtask的过程中，又产生了microtask，那么会加入到队列的末尾，也会在这个周期被调用执行</strong>；</li>\n<li>microtask queue中的所有任务都执行完毕，此时microtask queue为空队列，调用栈Stack也为空；</li>\n<li>取出宏队列macrotask queue中位于队首的任务，放入Stack中执行；</li>\n<li>执行完毕后，调用栈Stack为空；</li>\n<li>重复第3-7个步骤；</li>\n<li>重复第3-7个步骤；</li>\n</ol>\n<p>…</p>\n<p>比较重要的3个流程：</p>\n<ol>\n<li>宏队列macrotask一次只从队列中取一个任务执行，执行完后就去执行微任务队列中的任务；</li>\n<li>微任务队列中所有的任务都会被依次取出来执行，知道microtask queue为空；</li>\n<li>图中没有画UI rendering的节点，因为这个是由浏览器自行判断决定的，但是只要执行UI rendering，它的节点是在执行完所有的microtask之后，下一个macrotask之前，紧跟着执行UI render。</li>\n</ol>\n<p>现在可以去尝试着剖析那道题了。</p>\n<p><a name=\"y52qe\"></a></p>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">  <span class=\"title class_\">Promise</span>.<span class=\"title function_\">resolve</span>().<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">3</span>)</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">4</span>)</span><br><span class=\"line\">  <span class=\"title function_\">resolve</span>(<span class=\"number\">5</span>)</span><br><span class=\"line\">&#125;).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">6</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"number\">7</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// step1. 执行全局代码，打印1</span></span><br><span class=\"line\"><span class=\"comment\">// step2. setTimeout 放入宏任务队列，待执行</span></span><br><span class=\"line\"><span class=\"comment\">// step3. promise 同步代码先执行，打印4，.then() promise异步代码放入微任务队列</span></span><br><span class=\"line\"><span class=\"comment\">// step4. setTimeout 放入宏任务队列，待执行</span></span><br><span class=\"line\"><span class=\"comment\">// step5. 执行全局代码，打印7</span></span><br><span class=\"line\"><span class=\"comment\">// step6. 执行微任务队列，队首任务，打印5</span></span><br><span class=\"line\"><span class=\"comment\">// step7. 执行宏任务队列，队首任务，打印2，执行完后执行微任务队列，队首任务，打印3</span></span><br><span class=\"line\"><span class=\"comment\">// step8. 执行宏任务队列，队首任务，打印6</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 最后的答案就是：</span></span><br><span class=\"line\"><span class=\"comment\">// 1、4、7、5、2、3、6</span></span><br><span class=\"line\"><span class=\"comment\">// 不相信的话可以去浏览器console试试，打印结果。</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><a name=\"DotTL\"></a></p>\n<h3 id=\"发现一张动图，生动形象\"><a href=\"#发现一张动图，生动形象\" class=\"headerlink\" title=\"发现一张动图，生动形象\"></a>发现一张动图，生动形象</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">foo</span> = (<span class=\"params\"></span>) =&gt; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;First&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">bar</span> = (<span class=\"params\"></span>) =&gt; <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Second&quot;</span>), <span class=\"number\">500</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">baz</span> = (<span class=\"params\"></span>) =&gt; <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;Third&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">bar</span>();</span><br><span class=\"line\"><span class=\"title function_\">foo</span>();</span><br><span class=\"line\"><span class=\"title function_\">baz</span>();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p><a href=\"https://user-gold-cdn.xitu.io/2019/12/31/16f593b2275fec67?imageslim\">https://user-gold-cdn.xitu.io/2019/12/31/16f593b2275fec67?imageslim</a></p>"},{"title":"读完保证让你搞懂JS原型","date":"2019-08-04T16:00:00.000Z","description":"JavaScript-读完保证让你搞懂JS原型","_content":"\n<a name=\"QUcJR\"></a>\n### 一道面试题\n**问：**__proto__是什么？prototype又是什么？它两的区别？\n\n<!--more-->\n\n<a name=\"Lrogh\"></a>\n### 理解一些概念\n实例(构造函数实例)，构造函数，原型对象，原型链？\n\n实例对象是通过构造函数用**new**操作符创建的，构造函数又会有一个原型prototype对象，实例内部有个原型属性__proto__，通过它实例可以访问到构造函数原型prototype对象上方法和属性。\n\njs里所有的对象都有__proto__属性(对象，函数)，指向构造该对象的构造函数的原型。\n\n> JavaScript 常被描述为一种**基于原型的语言 (prototype-based language)**——每个对象拥有一个**原型对象**，对象以其原型为模板、从原型继承方法和属性。原型对象也可能拥有原型，并从中继承方法和属性，一层一层、以此类推。这种关系常被称为**原型链 (prototype chain)**，它解释了为何一个对象会拥有定义在其他对象中的属性和方法。\n> \n> 准确地说，这些属性和方法定义在Object的构造器函数(constructor functions)之上的`prototype`属性上，而非对象实例本身。\n> \n> 在传统的 OOP 中，首先定义“类”，此后创建对象实例时，类中定义的所有属性和方法都被复制到实例中。在 JavaScript 中并不如此复制——而是在对象实例和它的构造器之间建立一个链接（它是__proto__属性，是从构造函数的`prototype`属性派生的），之后通过上溯原型链，在构造器中找到这些属性和方法。\n> \n> -[MDN](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes)\n\n\n<a name=\"YC1Zr\"></a>\n### 看懂一张图\n![image.png](https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%8E%9F%E5%9E%8B%E9%93%BE.png)\n\n有了上面一些概念的解释，结合着这一张图，有些基础的童鞋都已经明白的差不多了。但其实还是比较抽象，我们继续用代码实践下。\n\n<a name=\"vuieD\"></a>\n### 解题\n\n```javascript\n// 问：__proto__是什么？prototype又是什么？它两的区别？\n\n// 定义一个构造函数\nfunction Car() {\n  this.type = 'suv';\n  this.brand = 'BMW';\n}\n\n// 通过构造函数原型添加方法\nCar.prototype.drive = function() {\n  console.log('开始开车了，滴滴滴');\n}\n\n// 创建一个实例对象\nlet myCar = new Car();\n\n// 让我们看下这里面的大千世界\nconsole.log('实例', myCar);\nconsole.log('实例原型属性', myCar.__proto__);\nconsole.log('构造函数原型', Car.prototype);\nconsole.log(myCar.__proto__ === Car.prototype); // true\n\n```\n\n![image.png](https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%8E%9F%E5%9E%8B%E5%AE%9E%E8%B7%B5%E7%BB%93%E6%9E%9C.png)\n\n<a name=\"e5lIZ\"></a>\n### 参考\n[原型](https://bonsaiden.github.io/JavaScript-Garden/zh/#object.prototype)<br />[对象原型 - MDN](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes)\n","source":"_posts/JavaScript-读完保证让你搞懂JS原型.md","raw":"---\ntitle: 读完保证让你搞懂JS原型\ndate: 2019-08-05\ncategories: [前端,javascript]\ntags: [javascript,前端]\ndescription: JavaScript-读完保证让你搞懂JS原型\n---\n\n<a name=\"QUcJR\"></a>\n### 一道面试题\n**问：**__proto__是什么？prototype又是什么？它两的区别？\n\n<!--more-->\n\n<a name=\"Lrogh\"></a>\n### 理解一些概念\n实例(构造函数实例)，构造函数，原型对象，原型链？\n\n实例对象是通过构造函数用**new**操作符创建的，构造函数又会有一个原型prototype对象，实例内部有个原型属性__proto__，通过它实例可以访问到构造函数原型prototype对象上方法和属性。\n\njs里所有的对象都有__proto__属性(对象，函数)，指向构造该对象的构造函数的原型。\n\n> JavaScript 常被描述为一种**基于原型的语言 (prototype-based language)**——每个对象拥有一个**原型对象**，对象以其原型为模板、从原型继承方法和属性。原型对象也可能拥有原型，并从中继承方法和属性，一层一层、以此类推。这种关系常被称为**原型链 (prototype chain)**，它解释了为何一个对象会拥有定义在其他对象中的属性和方法。\n> \n> 准确地说，这些属性和方法定义在Object的构造器函数(constructor functions)之上的`prototype`属性上，而非对象实例本身。\n> \n> 在传统的 OOP 中，首先定义“类”，此后创建对象实例时，类中定义的所有属性和方法都被复制到实例中。在 JavaScript 中并不如此复制——而是在对象实例和它的构造器之间建立一个链接（它是__proto__属性，是从构造函数的`prototype`属性派生的），之后通过上溯原型链，在构造器中找到这些属性和方法。\n> \n> -[MDN](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes)\n\n\n<a name=\"YC1Zr\"></a>\n### 看懂一张图\n![image.png](https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%8E%9F%E5%9E%8B%E9%93%BE.png)\n\n有了上面一些概念的解释，结合着这一张图，有些基础的童鞋都已经明白的差不多了。但其实还是比较抽象，我们继续用代码实践下。\n\n<a name=\"vuieD\"></a>\n### 解题\n\n```javascript\n// 问：__proto__是什么？prototype又是什么？它两的区别？\n\n// 定义一个构造函数\nfunction Car() {\n  this.type = 'suv';\n  this.brand = 'BMW';\n}\n\n// 通过构造函数原型添加方法\nCar.prototype.drive = function() {\n  console.log('开始开车了，滴滴滴');\n}\n\n// 创建一个实例对象\nlet myCar = new Car();\n\n// 让我们看下这里面的大千世界\nconsole.log('实例', myCar);\nconsole.log('实例原型属性', myCar.__proto__);\nconsole.log('构造函数原型', Car.prototype);\nconsole.log(myCar.__proto__ === Car.prototype); // true\n\n```\n\n![image.png](https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%8E%9F%E5%9E%8B%E5%AE%9E%E8%B7%B5%E7%BB%93%E6%9E%9C.png)\n\n<a name=\"e5lIZ\"></a>\n### 参考\n[原型](https://bonsaiden.github.io/JavaScript-Garden/zh/#object.prototype)<br />[对象原型 - MDN](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes)\n","slug":"JavaScript-读完保证让你搞懂JS原型","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wm000yr2uf48h20w4v","content":"<p><a name=\"QUcJR\"></a></p>\n<h3 id=\"一道面试题\"><a href=\"#一道面试题\" class=\"headerlink\" title=\"一道面试题\"></a>一道面试题</h3><p><strong>问：</strong>__proto__是什么？prototype又是什么？它两的区别？</p>\n<span id=\"more\"></span>\n\n<p><a name=\"Lrogh\"></a></p>\n<h3 id=\"理解一些概念\"><a href=\"#理解一些概念\" class=\"headerlink\" title=\"理解一些概念\"></a>理解一些概念</h3><p>实例(构造函数实例)，构造函数，原型对象，原型链？</p>\n<p>实例对象是通过构造函数用<strong>new</strong>操作符创建的，构造函数又会有一个原型prototype对象，实例内部有个原型属性__proto__，通过它实例可以访问到构造函数原型prototype对象上方法和属性。</p>\n<p>js里所有的对象都有__proto__属性(对象，函数)，指向构造该对象的构造函数的原型。</p>\n<blockquote>\n<p>JavaScript 常被描述为一种<strong>基于原型的语言 (prototype-based language)<strong>——每个对象拥有一个</strong>原型对象</strong>，对象以其原型为模板、从原型继承方法和属性。原型对象也可能拥有原型，并从中继承方法和属性，一层一层、以此类推。这种关系常被称为**原型链 (prototype chain)**，它解释了为何一个对象会拥有定义在其他对象中的属性和方法。</p>\n<p>准确地说，这些属性和方法定义在Object的构造器函数(constructor functions)之上的<code>prototype</code>属性上，而非对象实例本身。</p>\n<p>在传统的 OOP 中，首先定义“类”，此后创建对象实例时，类中定义的所有属性和方法都被复制到实例中。在 JavaScript 中并不如此复制——而是在对象实例和它的构造器之间建立一个链接（它是__proto__属性，是从构造函数的<code>prototype</code>属性派生的），之后通过上溯原型链，在构造器中找到这些属性和方法。</p>\n<p>-<a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\">MDN</a></p>\n</blockquote>\n<p><a name=\"YC1Zr\"></a></p>\n<h3 id=\"看懂一张图\"><a href=\"#看懂一张图\" class=\"headerlink\" title=\"看懂一张图\"></a>看懂一张图</h3><p><img src=\"https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%8E%9F%E5%9E%8B%E9%93%BE.png\" alt=\"image.png\"></p>\n<p>有了上面一些概念的解释，结合着这一张图，有些基础的童鞋都已经明白的差不多了。但其实还是比较抽象，我们继续用代码实践下。</p>\n<p><a name=\"vuieD\"></a></p>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 问：__proto__是什么？prototype又是什么？它两的区别？</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Car</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">type</span> = <span class=\"string\">&#x27;suv&#x27;</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">brand</span> = <span class=\"string\">&#x27;BMW&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过构造函数原型添加方法</span></span><br><span class=\"line\"><span class=\"title class_\">Car</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">drive</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;开始开车了，滴滴滴&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个实例对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> myCar = <span class=\"keyword\">new</span> <span class=\"title class_\">Car</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 让我们看下这里面的大千世界</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;实例&#x27;</span>, myCar);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;实例原型属性&#x27;</span>, myCar.<span class=\"property\">__proto__</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;构造函数原型&#x27;</span>, <span class=\"title class_\">Car</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myCar.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Car</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%8E%9F%E5%9E%8B%E5%AE%9E%E8%B7%B5%E7%BB%93%E6%9E%9C.png\" alt=\"image.png\"></p>\n<p><a name=\"e5lIZ\"></a></p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://bonsaiden.github.io/JavaScript-Garden/zh/#object.prototype\">原型</a><br /><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\">对象原型 - MDN</a></p>\n","site":{"data":{}},"length":1174,"excerpt":"<p><a name=\"QUcJR\"></a></p>\n<h3 id=\"一道面试题\"><a href=\"#一道面试题\" class=\"headerlink\" title=\"一道面试题\"></a>一道面试题</h3><p><strong>问：</strong>__proto__是什么？prototype又是什么？它两的区别？</p>","more":"<p><a name=\"Lrogh\"></a></p>\n<h3 id=\"理解一些概念\"><a href=\"#理解一些概念\" class=\"headerlink\" title=\"理解一些概念\"></a>理解一些概念</h3><p>实例(构造函数实例)，构造函数，原型对象，原型链？</p>\n<p>实例对象是通过构造函数用<strong>new</strong>操作符创建的，构造函数又会有一个原型prototype对象，实例内部有个原型属性__proto__，通过它实例可以访问到构造函数原型prototype对象上方法和属性。</p>\n<p>js里所有的对象都有__proto__属性(对象，函数)，指向构造该对象的构造函数的原型。</p>\n<blockquote>\n<p>JavaScript 常被描述为一种<strong>基于原型的语言 (prototype-based language)<strong>——每个对象拥有一个</strong>原型对象</strong>，对象以其原型为模板、从原型继承方法和属性。原型对象也可能拥有原型，并从中继承方法和属性，一层一层、以此类推。这种关系常被称为**原型链 (prototype chain)**，它解释了为何一个对象会拥有定义在其他对象中的属性和方法。</p>\n<p>准确地说，这些属性和方法定义在Object的构造器函数(constructor functions)之上的<code>prototype</code>属性上，而非对象实例本身。</p>\n<p>在传统的 OOP 中，首先定义“类”，此后创建对象实例时，类中定义的所有属性和方法都被复制到实例中。在 JavaScript 中并不如此复制——而是在对象实例和它的构造器之间建立一个链接（它是__proto__属性，是从构造函数的<code>prototype</code>属性派生的），之后通过上溯原型链，在构造器中找到这些属性和方法。</p>\n<p>-<a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\">MDN</a></p>\n</blockquote>\n<p><a name=\"YC1Zr\"></a></p>\n<h3 id=\"看懂一张图\"><a href=\"#看懂一张图\" class=\"headerlink\" title=\"看懂一张图\"></a>看懂一张图</h3><p><img src=\"https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%8E%9F%E5%9E%8B%E9%93%BE.png\" alt=\"image.png\"></p>\n<p>有了上面一些概念的解释，结合着这一张图，有些基础的童鞋都已经明白的差不多了。但其实还是比较抽象，我们继续用代码实践下。</p>\n<p><a name=\"vuieD\"></a></p>\n<h3 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 问：__proto__是什么？prototype又是什么？它两的区别？</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 定义一个构造函数</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Car</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">type</span> = <span class=\"string\">&#x27;suv&#x27;</span>;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">brand</span> = <span class=\"string\">&#x27;BMW&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 通过构造函数原型添加方法</span></span><br><span class=\"line\"><span class=\"title class_\">Car</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">drive</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;开始开车了，滴滴滴&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个实例对象</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> myCar = <span class=\"keyword\">new</span> <span class=\"title class_\">Car</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 让我们看下这里面的大千世界</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;实例&#x27;</span>, myCar);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;实例原型属性&#x27;</span>, myCar.<span class=\"property\">__proto__</span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;构造函数原型&#x27;</span>, <span class=\"title class_\">Car</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(myCar.<span class=\"property\">__proto__</span> === <span class=\"title class_\">Car</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%8E%9F%E5%9E%8B%E5%AE%9E%E8%B7%B5%E7%BB%93%E6%9E%9C.png\" alt=\"image.png\"></p>\n<p><a name=\"e5lIZ\"></a></p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://bonsaiden.github.io/JavaScript-Garden/zh/#object.prototype\">原型</a><br /><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes\">对象原型 - MDN</a></p>"},{"title":"Typescript-实践初体验（一）","date":"2021-01-02T16:00:00.000Z","description":"Typescript 学习记录（-）","_content":"\n<a name=\"a7OwN\"></a>\n### 基础类型\n对比js的数据类型，多了元组【tuple】、枚举【enum】、any、void、null、undefined、never、object。\n\n<!--more-->\n\n<a name=\"AThS7\"></a>\n#### tuple【元组】\n元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。 比如，你可以定义一对值分别为 string和number类型的元组。\n\n```javascript\n// Declare a tuple type\nlet x: [string, number];\n// Initialize it\nx = ['hello', 10]; // OK\n// Initialize it incorrectly\nx = [10, 'hello']; // Error\n\nconsole.log(x[0].substr(1)); // OK\nconsole.log(x[1].substr(1)); // Error, 'number' does not have 'substr'\n\nx[3] = 'world'; // OK, 字符串可以赋值给(string | number)类型\nconsole.log(x[5].toString()); // OK, 'string' 和 'number' 都有 toString\nx[6] = true; // Error, 布尔不是(string | number)类型\n```\n\n<a name=\"DPCt6\"></a>\n#### enum【枚举】\nenum类型是对JavaScript标准数据类型的一个补充。 像C#等其它语言一样，使用枚举类型可以为一组数值赋予友好的名字。\n\n```javascript\nenum Color {Red, Green, Blue}\nlet c: Color = Color.Green;\n\n// 指定值\nenum Color {Red = 1, Green, Blue}\nlet c: Color = Color.Green;\n\nenum Color {Red = 1, Green = 2, Blue = 4}\nlet c: Color = Color.Green;\n\n// 由value得到key\nenum Color {Red = 1, Green, Blue}\nlet colorName: string = Color[2];\n\nconsole.log(colorName);  // 显示'Green'因为上面代码里它的值是2\n```\n\n<a name=\"3p7h5\"></a>\n#### any【任意型】\n任意类型，当我们不确定变量类型时，比如用户输入或者第三方库的变量，这种情况下，我们不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查。\n\n```javascript\nlet notSure: any = 4;\nnotSure = \"maybe a string instead\";\nnotSure = false; // okay, definitely a boolean\n\n// 部分数据类型已知\nlet list: any[] = [1, true, \"free\"];\nlist[1] = 100;\n```\n\n<a name=\"yu2gV\"></a>\n#### void【无返回】\n无返回值，一般是没啥实际用处的，这个类型的变量只能被赋值undefined、null。\n\n```javascript\nfunction warnUser(): void {\n    console.log(\"This is my warning message\");\n}\n```\n\nnull、undefined：默认情况下null和undefined是所有类型的子类型。 就是说你可以把 null和undefined赋值给number类型的变量。然而，当你指定了--strictNullChecks标记，null和undefined只能赋值给void和它们各自。 这能避免 很多常见的问题。 也许在某处你想传入一个 string或null或undefined，你可以使用联合类型string | null | undefined。\n\n<a name=\"yYeHI\"></a>\n#### never【不存在】\n表示的是那些永不存在的值的类型。目前我不知道有啥用。。\n\n<a name=\"mmHRI\"></a>\n#### object【非原始】\n表示非原始类型，也就是除number，string，boolean，symbol，null或undefined之外的类型。\n\n```javascript\ndeclare function create(o: object | null): void;\n\ncreate({ prop: 0 }); // OK\ncreate(null); // OK\n\ncreate(42); // Error\ncreate(\"string\"); // Error\ncreate(false); // Error\ncreate(undefined); // Error\n```\n\n<a name=\"gOZyM\"></a>\n### 类型断言\n> 类型断言：类型断言好比其它语言里的类型转换，但是不进行特殊的数据检查和解构。 它没有运行时的影响，只是在编译阶段起作用。 TypeScript会假设你，程序员，已经进行了必须的检查。\n\n\n转述成白话文就是，我知道我在干嘛，不用你检测了，相当于白名单的感觉。（个人理解）。\n<a name=\"e5HCJ\"></a>\n#### 断言有两种形式\n1、尖括号，as语法。<br />2、建议采用as，适用于jsx语法。\n\n```javascript\n// 尖括号\nlet someValue: any = \"this is a string\";\nlet strLength: number = (<string>someValue).length;\n\n// as\nlet someValue: any = \"this is a string\";\nlet strLength: number = (someValue as string).length;\n```\n\n","source":"_posts/Typescript-实践初体验（一）.md","raw":"---\ntitle: Typescript-实践初体验（一）\ndate: 2021-01-03\ncategories: Typescript\ntags: [Typescript,javascript,前端]\ndescription: Typescript 学习记录（-）\n---\n\n<a name=\"a7OwN\"></a>\n### 基础类型\n对比js的数据类型，多了元组【tuple】、枚举【enum】、any、void、null、undefined、never、object。\n\n<!--more-->\n\n<a name=\"AThS7\"></a>\n#### tuple【元组】\n元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。 比如，你可以定义一对值分别为 string和number类型的元组。\n\n```javascript\n// Declare a tuple type\nlet x: [string, number];\n// Initialize it\nx = ['hello', 10]; // OK\n// Initialize it incorrectly\nx = [10, 'hello']; // Error\n\nconsole.log(x[0].substr(1)); // OK\nconsole.log(x[1].substr(1)); // Error, 'number' does not have 'substr'\n\nx[3] = 'world'; // OK, 字符串可以赋值给(string | number)类型\nconsole.log(x[5].toString()); // OK, 'string' 和 'number' 都有 toString\nx[6] = true; // Error, 布尔不是(string | number)类型\n```\n\n<a name=\"DPCt6\"></a>\n#### enum【枚举】\nenum类型是对JavaScript标准数据类型的一个补充。 像C#等其它语言一样，使用枚举类型可以为一组数值赋予友好的名字。\n\n```javascript\nenum Color {Red, Green, Blue}\nlet c: Color = Color.Green;\n\n// 指定值\nenum Color {Red = 1, Green, Blue}\nlet c: Color = Color.Green;\n\nenum Color {Red = 1, Green = 2, Blue = 4}\nlet c: Color = Color.Green;\n\n// 由value得到key\nenum Color {Red = 1, Green, Blue}\nlet colorName: string = Color[2];\n\nconsole.log(colorName);  // 显示'Green'因为上面代码里它的值是2\n```\n\n<a name=\"3p7h5\"></a>\n#### any【任意型】\n任意类型，当我们不确定变量类型时，比如用户输入或者第三方库的变量，这种情况下，我们不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查。\n\n```javascript\nlet notSure: any = 4;\nnotSure = \"maybe a string instead\";\nnotSure = false; // okay, definitely a boolean\n\n// 部分数据类型已知\nlet list: any[] = [1, true, \"free\"];\nlist[1] = 100;\n```\n\n<a name=\"yu2gV\"></a>\n#### void【无返回】\n无返回值，一般是没啥实际用处的，这个类型的变量只能被赋值undefined、null。\n\n```javascript\nfunction warnUser(): void {\n    console.log(\"This is my warning message\");\n}\n```\n\nnull、undefined：默认情况下null和undefined是所有类型的子类型。 就是说你可以把 null和undefined赋值给number类型的变量。然而，当你指定了--strictNullChecks标记，null和undefined只能赋值给void和它们各自。 这能避免 很多常见的问题。 也许在某处你想传入一个 string或null或undefined，你可以使用联合类型string | null | undefined。\n\n<a name=\"yYeHI\"></a>\n#### never【不存在】\n表示的是那些永不存在的值的类型。目前我不知道有啥用。。\n\n<a name=\"mmHRI\"></a>\n#### object【非原始】\n表示非原始类型，也就是除number，string，boolean，symbol，null或undefined之外的类型。\n\n```javascript\ndeclare function create(o: object | null): void;\n\ncreate({ prop: 0 }); // OK\ncreate(null); // OK\n\ncreate(42); // Error\ncreate(\"string\"); // Error\ncreate(false); // Error\ncreate(undefined); // Error\n```\n\n<a name=\"gOZyM\"></a>\n### 类型断言\n> 类型断言：类型断言好比其它语言里的类型转换，但是不进行特殊的数据检查和解构。 它没有运行时的影响，只是在编译阶段起作用。 TypeScript会假设你，程序员，已经进行了必须的检查。\n\n\n转述成白话文就是，我知道我在干嘛，不用你检测了，相当于白名单的感觉。（个人理解）。\n<a name=\"e5HCJ\"></a>\n#### 断言有两种形式\n1、尖括号，as语法。<br />2、建议采用as，适用于jsx语法。\n\n```javascript\n// 尖括号\nlet someValue: any = \"this is a string\";\nlet strLength: number = (<string>someValue).length;\n\n// as\nlet someValue: any = \"this is a string\";\nlet strLength: number = (someValue as string).length;\n```\n\n","slug":"Typescript-实践初体验（一）","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wn0010r2uf922bfgpt","content":"<p><a name=\"a7OwN\"></a></p>\n<h3 id=\"基础类型\"><a href=\"#基础类型\" class=\"headerlink\" title=\"基础类型\"></a>基础类型</h3><p>对比js的数据类型，多了元组【tuple】、枚举【enum】、any、void、null、undefined、never、object。</p>\n<span id=\"more\"></span>\n\n<p><a name=\"AThS7\"></a></p>\n<h4 id=\"tuple【元组】\"><a href=\"#tuple【元组】\" class=\"headerlink\" title=\"tuple【元组】\"></a>tuple【元组】</h4><p>元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。 比如，你可以定义一对值分别为 string和number类型的元组。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Declare a tuple type</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">x</span>: [string, number];</span><br><span class=\"line\"><span class=\"comment\">// Initialize it</span></span><br><span class=\"line\">x = [<span class=\"string\">&#x27;hello&#x27;</span>, <span class=\"number\">10</span>]; <span class=\"comment\">// OK</span></span><br><span class=\"line\"><span class=\"comment\">// Initialize it incorrectly</span></span><br><span class=\"line\">x = [<span class=\"number\">10</span>, <span class=\"string\">&#x27;hello&#x27;</span>]; <span class=\"comment\">// Error</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x[<span class=\"number\">0</span>].<span class=\"title function_\">substr</span>(<span class=\"number\">1</span>)); <span class=\"comment\">// OK</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x[<span class=\"number\">1</span>].<span class=\"title function_\">substr</span>(<span class=\"number\">1</span>)); <span class=\"comment\">// Error, &#x27;number&#x27; does not have &#x27;substr&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">x[<span class=\"number\">3</span>] = <span class=\"string\">&#x27;world&#x27;</span>; <span class=\"comment\">// OK, 字符串可以赋值给(string | number)类型</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x[<span class=\"number\">5</span>].<span class=\"title function_\">toString</span>()); <span class=\"comment\">// OK, &#x27;string&#x27; 和 &#x27;number&#x27; 都有 toString</span></span><br><span class=\"line\">x[<span class=\"number\">6</span>] = <span class=\"literal\">true</span>; <span class=\"comment\">// Error, 布尔不是(string | number)类型</span></span><br></pre></td></tr></table></figure>\n\n<p><a name=\"DPCt6\"></a></p>\n<h4 id=\"enum【枚举】\"><a href=\"#enum【枚举】\" class=\"headerlink\" title=\"enum【枚举】\"></a>enum【枚举】</h4><p>enum类型是对JavaScript标准数据类型的一个补充。 像C#等其它语言一样，使用枚举类型可以为一组数值赋予友好的名字。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum <span class=\"title class_\">Color</span> &#123;<span class=\"title class_\">Red</span>, <span class=\"title class_\">Green</span>, <span class=\"title class_\">Blue</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">c</span>: <span class=\"title class_\">Color</span> = <span class=\"title class_\">Color</span>.<span class=\"property\">Green</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 指定值</span></span><br><span class=\"line\">enum <span class=\"title class_\">Color</span> &#123;<span class=\"title class_\">Red</span> = <span class=\"number\">1</span>, <span class=\"title class_\">Green</span>, <span class=\"title class_\">Blue</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">c</span>: <span class=\"title class_\">Color</span> = <span class=\"title class_\">Color</span>.<span class=\"property\">Green</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">enum <span class=\"title class_\">Color</span> &#123;<span class=\"title class_\">Red</span> = <span class=\"number\">1</span>, <span class=\"title class_\">Green</span> = <span class=\"number\">2</span>, <span class=\"title class_\">Blue</span> = <span class=\"number\">4</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">c</span>: <span class=\"title class_\">Color</span> = <span class=\"title class_\">Color</span>.<span class=\"property\">Green</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 由value得到key</span></span><br><span class=\"line\">enum <span class=\"title class_\">Color</span> &#123;<span class=\"title class_\">Red</span> = <span class=\"number\">1</span>, <span class=\"title class_\">Green</span>, <span class=\"title class_\">Blue</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">colorName</span>: string = <span class=\"title class_\">Color</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(colorName);  <span class=\"comment\">// 显示&#x27;Green&#x27;因为上面代码里它的值是2</span></span><br></pre></td></tr></table></figure>\n\n<p><a name=\"3p7h5\"></a></p>\n<h4 id=\"any【任意型】\"><a href=\"#any【任意型】\" class=\"headerlink\" title=\"any【任意型】\"></a>any【任意型】</h4><p>任意类型，当我们不确定变量类型时，比如用户输入或者第三方库的变量，这种情况下，我们不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">notSure</span>: any = <span class=\"number\">4</span>;</span><br><span class=\"line\">notSure = <span class=\"string\">&quot;maybe a string instead&quot;</span>;</span><br><span class=\"line\">notSure = <span class=\"literal\">false</span>; <span class=\"comment\">// okay, definitely a boolean</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 部分数据类型已知</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">list</span>: any[] = [<span class=\"number\">1</span>, <span class=\"literal\">true</span>, <span class=\"string\">&quot;free&quot;</span>];</span><br><span class=\"line\">list[<span class=\"number\">1</span>] = <span class=\"number\">100</span>;</span><br></pre></td></tr></table></figure>\n\n<p><a name=\"yu2gV\"></a></p>\n<h4 id=\"void【无返回】\"><a href=\"#void【无返回】\" class=\"headerlink\" title=\"void【无返回】\"></a>void【无返回】</h4><p>无返回值，一般是没啥实际用处的，这个类型的变量只能被赋值undefined、null。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">warnUser</span>(<span class=\"params\"></span>): <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;This is my warning message&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>null、undefined：默认情况下null和undefined是所有类型的子类型。 就是说你可以把 null和undefined赋值给number类型的变量。然而，当你指定了–strictNullChecks标记，null和undefined只能赋值给void和它们各自。 这能避免 很多常见的问题。 也许在某处你想传入一个 string或null或undefined，你可以使用联合类型string | null | undefined。</p>\n<p><a name=\"yYeHI\"></a></p>\n<h4 id=\"never【不存在】\"><a href=\"#never【不存在】\" class=\"headerlink\" title=\"never【不存在】\"></a>never【不存在】</h4><p>表示的是那些永不存在的值的类型。目前我不知道有啥用。。</p>\n<p><a name=\"mmHRI\"></a></p>\n<h4 id=\"object【非原始】\"><a href=\"#object【非原始】\" class=\"headerlink\" title=\"object【非原始】\"></a>object【非原始】</h4><p>表示非原始类型，也就是除number，string，boolean，symbol，null或undefined之外的类型。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">declare <span class=\"keyword\">function</span> <span class=\"title function_\">create</span>(<span class=\"params\">o: object | <span class=\"literal\">null</span></span>): <span class=\"keyword\">void</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">create</span>(&#123; <span class=\"attr\">prop</span>: <span class=\"number\">0</span> &#125;); <span class=\"comment\">// OK</span></span><br><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"literal\">null</span>); <span class=\"comment\">// OK</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"number\">42</span>); <span class=\"comment\">// Error</span></span><br><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"string\">&quot;string&quot;</span>); <span class=\"comment\">// Error</span></span><br><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"literal\">false</span>); <span class=\"comment\">// Error</span></span><br><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"literal\">undefined</span>); <span class=\"comment\">// Error</span></span><br></pre></td></tr></table></figure>\n\n<p><a name=\"gOZyM\"></a></p>\n<h3 id=\"类型断言\"><a href=\"#类型断言\" class=\"headerlink\" title=\"类型断言\"></a>类型断言</h3><blockquote>\n<p>类型断言：类型断言好比其它语言里的类型转换，但是不进行特殊的数据检查和解构。 它没有运行时的影响，只是在编译阶段起作用。 TypeScript会假设你，程序员，已经进行了必须的检查。</p>\n</blockquote>\n<p>转述成白话文就是，我知道我在干嘛，不用你检测了，相当于白名单的感觉。（个人理解）。<br><a name=\"e5HCJ\"></a></p>\n<h4 id=\"断言有两种形式\"><a href=\"#断言有两种形式\" class=\"headerlink\" title=\"断言有两种形式\"></a>断言有两种形式</h4><p>1、尖括号，as语法。<br />2、建议采用as，适用于jsx语法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 尖括号</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">someValue</span>: any = <span class=\"string\">&quot;this is a string&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">strLength</span>: number = (&lt;string&gt;someValue).<span class=\"property\">length</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// as</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">someValue</span>: any = <span class=\"string\">&quot;this is a string&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">strLength</span>: number = (someValue <span class=\"keyword\">as</span> string).<span class=\"property\">length</span>;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"length":2282,"excerpt":"<p><a name=\"a7OwN\"></a></p>\n<h3 id=\"基础类型\"><a href=\"#基础类型\" class=\"headerlink\" title=\"基础类型\"></a>基础类型</h3><p>对比js的数据类型，多了元组【tuple】、枚举【enum】、any、void、null、undefined、never、object。</p>","more":"<p><a name=\"AThS7\"></a></p>\n<h4 id=\"tuple【元组】\"><a href=\"#tuple【元组】\" class=\"headerlink\" title=\"tuple【元组】\"></a>tuple【元组】</h4><p>元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。 比如，你可以定义一对值分别为 string和number类型的元组。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Declare a tuple type</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">x</span>: [string, number];</span><br><span class=\"line\"><span class=\"comment\">// Initialize it</span></span><br><span class=\"line\">x = [<span class=\"string\">&#x27;hello&#x27;</span>, <span class=\"number\">10</span>]; <span class=\"comment\">// OK</span></span><br><span class=\"line\"><span class=\"comment\">// Initialize it incorrectly</span></span><br><span class=\"line\">x = [<span class=\"number\">10</span>, <span class=\"string\">&#x27;hello&#x27;</span>]; <span class=\"comment\">// Error</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x[<span class=\"number\">0</span>].<span class=\"title function_\">substr</span>(<span class=\"number\">1</span>)); <span class=\"comment\">// OK</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x[<span class=\"number\">1</span>].<span class=\"title function_\">substr</span>(<span class=\"number\">1</span>)); <span class=\"comment\">// Error, &#x27;number&#x27; does not have &#x27;substr&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">x[<span class=\"number\">3</span>] = <span class=\"string\">&#x27;world&#x27;</span>; <span class=\"comment\">// OK, 字符串可以赋值给(string | number)类型</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(x[<span class=\"number\">5</span>].<span class=\"title function_\">toString</span>()); <span class=\"comment\">// OK, &#x27;string&#x27; 和 &#x27;number&#x27; 都有 toString</span></span><br><span class=\"line\">x[<span class=\"number\">6</span>] = <span class=\"literal\">true</span>; <span class=\"comment\">// Error, 布尔不是(string | number)类型</span></span><br></pre></td></tr></table></figure>\n\n<p><a name=\"DPCt6\"></a></p>\n<h4 id=\"enum【枚举】\"><a href=\"#enum【枚举】\" class=\"headerlink\" title=\"enum【枚举】\"></a>enum【枚举】</h4><p>enum类型是对JavaScript标准数据类型的一个补充。 像C#等其它语言一样，使用枚举类型可以为一组数值赋予友好的名字。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enum <span class=\"title class_\">Color</span> &#123;<span class=\"title class_\">Red</span>, <span class=\"title class_\">Green</span>, <span class=\"title class_\">Blue</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">c</span>: <span class=\"title class_\">Color</span> = <span class=\"title class_\">Color</span>.<span class=\"property\">Green</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 指定值</span></span><br><span class=\"line\">enum <span class=\"title class_\">Color</span> &#123;<span class=\"title class_\">Red</span> = <span class=\"number\">1</span>, <span class=\"title class_\">Green</span>, <span class=\"title class_\">Blue</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">c</span>: <span class=\"title class_\">Color</span> = <span class=\"title class_\">Color</span>.<span class=\"property\">Green</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">enum <span class=\"title class_\">Color</span> &#123;<span class=\"title class_\">Red</span> = <span class=\"number\">1</span>, <span class=\"title class_\">Green</span> = <span class=\"number\">2</span>, <span class=\"title class_\">Blue</span> = <span class=\"number\">4</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">c</span>: <span class=\"title class_\">Color</span> = <span class=\"title class_\">Color</span>.<span class=\"property\">Green</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 由value得到key</span></span><br><span class=\"line\">enum <span class=\"title class_\">Color</span> &#123;<span class=\"title class_\">Red</span> = <span class=\"number\">1</span>, <span class=\"title class_\">Green</span>, <span class=\"title class_\">Blue</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">colorName</span>: string = <span class=\"title class_\">Color</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(colorName);  <span class=\"comment\">// 显示&#x27;Green&#x27;因为上面代码里它的值是2</span></span><br></pre></td></tr></table></figure>\n\n<p><a name=\"3p7h5\"></a></p>\n<h4 id=\"any【任意型】\"><a href=\"#any【任意型】\" class=\"headerlink\" title=\"any【任意型】\"></a>any【任意型】</h4><p>任意类型，当我们不确定变量类型时，比如用户输入或者第三方库的变量，这种情况下，我们不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">notSure</span>: any = <span class=\"number\">4</span>;</span><br><span class=\"line\">notSure = <span class=\"string\">&quot;maybe a string instead&quot;</span>;</span><br><span class=\"line\">notSure = <span class=\"literal\">false</span>; <span class=\"comment\">// okay, definitely a boolean</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 部分数据类型已知</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">list</span>: any[] = [<span class=\"number\">1</span>, <span class=\"literal\">true</span>, <span class=\"string\">&quot;free&quot;</span>];</span><br><span class=\"line\">list[<span class=\"number\">1</span>] = <span class=\"number\">100</span>;</span><br></pre></td></tr></table></figure>\n\n<p><a name=\"yu2gV\"></a></p>\n<h4 id=\"void【无返回】\"><a href=\"#void【无返回】\" class=\"headerlink\" title=\"void【无返回】\"></a>void【无返回】</h4><p>无返回值，一般是没啥实际用处的，这个类型的变量只能被赋值undefined、null。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">warnUser</span>(<span class=\"params\"></span>): <span class=\"keyword\">void</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;This is my warning message&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>null、undefined：默认情况下null和undefined是所有类型的子类型。 就是说你可以把 null和undefined赋值给number类型的变量。然而，当你指定了–strictNullChecks标记，null和undefined只能赋值给void和它们各自。 这能避免 很多常见的问题。 也许在某处你想传入一个 string或null或undefined，你可以使用联合类型string | null | undefined。</p>\n<p><a name=\"yYeHI\"></a></p>\n<h4 id=\"never【不存在】\"><a href=\"#never【不存在】\" class=\"headerlink\" title=\"never【不存在】\"></a>never【不存在】</h4><p>表示的是那些永不存在的值的类型。目前我不知道有啥用。。</p>\n<p><a name=\"mmHRI\"></a></p>\n<h4 id=\"object【非原始】\"><a href=\"#object【非原始】\" class=\"headerlink\" title=\"object【非原始】\"></a>object【非原始】</h4><p>表示非原始类型，也就是除number，string，boolean，symbol，null或undefined之外的类型。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">declare <span class=\"keyword\">function</span> <span class=\"title function_\">create</span>(<span class=\"params\">o: object | <span class=\"literal\">null</span></span>): <span class=\"keyword\">void</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">create</span>(&#123; <span class=\"attr\">prop</span>: <span class=\"number\">0</span> &#125;); <span class=\"comment\">// OK</span></span><br><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"literal\">null</span>); <span class=\"comment\">// OK</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"number\">42</span>); <span class=\"comment\">// Error</span></span><br><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"string\">&quot;string&quot;</span>); <span class=\"comment\">// Error</span></span><br><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"literal\">false</span>); <span class=\"comment\">// Error</span></span><br><span class=\"line\"><span class=\"title function_\">create</span>(<span class=\"literal\">undefined</span>); <span class=\"comment\">// Error</span></span><br></pre></td></tr></table></figure>\n\n<p><a name=\"gOZyM\"></a></p>\n<h3 id=\"类型断言\"><a href=\"#类型断言\" class=\"headerlink\" title=\"类型断言\"></a>类型断言</h3><blockquote>\n<p>类型断言：类型断言好比其它语言里的类型转换，但是不进行特殊的数据检查和解构。 它没有运行时的影响，只是在编译阶段起作用。 TypeScript会假设你，程序员，已经进行了必须的检查。</p>\n</blockquote>\n<p>转述成白话文就是，我知道我在干嘛，不用你检测了，相当于白名单的感觉。（个人理解）。<br><a name=\"e5HCJ\"></a></p>\n<h4 id=\"断言有两种形式\"><a href=\"#断言有两种形式\" class=\"headerlink\" title=\"断言有两种形式\"></a>断言有两种形式</h4><p>1、尖括号，as语法。<br />2、建议采用as，适用于jsx语法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 尖括号</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">someValue</span>: any = <span class=\"string\">&quot;this is a string&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">strLength</span>: number = (&lt;string&gt;someValue).<span class=\"property\">length</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// as</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">someValue</span>: any = <span class=\"string\">&quot;this is a string&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">strLength</span>: number = (someValue <span class=\"keyword\">as</span> string).<span class=\"property\">length</span>;</span><br></pre></td></tr></table></figure>"},{"title":"Typescript-实践初体验（二）","date":"2021-11-02T16:00:00.000Z","description":"Typescript 学习记录（二）","_content":"\n<a name=\"a7OwN\"></a>\n\n### 联合类型\n\n联合类型（Union Types）表示取值可以为多种类型中的一种。\n\n<!--more-->\n\n联合类型使用 | 分隔每个类型。\n\n```javascript\nlet myNum: string | number;\nmyNum = 'seven';\nmyNum = 7;\n```\n\n```javascript\nlet myNum: string | number;\nmyNum = true;\n\n// index.ts(2,1): error TS2322: Type 'boolean' is not assignable to type 'string | number'.\n//   Type 'boolean' is not assignable to type 'number'.\n```\n\n### 对象的类型——接口\n\n在面向对象语言中，接口（Interfaces）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（implement）。\n\nTypeScript 中的接口是一个非常灵活的概念，除了可用于对类的一部分行为进行抽象以外，也常用于对「对象的形状（Shape）」进行描述。\n\n#### 可选属性\n\n```javascript\ninterface Person {\n  name: string;\n  age?: number; // 可选\n}\n```\n\n#### 任意属性\n使用 [propName: string] 定义了任意属性取 string 类型的值\n```javascript\ninterface Person {\n  name: string;\n  age?: number;\n  [propName: string]: any;\n}\n```\n一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集：\n```javascript\ninterface Person {\n    name: string;\n    age?: number;\n    [propName: string]: string; // 其余属性必须是string\n}\n\nlet tom: Person = {\n    name: 'Tom',\n    age: 25,\n    gender: 'male'\n};\n\n// index.ts(3,5): error TS2411: Property 'age' of type 'number' is not assignable to string index type 'string'.\n// index.ts(7,5): error TS2322: Type '{ [x: string]: string | number; name: string; age: number; gender: string; }' is not assignable to type 'Person'.\n//   Index signatures are incompatible.\n//     Type 'string | number' is not assignable to type 'string'.\n//       Type 'number' is not assignable to type 'string'.\n```\n\n更多接口信息可参考 [https://juejin.cn/post/6855449252785717256](https://juejin.cn/post/6855449252785717256)\n\n### 声明文件\n当使用第三方库时，我们需要引用它的声明文件，才能获得对应的代码补全、接口提示等功能。\n\n#### 声明类型\n* declare var 声明全局变量\n* declare function 声明全局方法\n* declare class 声明全局类\n* declare enum 声明全局枚举类型\n* declare namespace 声明（含有子属性的）全局对象\n* interface 和 type 声明全局类型\n* export 导出变量\n* export namespace*  导出（含有子属性的）对象\n* export default ES6 默认导出\n* export = commonjs 导出模块\n* export as namespace UMD 库声明全局变量\n* declare global 扩展全局变量\n* declare module 扩展模块\n* /// < reference /> 三斜线指令","source":"_posts/Typescript-实践初体验（二）.md","raw":"---\ntitle: Typescript-实践初体验（二）\ndate: 2021-11-03\ncategories: Typescript\ntags: [Typescript, javascript, 前端]\ndescription: Typescript 学习记录（二）\n---\n\n<a name=\"a7OwN\"></a>\n\n### 联合类型\n\n联合类型（Union Types）表示取值可以为多种类型中的一种。\n\n<!--more-->\n\n联合类型使用 | 分隔每个类型。\n\n```javascript\nlet myNum: string | number;\nmyNum = 'seven';\nmyNum = 7;\n```\n\n```javascript\nlet myNum: string | number;\nmyNum = true;\n\n// index.ts(2,1): error TS2322: Type 'boolean' is not assignable to type 'string | number'.\n//   Type 'boolean' is not assignable to type 'number'.\n```\n\n### 对象的类型——接口\n\n在面向对象语言中，接口（Interfaces）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（implement）。\n\nTypeScript 中的接口是一个非常灵活的概念，除了可用于对类的一部分行为进行抽象以外，也常用于对「对象的形状（Shape）」进行描述。\n\n#### 可选属性\n\n```javascript\ninterface Person {\n  name: string;\n  age?: number; // 可选\n}\n```\n\n#### 任意属性\n使用 [propName: string] 定义了任意属性取 string 类型的值\n```javascript\ninterface Person {\n  name: string;\n  age?: number;\n  [propName: string]: any;\n}\n```\n一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集：\n```javascript\ninterface Person {\n    name: string;\n    age?: number;\n    [propName: string]: string; // 其余属性必须是string\n}\n\nlet tom: Person = {\n    name: 'Tom',\n    age: 25,\n    gender: 'male'\n};\n\n// index.ts(3,5): error TS2411: Property 'age' of type 'number' is not assignable to string index type 'string'.\n// index.ts(7,5): error TS2322: Type '{ [x: string]: string | number; name: string; age: number; gender: string; }' is not assignable to type 'Person'.\n//   Index signatures are incompatible.\n//     Type 'string | number' is not assignable to type 'string'.\n//       Type 'number' is not assignable to type 'string'.\n```\n\n更多接口信息可参考 [https://juejin.cn/post/6855449252785717256](https://juejin.cn/post/6855449252785717256)\n\n### 声明文件\n当使用第三方库时，我们需要引用它的声明文件，才能获得对应的代码补全、接口提示等功能。\n\n#### 声明类型\n* declare var 声明全局变量\n* declare function 声明全局方法\n* declare class 声明全局类\n* declare enum 声明全局枚举类型\n* declare namespace 声明（含有子属性的）全局对象\n* interface 和 type 声明全局类型\n* export 导出变量\n* export namespace*  导出（含有子属性的）对象\n* export default ES6 默认导出\n* export = commonjs 导出模块\n* export as namespace UMD 库声明全局变量\n* declare global 扩展全局变量\n* declare module 扩展模块\n* /// < reference /> 三斜线指令","slug":"Typescript-实践初体验（二）","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wn0013r2uf0s2d7a22","content":"<p><a name=\"a7OwN\"></a></p>\n<h3 id=\"联合类型\"><a href=\"#联合类型\" class=\"headerlink\" title=\"联合类型\"></a>联合类型</h3><p>联合类型（Union Types）表示取值可以为多种类型中的一种。</p>\n<span id=\"more\"></span>\n\n<p>联合类型使用 | 分隔每个类型。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">myNum</span>: string | number;</span><br><span class=\"line\">myNum = <span class=\"string\">&#x27;seven&#x27;</span>;</span><br><span class=\"line\">myNum = <span class=\"number\">7</span>;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">myNum</span>: string | number;</span><br><span class=\"line\">myNum = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// index.ts(2,1): error TS2322: Type &#x27;boolean&#x27; is not assignable to type &#x27;string | number&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">//   Type &#x27;boolean&#x27; is not assignable to type &#x27;number&#x27;.</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"对象的类型——接口\"><a href=\"#对象的类型——接口\" class=\"headerlink\" title=\"对象的类型——接口\"></a>对象的类型——接口</h3><p>在面向对象语言中，接口（Interfaces）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（implement）。</p>\n<p>TypeScript 中的接口是一个非常灵活的概念，除了可用于对类的一部分行为进行抽象以外，也常用于对「对象的形状（Shape）」进行描述。</p>\n<h4 id=\"可选属性\"><a href=\"#可选属性\" class=\"headerlink\" title=\"可选属性\"></a>可选属性</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: string;</span><br><span class=\"line\">  age?: number; <span class=\"comment\">// 可选</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"任意属性\"><a href=\"#任意属性\" class=\"headerlink\" title=\"任意属性\"></a>任意属性</h4><p>使用 [propName: string] 定义了任意属性取 string 类型的值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: string;</span><br><span class=\"line\">  age?: number;</span><br><span class=\"line\">  [<span class=\"attr\">propName</span>: string]: any;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: string;</span><br><span class=\"line\">    age?: number;</span><br><span class=\"line\">    [<span class=\"attr\">propName</span>: string]: string; <span class=\"comment\">// 其余属性必须是string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">tom</span>: <span class=\"title class_\">Person</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Tom&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">25</span>,</span><br><span class=\"line\">    <span class=\"attr\">gender</span>: <span class=\"string\">&#x27;male&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// index.ts(3,5): error TS2411: Property &#x27;age&#x27; of type &#x27;number&#x27; is not assignable to string index type &#x27;string&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">// index.ts(7,5): error TS2322: Type &#x27;&#123; [x: string]: string | number; name: string; age: number; gender: string; &#125;&#x27; is not assignable to type &#x27;Person&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">//   Index signatures are incompatible.</span></span><br><span class=\"line\"><span class=\"comment\">//     Type &#x27;string | number&#x27; is not assignable to type &#x27;string&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">//       Type &#x27;number&#x27; is not assignable to type &#x27;string&#x27;.</span></span><br></pre></td></tr></table></figure>\n\n<p>更多接口信息可参考 <a href=\"https://juejin.cn/post/6855449252785717256\">https://juejin.cn/post/6855449252785717256</a></p>\n<h3 id=\"声明文件\"><a href=\"#声明文件\" class=\"headerlink\" title=\"声明文件\"></a>声明文件</h3><p>当使用第三方库时，我们需要引用它的声明文件，才能获得对应的代码补全、接口提示等功能。</p>\n<h4 id=\"声明类型\"><a href=\"#声明类型\" class=\"headerlink\" title=\"声明类型\"></a>声明类型</h4><ul>\n<li>declare var 声明全局变量</li>\n<li>declare function 声明全局方法</li>\n<li>declare class 声明全局类</li>\n<li>declare enum 声明全局枚举类型</li>\n<li>declare namespace 声明（含有子属性的）全局对象</li>\n<li>interface 和 type 声明全局类型</li>\n<li>export 导出变量</li>\n<li>export namespace*  导出（含有子属性的）对象</li>\n<li>export default ES6 默认导出</li>\n<li>export &#x3D; commonjs 导出模块</li>\n<li>export as namespace UMD 库声明全局变量</li>\n<li>declare global 扩展全局变量</li>\n<li>declare module 扩展模块</li>\n<li>&#x2F;&#x2F;&#x2F; &lt; reference &#x2F;&gt; 三斜线指令</li>\n</ul>\n","site":{"data":{}},"length":1744,"excerpt":"<p><a name=\"a7OwN\"></a></p>\n<h3 id=\"联合类型\"><a href=\"#联合类型\" class=\"headerlink\" title=\"联合类型\"></a>联合类型</h3><p>联合类型（Union Types）表示取值可以为多种类型中的一种。</p>","more":"<p>联合类型使用 | 分隔每个类型。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">myNum</span>: string | number;</span><br><span class=\"line\">myNum = <span class=\"string\">&#x27;seven&#x27;</span>;</span><br><span class=\"line\">myNum = <span class=\"number\">7</span>;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">myNum</span>: string | number;</span><br><span class=\"line\">myNum = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// index.ts(2,1): error TS2322: Type &#x27;boolean&#x27; is not assignable to type &#x27;string | number&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">//   Type &#x27;boolean&#x27; is not assignable to type &#x27;number&#x27;.</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"对象的类型——接口\"><a href=\"#对象的类型——接口\" class=\"headerlink\" title=\"对象的类型——接口\"></a>对象的类型——接口</h3><p>在面向对象语言中，接口（Interfaces）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（implement）。</p>\n<p>TypeScript 中的接口是一个非常灵活的概念，除了可用于对类的一部分行为进行抽象以外，也常用于对「对象的形状（Shape）」进行描述。</p>\n<h4 id=\"可选属性\"><a href=\"#可选属性\" class=\"headerlink\" title=\"可选属性\"></a>可选属性</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: string;</span><br><span class=\"line\">  age?: number; <span class=\"comment\">// 可选</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"任意属性\"><a href=\"#任意属性\" class=\"headerlink\" title=\"任意属性\"></a>任意属性</h4><p>使用 [propName: string] 定义了任意属性取 string 类型的值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: string;</span><br><span class=\"line\">  age?: number;</span><br><span class=\"line\">  [<span class=\"attr\">propName</span>: string]: any;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: string;</span><br><span class=\"line\">    age?: number;</span><br><span class=\"line\">    [<span class=\"attr\">propName</span>: string]: string; <span class=\"comment\">// 其余属性必须是string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">tom</span>: <span class=\"title class_\">Person</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Tom&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">25</span>,</span><br><span class=\"line\">    <span class=\"attr\">gender</span>: <span class=\"string\">&#x27;male&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// index.ts(3,5): error TS2411: Property &#x27;age&#x27; of type &#x27;number&#x27; is not assignable to string index type &#x27;string&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">// index.ts(7,5): error TS2322: Type &#x27;&#123; [x: string]: string | number; name: string; age: number; gender: string; &#125;&#x27; is not assignable to type &#x27;Person&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">//   Index signatures are incompatible.</span></span><br><span class=\"line\"><span class=\"comment\">//     Type &#x27;string | number&#x27; is not assignable to type &#x27;string&#x27;.</span></span><br><span class=\"line\"><span class=\"comment\">//       Type &#x27;number&#x27; is not assignable to type &#x27;string&#x27;.</span></span><br></pre></td></tr></table></figure>\n\n<p>更多接口信息可参考 <a href=\"https://juejin.cn/post/6855449252785717256\">https://juejin.cn/post/6855449252785717256</a></p>\n<h3 id=\"声明文件\"><a href=\"#声明文件\" class=\"headerlink\" title=\"声明文件\"></a>声明文件</h3><p>当使用第三方库时，我们需要引用它的声明文件，才能获得对应的代码补全、接口提示等功能。</p>\n<h4 id=\"声明类型\"><a href=\"#声明类型\" class=\"headerlink\" title=\"声明类型\"></a>声明类型</h4><ul>\n<li>declare var 声明全局变量</li>\n<li>declare function 声明全局方法</li>\n<li>declare class 声明全局类</li>\n<li>declare enum 声明全局枚举类型</li>\n<li>declare namespace 声明（含有子属性的）全局对象</li>\n<li>interface 和 type 声明全局类型</li>\n<li>export 导出变量</li>\n<li>export namespace*  导出（含有子属性的）对象</li>\n<li>export default ES6 默认导出</li>\n<li>export &#x3D; commonjs 导出模块</li>\n<li>export as namespace UMD 库声明全局变量</li>\n<li>declare global 扩展全局变量</li>\n<li>declare module 扩展模块</li>\n<li>&#x2F;&#x2F;&#x2F; &lt; reference &#x2F;&gt; 三斜线指令</li>\n</ul>"},{"title":"Typescript-实践初体验（三）","date":"2021-11-04T16:00:00.000Z","description":"Typescript 学习记录（三）","_content":"\n<a name=\"a7OwN\"></a>\n\n### 类型别名\n\n类型别名用来给一个类型起个新名字\n\n<!--more-->\n```javascript\ntype Name = string;\ntype NameResolver = () => string;\ntype NameOrResolver = Name | NameResolver;\nfunction getName(n: NameOrResolver): Name {\n    if (typeof n === 'string') {\n        return n;\n    } else {\n        return n();\n    }\n}\n```\n\n### 字符串字面量类型\n字符串字面量类型用来约束取值只能是某几个字符串中的一个\n```javascript\ntype EventNames = 'click' | 'scroll' | 'mousemove';\nfunction handleEvent(ele: Element, event: EventNames) {\n    // do something\n}\n\nhandleEvent(document.getElementById('hello'), 'scroll');  // 没问题\nhandleEvent(document.getElementById('world'), 'dblclick'); // 报错，event 不能为 'dblclick'\n\n// index.ts(7,47): error TS2345: Argument of type '\"dblclick\"' is not assignable to parameter of type 'EventNames'.\n```\n\n### 泛型\n泛型（Generics）是指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性。\n```javascript\nfunction createArray<T>(length: number, value: T): Array<T> {\n    let result: T[] = [];\n    for (let i = 0; i < length; i++) {\n        result[i] = value;\n    }\n    return result;\n}\n\ncreateArray(3, 'x'); // ['x', 'x', 'x']\n```\n上例中，我们在函数名后添加了 <T>，其中 T 用来指代任意输入的类型，在后面的输入 value: T 和输出 Array<T> 中即可使用了。\n\n接着在调用的时候，可以指定它具体的类型为 string。当然，也可以不手动指定，而让类型推论自动推算出来。","source":"_posts/Typescript-实践初体验（三）.md","raw":"---\ntitle: Typescript-实践初体验（三）\ndate: 2021-11-05\ncategories: Typescript\ntags: [Typescript, javascript, 前端]\ndescription: Typescript 学习记录（三）\n---\n\n<a name=\"a7OwN\"></a>\n\n### 类型别名\n\n类型别名用来给一个类型起个新名字\n\n<!--more-->\n```javascript\ntype Name = string;\ntype NameResolver = () => string;\ntype NameOrResolver = Name | NameResolver;\nfunction getName(n: NameOrResolver): Name {\n    if (typeof n === 'string') {\n        return n;\n    } else {\n        return n();\n    }\n}\n```\n\n### 字符串字面量类型\n字符串字面量类型用来约束取值只能是某几个字符串中的一个\n```javascript\ntype EventNames = 'click' | 'scroll' | 'mousemove';\nfunction handleEvent(ele: Element, event: EventNames) {\n    // do something\n}\n\nhandleEvent(document.getElementById('hello'), 'scroll');  // 没问题\nhandleEvent(document.getElementById('world'), 'dblclick'); // 报错，event 不能为 'dblclick'\n\n// index.ts(7,47): error TS2345: Argument of type '\"dblclick\"' is not assignable to parameter of type 'EventNames'.\n```\n\n### 泛型\n泛型（Generics）是指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性。\n```javascript\nfunction createArray<T>(length: number, value: T): Array<T> {\n    let result: T[] = [];\n    for (let i = 0; i < length; i++) {\n        result[i] = value;\n    }\n    return result;\n}\n\ncreateArray(3, 'x'); // ['x', 'x', 'x']\n```\n上例中，我们在函数名后添加了 <T>，其中 T 用来指代任意输入的类型，在后面的输入 value: T 和输出 Array<T> 中即可使用了。\n\n接着在调用的时候，可以指定它具体的类型为 string。当然，也可以不手动指定，而让类型推论自动推算出来。","slug":"Typescript-实践初体验（三）","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wn0015r2ufc9hbgrwz","content":"<p><a name=\"a7OwN\"></a></p>\n<h3 id=\"类型别名\"><a href=\"#类型别名\" class=\"headerlink\" title=\"类型别名\"></a>类型别名</h3><p>类型别名用来给一个类型起个新名字</p>\n<span id=\"more\"></span>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type <span class=\"title class_\">Name</span> = string;</span><br><span class=\"line\">type <span class=\"title class_\">NameResolver</span> = <span class=\"function\">() =&gt;</span> string;</span><br><span class=\"line\">type <span class=\"title class_\">NameOrResolver</span> = <span class=\"title class_\">Name</span> | <span class=\"title class_\">NameResolver</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getName</span>(<span class=\"params\">n: NameOrResolver</span>): <span class=\"title class_\">Name</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> n === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">n</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串字面量类型\"><a href=\"#字符串字面量类型\" class=\"headerlink\" title=\"字符串字面量类型\"></a>字符串字面量类型</h3><p>字符串字面量类型用来约束取值只能是某几个字符串中的一个</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type <span class=\"title class_\">EventNames</span> = <span class=\"string\">&#x27;click&#x27;</span> | <span class=\"string\">&#x27;scroll&#x27;</span> | <span class=\"string\">&#x27;mousemove&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">handleEvent</span>(<span class=\"params\">ele: Element, event: EventNames</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">handleEvent</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;hello&#x27;</span>), <span class=\"string\">&#x27;scroll&#x27;</span>);  <span class=\"comment\">// 没问题</span></span><br><span class=\"line\"><span class=\"title function_\">handleEvent</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;world&#x27;</span>), <span class=\"string\">&#x27;dblclick&#x27;</span>); <span class=\"comment\">// 报错，event 不能为 &#x27;dblclick&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// index.ts(7,47): error TS2345: Argument of type &#x27;&quot;dblclick&quot;&#x27; is not assignable to parameter of type &#x27;EventNames&#x27;.</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"泛型\"><a href=\"#泛型\" class=\"headerlink\" title=\"泛型\"></a>泛型</h3><p>泛型（Generics）是指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> createArray&lt;T&gt;(<span class=\"attr\">length</span>: number, <span class=\"attr\">value</span>: T): <span class=\"title class_\">Array</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"attr\">result</span>: T[] = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        result[i] = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">createArray</span>(<span class=\"number\">3</span>, <span class=\"string\">&#x27;x&#x27;</span>); <span class=\"comment\">// [&#x27;x&#x27;, &#x27;x&#x27;, &#x27;x&#x27;]</span></span><br></pre></td></tr></table></figure>\n<p>上例中，我们在函数名后添加了 <T>，其中 T 用来指代任意输入的类型，在后面的输入 value: T 和输出 Array<T> 中即可使用了。</p>\n<p>接着在调用的时候，可以指定它具体的类型为 string。当然，也可以不手动指定，而让类型推论自动推算出来。</p>\n","site":{"data":{}},"length":1170,"excerpt":"<p><a name=\"a7OwN\"></a></p>\n<h3 id=\"类型别名\"><a href=\"#类型别名\" class=\"headerlink\" title=\"类型别名\"></a>类型别名</h3><p>类型别名用来给一个类型起个新名字</p>","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type <span class=\"title class_\">Name</span> = string;</span><br><span class=\"line\">type <span class=\"title class_\">NameResolver</span> = <span class=\"function\">() =&gt;</span> string;</span><br><span class=\"line\">type <span class=\"title class_\">NameOrResolver</span> = <span class=\"title class_\">Name</span> | <span class=\"title class_\">NameResolver</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getName</span>(<span class=\"params\">n: NameOrResolver</span>): <span class=\"title class_\">Name</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> n === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">n</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"字符串字面量类型\"><a href=\"#字符串字面量类型\" class=\"headerlink\" title=\"字符串字面量类型\"></a>字符串字面量类型</h3><p>字符串字面量类型用来约束取值只能是某几个字符串中的一个</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type <span class=\"title class_\">EventNames</span> = <span class=\"string\">&#x27;click&#x27;</span> | <span class=\"string\">&#x27;scroll&#x27;</span> | <span class=\"string\">&#x27;mousemove&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">handleEvent</span>(<span class=\"params\">ele: Element, event: EventNames</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">handleEvent</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;hello&#x27;</span>), <span class=\"string\">&#x27;scroll&#x27;</span>);  <span class=\"comment\">// 没问题</span></span><br><span class=\"line\"><span class=\"title function_\">handleEvent</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;world&#x27;</span>), <span class=\"string\">&#x27;dblclick&#x27;</span>); <span class=\"comment\">// 报错，event 不能为 &#x27;dblclick&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// index.ts(7,47): error TS2345: Argument of type &#x27;&quot;dblclick&quot;&#x27; is not assignable to parameter of type &#x27;EventNames&#x27;.</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"泛型\"><a href=\"#泛型\" class=\"headerlink\" title=\"泛型\"></a>泛型</h3><p>泛型（Generics）是指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定类型的一种特性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> createArray&lt;T&gt;(<span class=\"attr\">length</span>: number, <span class=\"attr\">value</span>: T): <span class=\"title class_\">Array</span>&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> <span class=\"attr\">result</span>: T[] = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">        result[i] = value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">createArray</span>(<span class=\"number\">3</span>, <span class=\"string\">&#x27;x&#x27;</span>); <span class=\"comment\">// [&#x27;x&#x27;, &#x27;x&#x27;, &#x27;x&#x27;]</span></span><br></pre></td></tr></table></figure>\n<p>上例中，我们在函数名后添加了 <T>，其中 T 用来指代任意输入的类型，在后面的输入 value: T 和输出 Array<T> 中即可使用了。</p>\n<p>接着在调用的时候，可以指定它具体的类型为 string。当然，也可以不手动指定，而让类型推论自动推算出来。</p>"},{"title":"Vue源码解析-Vue定义","date":"2018-11-11T16:00:00.000Z","description":"深入了解Vue框架，源码设计","_content":"\n## Vue框架中Vue的定义\n平常开发spa时，一般都能看到new Vue()这样的代码，然后就会思考，Vue这个框架到底是如何去定义Vue的？Vue到底是个什么东西？然后就去翻源码了。。。\n<!-- more -->\n其实在<code>src/core/index.js</code>中你就可以看到Vue基本的实现了。\n```javascript\nimport Vue from './instance/index'\nimport { initGlobalAPI } from './global-api/index'\nimport { isServerRendering } from 'core/util/env'\nimport { FunctionalRenderContext } from 'core/vdom/create-functional-component'\n\ninitGlobalAPI(Vue)\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n})\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n})\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n})\n\nVue.version = '__VERSION__'\n\nexport default Vue\n```\n这里第一二行就是定义Vue关键代码了，然后我们继续找到对应的js文件。  \n首先是./instance/index.js  \n```javascript\nimport { initMixin } from './init'\nimport { stateMixin } from './state'\nimport { renderMixin } from './render'\nimport { eventsMixin } from './events'\nimport { lifecycleMixin } from './lifecycle'\nimport { warn } from '../util/index'\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword')\n  }\n  this._init(options)\n}\n\ninitMixin(Vue)\nstateMixin(Vue)\neventsMixin(Vue)\nlifecycleMixin(Vue)\nrenderMixin(Vue)\n\nexport default Vue\n```\n这不就是一个构造函数嘛？本质上就是一个Function实现的类，然后对这个类的原型上增加方法或属性，这个地方看起来还是能看懂的。  \n看完index之后在看看那个initGlobalAPI做了什么，是在./global-api/index这里。 \n```javascript\nimport config from '../config'\nimport { initUse } from './use'\nimport { initMixin } from './mixin'\nimport { initExtend } from './extend'\nimport { initAssetRegisters } from './assets'\nimport { set, del } from '../observer/index'\nimport { ASSET_TYPES } from 'shared/constants'\nimport builtInComponents from '../components/index'\nimport { observe } from 'core/observer/index'\n\nimport {\n  warn,\n  extend,\n  nextTick,\n  mergeOptions,\n  defineReactive\n} from '../util/index'\n\nexport function initGlobalAPI (Vue: GlobalAPI) {\n  // config\n  const configDef = {}\n  configDef.get = () => config\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = () => {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      )\n    }\n  }\n  Object.defineProperty(Vue, 'config', configDef)\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn,\n    extend,\n    mergeOptions,\n    defineReactive\n  }\n\n  Vue.set = set\n  Vue.delete = del\n  Vue.nextTick = nextTick\n\n  // 2.6 explicit observable API\n  Vue.observable = <T>(obj: T): T => {\n    observe(obj)\n    return obj\n  }\n\n  Vue.options = Object.create(null)\n  ASSET_TYPES.forEach(type => {\n    Vue.options[type + 's'] = Object.create(null)\n  })\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue\n\n  extend(Vue.options.components, builtInComponents)\n\n  initUse(Vue)\n  initMixin(Vue)\n  initExtend(Vue)\n  initAssetRegisters(Vue)\n}\n```\n这里就是给Vue增加一些全局方法了，文档上的API应该都能在这里面找到。  \n看到这大概能知道Vue本质上就是Function实现的Class，然后在原型上扩展一些方法属性，然后基本上Vue就是这么定义的，当然里面还有很多很多具体的实现，在instance和global-api目录下还有很多模块，这个就留到后面慢慢琢磨吧。。\n\n\n","source":"_posts/Vue源码解析-Vue定义.md","raw":"---\ntitle: Vue源码解析-Vue定义\ndate: 2018-11-12\ncategories: 前端\ntags: [JavaScript,Vue]\ndescription: 深入了解Vue框架，源码设计\n---\n\n## Vue框架中Vue的定义\n平常开发spa时，一般都能看到new Vue()这样的代码，然后就会思考，Vue这个框架到底是如何去定义Vue的？Vue到底是个什么东西？然后就去翻源码了。。。\n<!-- more -->\n其实在<code>src/core/index.js</code>中你就可以看到Vue基本的实现了。\n```javascript\nimport Vue from './instance/index'\nimport { initGlobalAPI } from './global-api/index'\nimport { isServerRendering } from 'core/util/env'\nimport { FunctionalRenderContext } from 'core/vdom/create-functional-component'\n\ninitGlobalAPI(Vue)\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n})\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n})\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n})\n\nVue.version = '__VERSION__'\n\nexport default Vue\n```\n这里第一二行就是定义Vue关键代码了，然后我们继续找到对应的js文件。  \n首先是./instance/index.js  \n```javascript\nimport { initMixin } from './init'\nimport { stateMixin } from './state'\nimport { renderMixin } from './render'\nimport { eventsMixin } from './events'\nimport { lifecycleMixin } from './lifecycle'\nimport { warn } from '../util/index'\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword')\n  }\n  this._init(options)\n}\n\ninitMixin(Vue)\nstateMixin(Vue)\neventsMixin(Vue)\nlifecycleMixin(Vue)\nrenderMixin(Vue)\n\nexport default Vue\n```\n这不就是一个构造函数嘛？本质上就是一个Function实现的类，然后对这个类的原型上增加方法或属性，这个地方看起来还是能看懂的。  \n看完index之后在看看那个initGlobalAPI做了什么，是在./global-api/index这里。 \n```javascript\nimport config from '../config'\nimport { initUse } from './use'\nimport { initMixin } from './mixin'\nimport { initExtend } from './extend'\nimport { initAssetRegisters } from './assets'\nimport { set, del } from '../observer/index'\nimport { ASSET_TYPES } from 'shared/constants'\nimport builtInComponents from '../components/index'\nimport { observe } from 'core/observer/index'\n\nimport {\n  warn,\n  extend,\n  nextTick,\n  mergeOptions,\n  defineReactive\n} from '../util/index'\n\nexport function initGlobalAPI (Vue: GlobalAPI) {\n  // config\n  const configDef = {}\n  configDef.get = () => config\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = () => {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      )\n    }\n  }\n  Object.defineProperty(Vue, 'config', configDef)\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn,\n    extend,\n    mergeOptions,\n    defineReactive\n  }\n\n  Vue.set = set\n  Vue.delete = del\n  Vue.nextTick = nextTick\n\n  // 2.6 explicit observable API\n  Vue.observable = <T>(obj: T): T => {\n    observe(obj)\n    return obj\n  }\n\n  Vue.options = Object.create(null)\n  ASSET_TYPES.forEach(type => {\n    Vue.options[type + 's'] = Object.create(null)\n  })\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue\n\n  extend(Vue.options.components, builtInComponents)\n\n  initUse(Vue)\n  initMixin(Vue)\n  initExtend(Vue)\n  initAssetRegisters(Vue)\n}\n```\n这里就是给Vue增加一些全局方法了，文档上的API应该都能在这里面找到。  \n看到这大概能知道Vue本质上就是Function实现的Class，然后在原型上扩展一些方法属性，然后基本上Vue就是这么定义的，当然里面还有很多很多具体的实现，在instance和global-api目录下还有很多模块，这个就留到后面慢慢琢磨吧。。\n\n\n","slug":"Vue源码解析-Vue定义","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wo0019r2ufeihlh405","content":"<h2 id=\"Vue框架中Vue的定义\"><a href=\"#Vue框架中Vue的定义\" class=\"headerlink\" title=\"Vue框架中Vue的定义\"></a>Vue框架中Vue的定义</h2><p>平常开发spa时，一般都能看到new Vue()这样的代码，然后就会思考，Vue这个框架到底是如何去定义Vue的？Vue到底是个什么东西？然后就去翻源码了。。。</p>\n<span id=\"more\"></span>\n<p>其实在<code>src/core/index.js</code>中你就可以看到Vue基本的实现了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./instance/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initGlobalAPI &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./global-api/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; isServerRendering &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;core/util/env&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">FunctionalRenderContext</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;core/vdom/create-functional-component&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">initGlobalAPI</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(<span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>, <span class=\"string\">&#x27;$isServer&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">get</span>: isServerRendering</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(<span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>, <span class=\"string\">&#x27;$ssrContext&#x27;</span>, &#123;</span><br><span class=\"line\">  get () &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* istanbul ignore next */</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$vnode</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">$vnode</span>.<span class=\"property\">ssrContext</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// expose FunctionalRenderContext for ssr runtime helper installation</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(<span class=\"title class_\">Vue</span>, <span class=\"string\">&#x27;FunctionalRenderContext&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">value</span>: <span class=\"title class_\">FunctionalRenderContext</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">version</span> = <span class=\"string\">&#x27;__VERSION__&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Vue</span></span><br></pre></td></tr></table></figure>\n<p>这里第一二行就是定义Vue关键代码了，然后我们继续找到对应的js文件。<br>首先是.&#x2F;instance&#x2F;index.js  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; initMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./init&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; stateMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./state&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; renderMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./render&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; eventsMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./events&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; lifecycleMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./lifecycle&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; warn &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../util/index&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Vue</span> (options) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp;</span><br><span class=\"line\">    !(<span class=\"variable language_\">this</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;Vue is a constructor and should be called with the `new` keyword&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">_init</span>(options)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">initMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">stateMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">eventsMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">lifecycleMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">renderMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Vue</span></span><br></pre></td></tr></table></figure>\n<p>这不就是一个构造函数嘛？本质上就是一个Function实现的类，然后对这个类的原型上增加方法或属性，这个地方看起来还是能看懂的。<br>看完index之后在看看那个initGlobalAPI做了什么，是在.&#x2F;global-api&#x2F;index这里。 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> config <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../config&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initUse &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./use&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./mixin&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initExtend &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./extend&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initAssetRegisters &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./assets&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; set, del &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../observer/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"variable constant_\">ASSET_TYPES</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;shared/constants&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> builtInComponents <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../components/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; observe &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;core/observer/index&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  warn,</span><br><span class=\"line\">  extend,</span><br><span class=\"line\">  nextTick,</span><br><span class=\"line\">  mergeOptions,</span><br><span class=\"line\">  defineReactive</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../util/index&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">initGlobalAPI</span> (<span class=\"title class_\">Vue</span>: <span class=\"title class_\">GlobalAPI</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// config</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> configDef = &#123;&#125;</span><br><span class=\"line\">  configDef.<span class=\"property\">get</span> = <span class=\"function\">() =&gt;</span> config</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">    configDef.<span class=\"property\">set</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;Do not replace the Vue.config object, set individual fields instead.&#x27;</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(<span class=\"title class_\">Vue</span>, <span class=\"string\">&#x27;config&#x27;</span>, configDef)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// exposed util methods.</span></span><br><span class=\"line\">  <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> these are not considered part of the public API - avoid relying on</span></span><br><span class=\"line\">  <span class=\"comment\">// them unless you are aware of the risk.</span></span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">util</span> = &#123;</span><br><span class=\"line\">    warn,</span><br><span class=\"line\">    extend,</span><br><span class=\"line\">    mergeOptions,</span><br><span class=\"line\">    defineReactive</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">set</span> = set</span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">delete</span> = del</span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">nextTick</span> = nextTick</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.6 explicit observable API</span></span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">observable</span> = &lt;T&gt;(<span class=\"attr\">obj</span>: T): <span class=\"function\"><span class=\"params\">T</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">observe</span>(obj)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">options</span> = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"literal\">null</span>)</span><br><span class=\"line\">  <span class=\"variable constant_\">ASSET_TYPES</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">type</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">Vue</span>.<span class=\"property\">options</span>[type + <span class=\"string\">&#x27;s&#x27;</span>] = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"literal\">null</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// this is used to identify the &quot;base&quot; constructor to extend all plain-object</span></span><br><span class=\"line\">  <span class=\"comment\">// components with in Weex&#x27;s multi-instance scenarios.</span></span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">options</span>.<span class=\"property\">_base</span> = <span class=\"title class_\">Vue</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">extend</span>(<span class=\"title class_\">Vue</span>.<span class=\"property\">options</span>.<span class=\"property\">components</span>, builtInComponents)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">initUse</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">  <span class=\"title function_\">initMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">  <span class=\"title function_\">initExtend</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">  <span class=\"title function_\">initAssetRegisters</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里就是给Vue增加一些全局方法了，文档上的API应该都能在这里面找到。<br>看到这大概能知道Vue本质上就是Function实现的Class，然后在原型上扩展一些方法属性，然后基本上Vue就是这么定义的，当然里面还有很多很多具体的实现，在instance和global-api目录下还有很多模块，这个就留到后面慢慢琢磨吧。。</p>\n","site":{"data":{}},"length":3688,"excerpt":"<h2 id=\"Vue框架中Vue的定义\"><a href=\"#Vue框架中Vue的定义\" class=\"headerlink\" title=\"Vue框架中Vue的定义\"></a>Vue框架中Vue的定义</h2><p>平常开发spa时，一般都能看到new Vue()这样的代码，然后就会思考，Vue这个框架到底是如何去定义Vue的？Vue到底是个什么东西？然后就去翻源码了。。。</p>","more":"<p>其实在<code>src/core/index.js</code>中你就可以看到Vue基本的实现了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./instance/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initGlobalAPI &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./global-api/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; isServerRendering &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;core/util/env&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">FunctionalRenderContext</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;core/vdom/create-functional-component&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">initGlobalAPI</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(<span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>, <span class=\"string\">&#x27;$isServer&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">get</span>: isServerRendering</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(<span class=\"title class_\">Vue</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>, <span class=\"string\">&#x27;$ssrContext&#x27;</span>, &#123;</span><br><span class=\"line\">  get () &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* istanbul ignore next */</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">$vnode</span> &amp;&amp; <span class=\"variable language_\">this</span>.<span class=\"property\">$vnode</span>.<span class=\"property\">ssrContext</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// expose FunctionalRenderContext for ssr runtime helper installation</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(<span class=\"title class_\">Vue</span>, <span class=\"string\">&#x27;FunctionalRenderContext&#x27;</span>, &#123;</span><br><span class=\"line\">  <span class=\"attr\">value</span>: <span class=\"title class_\">FunctionalRenderContext</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Vue</span>.<span class=\"property\">version</span> = <span class=\"string\">&#x27;__VERSION__&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Vue</span></span><br></pre></td></tr></table></figure>\n<p>这里第一二行就是定义Vue关键代码了，然后我们继续找到对应的js文件。<br>首先是.&#x2F;instance&#x2F;index.js  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; initMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./init&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; stateMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./state&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; renderMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./render&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; eventsMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./events&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; lifecycleMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./lifecycle&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; warn &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../util/index&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Vue</span> (options) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span> &amp;&amp;</span><br><span class=\"line\">    !(<span class=\"variable language_\">this</span> <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">  ) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">warn</span>(<span class=\"string\">&#x27;Vue is a constructor and should be called with the `new` keyword&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">_init</span>(options)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">initMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">stateMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">eventsMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">lifecycleMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"><span class=\"title function_\">renderMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">Vue</span></span><br></pre></td></tr></table></figure>\n<p>这不就是一个构造函数嘛？本质上就是一个Function实现的类，然后对这个类的原型上增加方法或属性，这个地方看起来还是能看懂的。<br>看完index之后在看看那个initGlobalAPI做了什么，是在.&#x2F;global-api&#x2F;index这里。 </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> config <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../config&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initUse &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./use&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initMixin &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./mixin&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initExtend &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./extend&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; initAssetRegisters &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./assets&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; set, del &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../observer/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"variable constant_\">ASSET_TYPES</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;shared/constants&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> builtInComponents <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../components/index&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; observe &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;core/observer/index&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  warn,</span><br><span class=\"line\">  extend,</span><br><span class=\"line\">  nextTick,</span><br><span class=\"line\">  mergeOptions,</span><br><span class=\"line\">  defineReactive</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../util/index&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">initGlobalAPI</span> (<span class=\"title class_\">Vue</span>: <span class=\"title class_\">GlobalAPI</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// config</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> configDef = &#123;&#125;</span><br><span class=\"line\">  configDef.<span class=\"property\">get</span> = <span class=\"function\">() =&gt;</span> config</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;production&#x27;</span>) &#123;</span><br><span class=\"line\">    configDef.<span class=\"property\">set</span> = <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"title function_\">warn</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;Do not replace the Vue.config object, set individual fields instead.&#x27;</span></span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title class_\">Object</span>.<span class=\"title function_\">defineProperty</span>(<span class=\"title class_\">Vue</span>, <span class=\"string\">&#x27;config&#x27;</span>, configDef)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// exposed util methods.</span></span><br><span class=\"line\">  <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> these are not considered part of the public API - avoid relying on</span></span><br><span class=\"line\">  <span class=\"comment\">// them unless you are aware of the risk.</span></span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">util</span> = &#123;</span><br><span class=\"line\">    warn,</span><br><span class=\"line\">    extend,</span><br><span class=\"line\">    mergeOptions,</span><br><span class=\"line\">    defineReactive</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">set</span> = set</span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">delete</span> = del</span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">nextTick</span> = nextTick</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.6 explicit observable API</span></span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">observable</span> = &lt;T&gt;(<span class=\"attr\">obj</span>: T): <span class=\"function\"><span class=\"params\">T</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">observe</span>(obj)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">options</span> = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"literal\">null</span>)</span><br><span class=\"line\">  <span class=\"variable constant_\">ASSET_TYPES</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">type</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">Vue</span>.<span class=\"property\">options</span>[type + <span class=\"string\">&#x27;s&#x27;</span>] = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"literal\">null</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// this is used to identify the &quot;base&quot; constructor to extend all plain-object</span></span><br><span class=\"line\">  <span class=\"comment\">// components with in Weex&#x27;s multi-instance scenarios.</span></span><br><span class=\"line\">  <span class=\"title class_\">Vue</span>.<span class=\"property\">options</span>.<span class=\"property\">_base</span> = <span class=\"title class_\">Vue</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">extend</span>(<span class=\"title class_\">Vue</span>.<span class=\"property\">options</span>.<span class=\"property\">components</span>, builtInComponents)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">initUse</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">  <span class=\"title function_\">initMixin</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">  <span class=\"title function_\">initExtend</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">  <span class=\"title function_\">initAssetRegisters</span>(<span class=\"title class_\">Vue</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里就是给Vue增加一些全局方法了，文档上的API应该都能在这里面找到。<br>看到这大概能知道Vue本质上就是Function实现的Class，然后在原型上扩展一些方法属性，然后基本上Vue就是这么定义的，当然里面还有很多很多具体的实现，在instance和global-api目录下还有很多模块，这个就留到后面慢慢琢磨吧。。</p>"},{"title":"es6新特性初体验（一）","date":"2018-09-12T16:00:00.000Z","description":"拥抱变化，多玩玩新东西","_content":"## 新特性还是要玩玩\n  其实之前就有关注es6，只是工作上基本上没有机会用的到，所以就把它搁置在一旁没有再给予过多的关注了\n  好了，不吹比了，还是继续老实点看书学习，先在这记录下，路还很漫长啊\n<!-- more -->\n***\nes6最常用的新特性\n`let,const,arrow funciton,template string,对象字面量,表达式结构,class等等`\n1. 变量声明\n    除了var以外，新加了let，const，let声明的变量只在块级作用域内有效，\n而const是用来声明常量的，以后再也不用写大写字母下划线来标明这个玩意是常量了，惊不惊喜，意不意外。\n2. 箭头函数\n    这个应该是用的最多的一种特性了吧，据说是这样，反正我现在也没怎么开始写es6，以后再慢慢看是否属实。\n    箭头函数呢，书上说跟之前coffeescript的“胖箭头”类似，箭头函数其实就是一个匿名函数，用箭头来定义。\n    箭头函数有四种，单一参数单行箭头函数，多参单行箭头函数，多行箭头函数，无参箭头函数，其实说了这么多，还不如代码来的实在。\n```javascript\n    1. const fn = foo => `${foo} world` // return foo + world 单一参数单行箭头函数\n    2. let array = ['a','aab','ac','cd'];\n        array = array.filter(item => item.length >= 3) // return aab\n       let array = ['a','aab','aced','cd'];\n        array = array.sort((a,b) => a.length < b.length) // return aced aab cd a 多参单行箭头函数\n    3. (foo + bar) = {\n            retrun foo + bar \n    } // 多行箭头函数\n    4. const arr = [1,2,3];\n        //箭头函数\n        const squares = arr.map(x => x * x);\n        //传统语法\n        const squares = arr.map(function (x) { return x * x });\n```\n箭头函数还有个神奇的this指向的改变，具体咋样之后我看完实践后再记录吧~，今天先到这了\n\n\n","source":"_posts/es6学习初体验（一）.md","raw":"---\ntitle: es6新特性初体验（一）\ndate: 2018-09-13\ncategories: [前端,javascript]\ntags: [JavaScript]\ndescription: 拥抱变化，多玩玩新东西\n---\n## 新特性还是要玩玩\n  其实之前就有关注es6，只是工作上基本上没有机会用的到，所以就把它搁置在一旁没有再给予过多的关注了\n  好了，不吹比了，还是继续老实点看书学习，先在这记录下，路还很漫长啊\n<!-- more -->\n***\nes6最常用的新特性\n`let,const,arrow funciton,template string,对象字面量,表达式结构,class等等`\n1. 变量声明\n    除了var以外，新加了let，const，let声明的变量只在块级作用域内有效，\n而const是用来声明常量的，以后再也不用写大写字母下划线来标明这个玩意是常量了，惊不惊喜，意不意外。\n2. 箭头函数\n    这个应该是用的最多的一种特性了吧，据说是这样，反正我现在也没怎么开始写es6，以后再慢慢看是否属实。\n    箭头函数呢，书上说跟之前coffeescript的“胖箭头”类似，箭头函数其实就是一个匿名函数，用箭头来定义。\n    箭头函数有四种，单一参数单行箭头函数，多参单行箭头函数，多行箭头函数，无参箭头函数，其实说了这么多，还不如代码来的实在。\n```javascript\n    1. const fn = foo => `${foo} world` // return foo + world 单一参数单行箭头函数\n    2. let array = ['a','aab','ac','cd'];\n        array = array.filter(item => item.length >= 3) // return aab\n       let array = ['a','aab','aced','cd'];\n        array = array.sort((a,b) => a.length < b.length) // return aced aab cd a 多参单行箭头函数\n    3. (foo + bar) = {\n            retrun foo + bar \n    } // 多行箭头函数\n    4. const arr = [1,2,3];\n        //箭头函数\n        const squares = arr.map(x => x * x);\n        //传统语法\n        const squares = arr.map(function (x) { return x * x });\n```\n箭头函数还有个神奇的this指向的改变，具体咋样之后我看完实践后再记录吧~，今天先到这了\n\n\n","slug":"es6学习初体验（一）","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wo001br2uf8m1ve4uq","content":"<h2 id=\"新特性还是要玩玩\"><a href=\"#新特性还是要玩玩\" class=\"headerlink\" title=\"新特性还是要玩玩\"></a>新特性还是要玩玩</h2><p>  其实之前就有关注es6，只是工作上基本上没有机会用的到，所以就把它搁置在一旁没有再给予过多的关注了<br>  好了，不吹比了，还是继续老实点看书学习，先在这记录下，路还很漫长啊</p>\n<span id=\"more\"></span>\n<hr>\n<p>es6最常用的新特性<br><code>let,const,arrow funciton,template string,对象字面量,表达式结构,class等等</code></p>\n<ol>\n<li>变量声明<br> 除了var以外，新加了let，const，let声明的变量只在块级作用域内有效，<br>而const是用来声明常量的，以后再也不用写大写字母下划线来标明这个玩意是常量了，惊不惊喜，意不意外。</li>\n<li>箭头函数<br> 这个应该是用的最多的一种特性了吧，据说是这样，反正我现在也没怎么开始写es6，以后再慢慢看是否属实。<br> 箭头函数呢，书上说跟之前coffeescript的“胖箭头”类似，箭头函数其实就是一个匿名函数，用箭头来定义。<br> 箭头函数有四种，单一参数单行箭头函数，多参单行箭头函数，多行箭头函数，无参箭头函数，其实说了这么多，还不如代码来的实在。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"keyword\">const</span> <span class=\"title function_\">fn</span> = foo =&gt; <span class=\"string\">`<span class=\"subst\">$&#123;foo&#125;</span> world`</span> <span class=\"comment\">// return foo + world 单一参数单行箭头函数</span></span><br><span class=\"line\"><span class=\"number\">2.</span> <span class=\"keyword\">let</span> array = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;aab&#x27;</span>,<span class=\"string\">&#x27;ac&#x27;</span>,<span class=\"string\">&#x27;cd&#x27;</span>];</span><br><span class=\"line\">    array = array.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">length</span> &gt;= <span class=\"number\">3</span>) <span class=\"comment\">// return aab</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> array = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;aab&#x27;</span>,<span class=\"string\">&#x27;aced&#x27;</span>,<span class=\"string\">&#x27;cd&#x27;</span>];</span><br><span class=\"line\">    array = array.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a.<span class=\"property\">length</span> &lt; b.<span class=\"property\">length</span>) <span class=\"comment\">// return aced aab cd a 多参单行箭头函数</span></span><br><span class=\"line\"><span class=\"number\">3.</span> (foo + bar) = &#123;</span><br><span class=\"line\">        retrun foo + bar </span><br><span class=\"line\">&#125; <span class=\"comment\">// 多行箭头函数</span></span><br><span class=\"line\"><span class=\"number\">4.</span> <span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"comment\">//箭头函数</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> squares = arr.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x * x);</span><br><span class=\"line\">    <span class=\"comment\">//传统语法</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> squares = arr.<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">x</span>) &#123; <span class=\"keyword\">return</span> x * x &#125;);</span><br></pre></td></tr></table></figure>\n箭头函数还有个神奇的this指向的改变，具体咋样之后我看完实践后再记录吧~，今天先到这了</li>\n</ol>\n","site":{"data":{}},"length":991,"excerpt":"<h2 id=\"新特性还是要玩玩\"><a href=\"#新特性还是要玩玩\" class=\"headerlink\" title=\"新特性还是要玩玩\"></a>新特性还是要玩玩</h2><p>  其实之前就有关注es6，只是工作上基本上没有机会用的到，所以就把它搁置在一旁没有再给予过多的关注了<br>  好了，不吹比了，还是继续老实点看书学习，先在这记录下，路还很漫长啊</p>","more":"<hr>\n<p>es6最常用的新特性<br><code>let,const,arrow funciton,template string,对象字面量,表达式结构,class等等</code></p>\n<ol>\n<li>变量声明<br> 除了var以外，新加了let，const，let声明的变量只在块级作用域内有效，<br>而const是用来声明常量的，以后再也不用写大写字母下划线来标明这个玩意是常量了，惊不惊喜，意不意外。</li>\n<li>箭头函数<br> 这个应该是用的最多的一种特性了吧，据说是这样，反正我现在也没怎么开始写es6，以后再慢慢看是否属实。<br> 箭头函数呢，书上说跟之前coffeescript的“胖箭头”类似，箭头函数其实就是一个匿名函数，用箭头来定义。<br> 箭头函数有四种，单一参数单行箭头函数，多参单行箭头函数，多行箭头函数，无参箭头函数，其实说了这么多，还不如代码来的实在。<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> <span class=\"keyword\">const</span> <span class=\"title function_\">fn</span> = foo =&gt; <span class=\"string\">`<span class=\"subst\">$&#123;foo&#125;</span> world`</span> <span class=\"comment\">// return foo + world 单一参数单行箭头函数</span></span><br><span class=\"line\"><span class=\"number\">2.</span> <span class=\"keyword\">let</span> array = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;aab&#x27;</span>,<span class=\"string\">&#x27;ac&#x27;</span>,<span class=\"string\">&#x27;cd&#x27;</span>];</span><br><span class=\"line\">    array = array.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> item.<span class=\"property\">length</span> &gt;= <span class=\"number\">3</span>) <span class=\"comment\">// return aab</span></span><br><span class=\"line\">   <span class=\"keyword\">let</span> array = [<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;aab&#x27;</span>,<span class=\"string\">&#x27;aced&#x27;</span>,<span class=\"string\">&#x27;cd&#x27;</span>];</span><br><span class=\"line\">    array = array.<span class=\"title function_\">sort</span>(<span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> a.<span class=\"property\">length</span> &lt; b.<span class=\"property\">length</span>) <span class=\"comment\">// return aced aab cd a 多参单行箭头函数</span></span><br><span class=\"line\"><span class=\"number\">3.</span> (foo + bar) = &#123;</span><br><span class=\"line\">        retrun foo + bar </span><br><span class=\"line\">&#125; <span class=\"comment\">// 多行箭头函数</span></span><br><span class=\"line\"><span class=\"number\">4.</span> <span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\">    <span class=\"comment\">//箭头函数</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> squares = arr.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x * x);</span><br><span class=\"line\">    <span class=\"comment\">//传统语法</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> squares = arr.<span class=\"title function_\">map</span>(<span class=\"keyword\">function</span> (<span class=\"params\">x</span>) &#123; <span class=\"keyword\">return</span> x * x &#125;);</span><br></pre></td></tr></table></figure>\n箭头函数还有个神奇的this指向的改变，具体咋样之后我看完实践后再记录吧~，今天先到这了</li>\n</ol>"},{"title":"Vue源码解析-Flow&目录设计","date":"2018-09-02T16:00:00.000Z","description":"深入了解Vue框架，源码设计","_content":"\n## Flow-js静态类型检查工具 [官网](https://flowtype.org/)\n**Flow是什么？**  \n[Flow](https://flowtype.org/)是个JavaScript静态类型检查工具。  \n<!-- more -->\n\n**Flow有什么用\b？为什么要用？**  \nFlow是用于检测编译前出现的类型错误，为什么需要检测？这是由于js是\b弱数据类型的语言，弱(动态)数据类型代表在代码中，变量或常量会自动依照赋值变更数据类型，而且类型种类也很少，这是直译式脚本语言的常见特性，但有可能是优点也是很大的缺点。优点是容易学习与使用，缺点是像开发者经常会因为赋值或传值的类型错误，造成不如预期的结果。有些时候在使用框架或函数库时，如果没有仔细看文件，亦或是文件写得不清不楚，也容易造成误用的情况。\n\n这个缺点在应用规模化时，会显得更加严重。我们在开发团队的协同时，一般都是用详尽的文字说明，来降低这个问题的发生，但JS语言本身无法有效阻止这些问题。而且说明文件也需要花时间额外编写，其他的开发者阅读也需要花时间。在现今预先编译器流行的年代，像TypeScript这样的强(静态)类的JavaScript超集语言就开始流行，用严格的角度，以JavaScript语言为基底，来重新打造另一套具有强(静态)类型特性的语言，就如同Java或C#这些语言一样，这也是为什么TypeScript称自己是企业级的开发JavaScript解决方案。\n\n> 注: 强(静态)类型语言，意思是可以让变量或常量在声明(定义)时，就限制好只能使用哪种类型，之后在使用时如果发生类型不相符时，就会发出错误警告而不能编译。但不只这些，语言本身也会拓展了更多的类型与语法。  \n\n**如何使用Flow**  \n```javascript\n//参数类型未知\nfunction foo(x){\n    return x+1\n}\n\n// @flow\nfunction foo(x: number): number {\n  return x + 10\n}\nfoo('hi')\n/* 你有看到在函数的传参，以及函数的圆括号(())后面的两个地方，加了: number标记，这代表这个传参会限定为数字类型，而返回值也只允许是数字类型。\n当使用非数字类型的值作为传入值时，就会出现由Flow工具发出的警告消息，像下面这样:\n> message: '[flow] string (This type is incompatible with number See also: function call)'*/\n\n// 允许多种类型参数\n// @flow\n\nfunction foo(x: number | boolean): number | string {\n  if (typeof x === 'number') {\n    return x + 10\n  }\n  return 'x is boolean'\n}\n\nfoo(1)\nfoo(true)\nfoo(null)  // 这一行有类型错误消息\n```\n对于Flow的介绍大概就这些，想要详细了解Flow的安装使用，请阅读[官网文档](https://flowtype.org/)。\n\n## Vue源码目录设计\n\nvue源码都在src目录下，目录结构为：  \n```javascript\nsrc  \n|—— compiler.js     //构建相关代码-会把模板解析成ast语法树等等功能模块  \n|—— core.js         //包含Vue核心代码，内置组件，全局API封装，Vue实例化，观察者，虚拟Dom等  \n|—— platform.js     //区分Vue不同的版本，兼容多平台  \n|—— server.js       //服务端渲染相关功能  \n|—— sfc.js          //解析.vue文件成y一个js对象\n|—— shared.js       //一些与浏览器共存的工具函数\n```\n\n","source":"_posts/Vue源码解析-Flow&目录设计.md","raw":"---\ntitle: Vue源码解析-Flow&目录设计\ndate: 2018-09-03\ncategories: 前端\ntags: [JavaScript,Vue]\ndescription: 深入了解Vue框架，源码设计\n---\n\n## Flow-js静态类型检查工具 [官网](https://flowtype.org/)\n**Flow是什么？**  \n[Flow](https://flowtype.org/)是个JavaScript静态类型检查工具。  \n<!-- more -->\n\n**Flow有什么用\b？为什么要用？**  \nFlow是用于检测编译前出现的类型错误，为什么需要检测？这是由于js是\b弱数据类型的语言，弱(动态)数据类型代表在代码中，变量或常量会自动依照赋值变更数据类型，而且类型种类也很少，这是直译式脚本语言的常见特性，但有可能是优点也是很大的缺点。优点是容易学习与使用，缺点是像开发者经常会因为赋值或传值的类型错误，造成不如预期的结果。有些时候在使用框架或函数库时，如果没有仔细看文件，亦或是文件写得不清不楚，也容易造成误用的情况。\n\n这个缺点在应用规模化时，会显得更加严重。我们在开发团队的协同时，一般都是用详尽的文字说明，来降低这个问题的发生，但JS语言本身无法有效阻止这些问题。而且说明文件也需要花时间额外编写，其他的开发者阅读也需要花时间。在现今预先编译器流行的年代，像TypeScript这样的强(静态)类的JavaScript超集语言就开始流行，用严格的角度，以JavaScript语言为基底，来重新打造另一套具有强(静态)类型特性的语言，就如同Java或C#这些语言一样，这也是为什么TypeScript称自己是企业级的开发JavaScript解决方案。\n\n> 注: 强(静态)类型语言，意思是可以让变量或常量在声明(定义)时，就限制好只能使用哪种类型，之后在使用时如果发生类型不相符时，就会发出错误警告而不能编译。但不只这些，语言本身也会拓展了更多的类型与语法。  \n\n**如何使用Flow**  \n```javascript\n//参数类型未知\nfunction foo(x){\n    return x+1\n}\n\n// @flow\nfunction foo(x: number): number {\n  return x + 10\n}\nfoo('hi')\n/* 你有看到在函数的传参，以及函数的圆括号(())后面的两个地方，加了: number标记，这代表这个传参会限定为数字类型，而返回值也只允许是数字类型。\n当使用非数字类型的值作为传入值时，就会出现由Flow工具发出的警告消息，像下面这样:\n> message: '[flow] string (This type is incompatible with number See also: function call)'*/\n\n// 允许多种类型参数\n// @flow\n\nfunction foo(x: number | boolean): number | string {\n  if (typeof x === 'number') {\n    return x + 10\n  }\n  return 'x is boolean'\n}\n\nfoo(1)\nfoo(true)\nfoo(null)  // 这一行有类型错误消息\n```\n对于Flow的介绍大概就这些，想要详细了解Flow的安装使用，请阅读[官网文档](https://flowtype.org/)。\n\n## Vue源码目录设计\n\nvue源码都在src目录下，目录结构为：  \n```javascript\nsrc  \n|—— compiler.js     //构建相关代码-会把模板解析成ast语法树等等功能模块  \n|—— core.js         //包含Vue核心代码，内置组件，全局API封装，Vue实例化，观察者，虚拟Dom等  \n|—— platform.js     //区分Vue不同的版本，兼容多平台  \n|—— server.js       //服务端渲染相关功能  \n|—— sfc.js          //解析.vue文件成y一个js对象\n|—— shared.js       //一些与浏览器共存的工具函数\n```\n\n","slug":"Vue源码解析-Flow&目录设计","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wp001er2uf8h5uatnm","content":"<h2 id=\"Flow-js静态类型检查工具-官网\"><a href=\"#Flow-js静态类型检查工具-官网\" class=\"headerlink\" title=\"Flow-js静态类型检查工具 官网\"></a>Flow-js静态类型检查工具 <a href=\"https://flowtype.org/\">官网</a></h2><p><strong>Flow是什么？</strong><br><a href=\"https://flowtype.org/\">Flow</a>是个JavaScript静态类型检查工具。  </p>\n<span id=\"more\"></span>\n\n<p><strong>Flow有什么用\b？为什么要用？</strong><br>Flow是用于检测编译前出现的类型错误，为什么需要检测？这是由于js是\b弱数据类型的语言，弱(动态)数据类型代表在代码中，变量或常量会自动依照赋值变更数据类型，而且类型种类也很少，这是直译式脚本语言的常见特性，但有可能是优点也是很大的缺点。优点是容易学习与使用，缺点是像开发者经常会因为赋值或传值的类型错误，造成不如预期的结果。有些时候在使用框架或函数库时，如果没有仔细看文件，亦或是文件写得不清不楚，也容易造成误用的情况。</p>\n<p>这个缺点在应用规模化时，会显得更加严重。我们在开发团队的协同时，一般都是用详尽的文字说明，来降低这个问题的发生，但JS语言本身无法有效阻止这些问题。而且说明文件也需要花时间额外编写，其他的开发者阅读也需要花时间。在现今预先编译器流行的年代，像TypeScript这样的强(静态)类的JavaScript超集语言就开始流行，用严格的角度，以JavaScript语言为基底，来重新打造另一套具有强(静态)类型特性的语言，就如同Java或C#这些语言一样，这也是为什么TypeScript称自己是企业级的开发JavaScript解决方案。</p>\n<blockquote>\n<p>注: 强(静态)类型语言，意思是可以让变量或常量在声明(定义)时，就限制好只能使用哪种类型，之后在使用时如果发生类型不相符时，就会发出错误警告而不能编译。但不只这些，语言本身也会拓展了更多的类型与语法。  </p>\n</blockquote>\n<p><strong>如何使用Flow</strong>  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//参数类型未知</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\">x</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x+<span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// @flow</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\">x: number</span>): number &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + <span class=\"number\">10</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">foo</span>(<span class=\"string\">&#x27;hi&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">/* 你有看到在函数的传参，以及函数的圆括号(())后面的两个地方，加了: number标记，这代表这个传参会限定为数字类型，而返回值也只允许是数字类型。</span></span><br><span class=\"line\"><span class=\"comment\">当使用非数字类型的值作为传入值时，就会出现由Flow工具发出的警告消息，像下面这样:</span></span><br><span class=\"line\"><span class=\"comment\">&gt; message: &#x27;[flow] string (This type is incompatible with number See also: function call)&#x27;*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 允许多种类型参数</span></span><br><span class=\"line\"><span class=\"comment\">// @flow</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\">x: number | boolean</span>): number | string &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> x === <span class=\"string\">&#x27;number&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + <span class=\"number\">10</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;x is boolean&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"title function_\">foo</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"title function_\">foo</span>(<span class=\"literal\">null</span>)  <span class=\"comment\">// 这一行有类型错误消息</span></span><br></pre></td></tr></table></figure>\n<p>对于Flow的介绍大概就这些，想要详细了解Flow的安装使用，请阅读<a href=\"https://flowtype.org/\">官网文档</a>。</p>\n<h2 id=\"Vue源码目录设计\"><a href=\"#Vue源码目录设计\" class=\"headerlink\" title=\"Vue源码目录设计\"></a>Vue源码目录设计</h2><p>vue源码都在src目录下，目录结构为：  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src  </span><br><span class=\"line\">|—— compiler.<span class=\"property\">js</span>     <span class=\"comment\">//构建相关代码-会把模板解析成ast语法树等等功能模块  </span></span><br><span class=\"line\">|—— core.<span class=\"property\">js</span>         <span class=\"comment\">//包含Vue核心代码，内置组件，全局API封装，Vue实例化，观察者，虚拟Dom等  </span></span><br><span class=\"line\">|—— platform.<span class=\"property\">js</span>     <span class=\"comment\">//区分Vue不同的版本，兼容多平台  </span></span><br><span class=\"line\">|—— server.<span class=\"property\">js</span>       <span class=\"comment\">//服务端渲染相关功能  </span></span><br><span class=\"line\">|—— sfc.<span class=\"property\">js</span>          <span class=\"comment\">//解析.vue文件成y一个js对象</span></span><br><span class=\"line\">|—— shared.<span class=\"property\">js</span>       <span class=\"comment\">//一些与浏览器共存的工具函数</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"length":1496,"excerpt":"<h2 id=\"Flow-js静态类型检查工具-官网\"><a href=\"#Flow-js静态类型检查工具-官网\" class=\"headerlink\" title=\"Flow-js静态类型检查工具 官网\"></a>Flow-js静态类型检查工具 <a href=\"https://flowtype.org/\">官网</a></h2><p><strong>Flow是什么？</strong><br><a href=\"https://flowtype.org/\">Flow</a>是个JavaScript静态类型检查工具。  </p>","more":"<p><strong>Flow有什么用\b？为什么要用？</strong><br>Flow是用于检测编译前出现的类型错误，为什么需要检测？这是由于js是\b弱数据类型的语言，弱(动态)数据类型代表在代码中，变量或常量会自动依照赋值变更数据类型，而且类型种类也很少，这是直译式脚本语言的常见特性，但有可能是优点也是很大的缺点。优点是容易学习与使用，缺点是像开发者经常会因为赋值或传值的类型错误，造成不如预期的结果。有些时候在使用框架或函数库时，如果没有仔细看文件，亦或是文件写得不清不楚，也容易造成误用的情况。</p>\n<p>这个缺点在应用规模化时，会显得更加严重。我们在开发团队的协同时，一般都是用详尽的文字说明，来降低这个问题的发生，但JS语言本身无法有效阻止这些问题。而且说明文件也需要花时间额外编写，其他的开发者阅读也需要花时间。在现今预先编译器流行的年代，像TypeScript这样的强(静态)类的JavaScript超集语言就开始流行，用严格的角度，以JavaScript语言为基底，来重新打造另一套具有强(静态)类型特性的语言，就如同Java或C#这些语言一样，这也是为什么TypeScript称自己是企业级的开发JavaScript解决方案。</p>\n<blockquote>\n<p>注: 强(静态)类型语言，意思是可以让变量或常量在声明(定义)时，就限制好只能使用哪种类型，之后在使用时如果发生类型不相符时，就会发出错误警告而不能编译。但不只这些，语言本身也会拓展了更多的类型与语法。  </p>\n</blockquote>\n<p><strong>如何使用Flow</strong>  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//参数类型未知</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\">x</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x+<span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// @flow</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\">x: number</span>): number &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> x + <span class=\"number\">10</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_\">foo</span>(<span class=\"string\">&#x27;hi&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">/* 你有看到在函数的传参，以及函数的圆括号(())后面的两个地方，加了: number标记，这代表这个传参会限定为数字类型，而返回值也只允许是数字类型。</span></span><br><span class=\"line\"><span class=\"comment\">当使用非数字类型的值作为传入值时，就会出现由Flow工具发出的警告消息，像下面这样:</span></span><br><span class=\"line\"><span class=\"comment\">&gt; message: &#x27;[flow] string (This type is incompatible with number See also: function call)&#x27;*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 允许多种类型参数</span></span><br><span class=\"line\"><span class=\"comment\">// @flow</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\">x: number | boolean</span>): number | string &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> x === <span class=\"string\">&#x27;number&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x + <span class=\"number\">10</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&#x27;x is boolean&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">foo</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"title function_\">foo</span>(<span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"title function_\">foo</span>(<span class=\"literal\">null</span>)  <span class=\"comment\">// 这一行有类型错误消息</span></span><br></pre></td></tr></table></figure>\n<p>对于Flow的介绍大概就这些，想要详细了解Flow的安装使用，请阅读<a href=\"https://flowtype.org/\">官网文档</a>。</p>\n<h2 id=\"Vue源码目录设计\"><a href=\"#Vue源码目录设计\" class=\"headerlink\" title=\"Vue源码目录设计\"></a>Vue源码目录设计</h2><p>vue源码都在src目录下，目录结构为：  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">src  </span><br><span class=\"line\">|—— compiler.<span class=\"property\">js</span>     <span class=\"comment\">//构建相关代码-会把模板解析成ast语法树等等功能模块  </span></span><br><span class=\"line\">|—— core.<span class=\"property\">js</span>         <span class=\"comment\">//包含Vue核心代码，内置组件，全局API封装，Vue实例化，观察者，虚拟Dom等  </span></span><br><span class=\"line\">|—— platform.<span class=\"property\">js</span>     <span class=\"comment\">//区分Vue不同的版本，兼容多平台  </span></span><br><span class=\"line\">|—— server.<span class=\"property\">js</span>       <span class=\"comment\">//服务端渲染相关功能  </span></span><br><span class=\"line\">|—— sfc.<span class=\"property\">js</span>          <span class=\"comment\">//解析.vue文件成y一个js对象</span></span><br><span class=\"line\">|—— shared.<span class=\"property\">js</span>       <span class=\"comment\">//一些与浏览器共存的工具函数</span></span><br></pre></td></tr></table></figure>"},{"title":"从github到coding - blog","date":"2017-04-01T16:00:00.000Z","description":"github pages迁移coding pages","_content":"## 背景\n主要还是国内github访问太慢了~\n<!-- more -->\n之前把博客部署在github是因为github用的多点，自己熟悉点，然后确实是慢，自己也懒得用图床，替换了字体也没看到快了多少，所以就有了想把bolg从github上搬到coding的想法，而且现在用coding的人也越来越多了，自己也要用用看，而且多说要停了，也要重新去换个评论系统，所以还是得维护维护。\n## 新的开始，一切源于自己努力付出\n我想一直这样坚持下去。\n从2月底开始，入职新公司也有一个多月了。这段时间基本上每天都是朝九晚九，收获呢，还是挺多的，一堆新的同事，新朋友，还有很多技术上的收获，以及相关工作经验上的，虽然整个团队的氛围也是很好，但是还是没有之前在的公司感情深刻，可能时间不够长，也可能上市公司里面确实是没有创业公司的那种大家庭感觉，不过总体来说，目前这家公司还是可以的，还挺不错。总体上来说，这些天都还是比较忙碌的，有几个星期每天晚上回来还会看点设计模式方面的书，不过，好像这些概念上的知识不去进行实践操作的话，确实是比较容易忘的~有点尴尬。哎，虽然有点小累，但也总比无聊空虚好，希望自己能继续坚持下去吧，坚持每天学习一点，哪怕是进步一点，这样也不会辜负这美好的而又激情的青春了！","source":"_posts/github换coding.md","raw":"---\ntitle: 从github到coding - blog \ndate: 2017-04-02\ncategories: hexo\ntags: [博客，文章]\ndescription: github pages迁移coding pages\n---\n## 背景\n主要还是国内github访问太慢了~\n<!-- more -->\n之前把博客部署在github是因为github用的多点，自己熟悉点，然后确实是慢，自己也懒得用图床，替换了字体也没看到快了多少，所以就有了想把bolg从github上搬到coding的想法，而且现在用coding的人也越来越多了，自己也要用用看，而且多说要停了，也要重新去换个评论系统，所以还是得维护维护。\n## 新的开始，一切源于自己努力付出\n我想一直这样坚持下去。\n从2月底开始，入职新公司也有一个多月了。这段时间基本上每天都是朝九晚九，收获呢，还是挺多的，一堆新的同事，新朋友，还有很多技术上的收获，以及相关工作经验上的，虽然整个团队的氛围也是很好，但是还是没有之前在的公司感情深刻，可能时间不够长，也可能上市公司里面确实是没有创业公司的那种大家庭感觉，不过总体来说，目前这家公司还是可以的，还挺不错。总体上来说，这些天都还是比较忙碌的，有几个星期每天晚上回来还会看点设计模式方面的书，不过，好像这些概念上的知识不去进行实践操作的话，确实是比较容易忘的~有点尴尬。哎，虽然有点小累，但也总比无聊空虚好，希望自己能继续坚持下去吧，坚持每天学习一点，哪怕是进步一点，这样也不会辜负这美好的而又激情的青春了！","slug":"github换coding","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wq001gr2uf1gpufel6","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>主要还是国内github访问太慢了~</p>\n<span id=\"more\"></span>\n<p>之前把博客部署在github是因为github用的多点，自己熟悉点，然后确实是慢，自己也懒得用图床，替换了字体也没看到快了多少，所以就有了想把bolg从github上搬到coding的想法，而且现在用coding的人也越来越多了，自己也要用用看，而且多说要停了，也要重新去换个评论系统，所以还是得维护维护。</p>\n<h2 id=\"新的开始，一切源于自己努力付出\"><a href=\"#新的开始，一切源于自己努力付出\" class=\"headerlink\" title=\"新的开始，一切源于自己努力付出\"></a>新的开始，一切源于自己努力付出</h2><p>我想一直这样坚持下去。<br>从2月底开始，入职新公司也有一个多月了。这段时间基本上每天都是朝九晚九，收获呢，还是挺多的，一堆新的同事，新朋友，还有很多技术上的收获，以及相关工作经验上的，虽然整个团队的氛围也是很好，但是还是没有之前在的公司感情深刻，可能时间不够长，也可能上市公司里面确实是没有创业公司的那种大家庭感觉，不过总体来说，目前这家公司还是可以的，还挺不错。总体上来说，这些天都还是比较忙碌的，有几个星期每天晚上回来还会看点设计模式方面的书，不过，好像这些概念上的知识不去进行实践操作的话，确实是比较容易忘的~有点尴尬。哎，虽然有点小累，但也总比无聊空虚好，希望自己能继续坚持下去吧，坚持每天学习一点，哪怕是进步一点，这样也不会辜负这美好的而又激情的青春了！</p>\n","site":{"data":{}},"length":518,"excerpt":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>主要还是国内github访问太慢了~</p>","more":"<p>之前把博客部署在github是因为github用的多点，自己熟悉点，然后确实是慢，自己也懒得用图床，替换了字体也没看到快了多少，所以就有了想把bolg从github上搬到coding的想法，而且现在用coding的人也越来越多了，自己也要用用看，而且多说要停了，也要重新去换个评论系统，所以还是得维护维护。</p>\n<h2 id=\"新的开始，一切源于自己努力付出\"><a href=\"#新的开始，一切源于自己努力付出\" class=\"headerlink\" title=\"新的开始，一切源于自己努力付出\"></a>新的开始，一切源于自己努力付出</h2><p>我想一直这样坚持下去。<br>从2月底开始，入职新公司也有一个多月了。这段时间基本上每天都是朝九晚九，收获呢，还是挺多的，一堆新的同事，新朋友，还有很多技术上的收获，以及相关工作经验上的，虽然整个团队的氛围也是很好，但是还是没有之前在的公司感情深刻，可能时间不够长，也可能上市公司里面确实是没有创业公司的那种大家庭感觉，不过总体来说，目前这家公司还是可以的，还挺不错。总体上来说，这些天都还是比较忙碌的，有几个星期每天晚上回来还会看点设计模式方面的书，不过，好像这些概念上的知识不去进行实践操作的话，确实是比较容易忘的~有点尴尬。哎，虽然有点小累，但也总比无聊空虚好，希望自己能继续坚持下去吧，坚持每天学习一点，哪怕是进步一点，这样也不会辜负这美好的而又激情的青春了！</p>"},{"title":"hexo - hello elmer","date":"2016-05-07T16:00:00.000Z","description":"初次接触hexo","_content":"终于搭建的差不多了，剩下就是导入一些之前的博文笔记。不得不说，hexo还是挺好玩的，之后嘛，还有一个jekyll等着我。PS：下面是一些常用的hexo命令。\n<!-- more -->\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: hexo - hello elmer\ndate: 2016-05-08\ncategories: hexo\ntags: [hexo]\ndescription: 初次接触hexo\n---\n终于搭建的差不多了，剩下就是导入一些之前的博文笔记。不得不说，hexo还是挺好玩的，之后嘛，还有一个jekyll等着我。PS：下面是一些常用的hexo命令。\n<!-- more -->\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wq001lr2uf8q6icffm","content":"<p>终于搭建的差不多了，剩下就是导入一些之前的博文笔记。不得不说，hexo还是挺好玩的，之后嘛，还有一个jekyll等着我。PS：下面是一些常用的hexo命令。</p>\n<span id=\"more\"></span>\n<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n","site":{"data":{}},"length":445,"excerpt":"<p>终于搭建的差不多了，剩下就是导入一些之前的博文笔记。不得不说，hexo还是挺好玩的，之后嘛，还有一个jekyll等着我。PS：下面是一些常用的hexo命令。</p>","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>"},{"title":"consoleZ - 你值得拥有的Windows系统命令行工具","date":"2017-03-10T16:00:00.000Z","description":"更好的Windows系统命令行工具","_content":"场景：之前开发用git bash复制粘贴有点麻烦，后面就想着有没有个性化自定义功能强一点的命令行工具，后面各种搜索~发现了一款比较好玩的~暂且记下。\n<!-- more -->\n> 据江湖传言，ConsoleZ的前身是Console2，由于长期不更新，一牛人在此基础上重新开发了ConsoleZ\n\n这句话我也是从别的博主那里听来的，为啥要用这个consoleZ呢?其实我个人觉得他个性化的东西比较多吧，\n我最喜欢的是自定义的hotkeys，鼠标键盘快捷键都能自定义，想咋滴就咋滴，只要你快捷键不冲突，还有一点\n就是他的界面也是能自定义的，背景还能放图片，你怕不怕，只是我目前还没找到一张能让我不眼花缭乱，\n还能看清代码的的背景图，背景图这个还是有点。。。无语=。=不过搭配好了也是挺爽的哈~~\n不多说了，大家搞下来自己玩玩挺有意思的，Mac linux系统的就算了~~绕道~\n***\n下载地址[https://github.com/cbucher/console/wiki/Downloads](https://github.com/cbucher/console/wiki/Downloads)\n***\n想更详细的了解consoleZ可以去这位朋友瞧瞧~~[http://fy98.com/2014/10/18/the-best-ternimal-in-windows/](http://fy98.com/2014/10/18/the-best-ternimal-in-windows/)\n","source":"_posts/consoleZ.md","raw":"---\ntitle: consoleZ - 你值得拥有的Windows系统命令行工具\ndate: 2017-03-11\ncategories: 前端工具\ntags: [前端，工具]\ndescription: 更好的Windows系统命令行工具\n---\n场景：之前开发用git bash复制粘贴有点麻烦，后面就想着有没有个性化自定义功能强一点的命令行工具，后面各种搜索~发现了一款比较好玩的~暂且记下。\n<!-- more -->\n> 据江湖传言，ConsoleZ的前身是Console2，由于长期不更新，一牛人在此基础上重新开发了ConsoleZ\n\n这句话我也是从别的博主那里听来的，为啥要用这个consoleZ呢?其实我个人觉得他个性化的东西比较多吧，\n我最喜欢的是自定义的hotkeys，鼠标键盘快捷键都能自定义，想咋滴就咋滴，只要你快捷键不冲突，还有一点\n就是他的界面也是能自定义的，背景还能放图片，你怕不怕，只是我目前还没找到一张能让我不眼花缭乱，\n还能看清代码的的背景图，背景图这个还是有点。。。无语=。=不过搭配好了也是挺爽的哈~~\n不多说了，大家搞下来自己玩玩挺有意思的，Mac linux系统的就算了~~绕道~\n***\n下载地址[https://github.com/cbucher/console/wiki/Downloads](https://github.com/cbucher/console/wiki/Downloads)\n***\n想更详细的了解consoleZ可以去这位朋友瞧瞧~~[http://fy98.com/2014/10/18/the-best-ternimal-in-windows/](http://fy98.com/2014/10/18/the-best-ternimal-in-windows/)\n","slug":"consoleZ","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wq001mr2uf1tj1dg8w","content":"<p>场景：之前开发用git bash复制粘贴有点麻烦，后面就想着有没有个性化自定义功能强一点的命令行工具，后面各种搜索<del>发现了一款比较好玩的</del>暂且记下。</p>\n<span id=\"more\"></span>\n<blockquote>\n<p>据江湖传言，ConsoleZ的前身是Console2，由于长期不更新，一牛人在此基础上重新开发了ConsoleZ</p>\n</blockquote>\n<p>这句话我也是从别的博主那里听来的，为啥要用这个consoleZ呢?其实我个人觉得他个性化的东西比较多吧，<br>我最喜欢的是自定义的hotkeys，鼠标键盘快捷键都能自定义，想咋滴就咋滴，只要你快捷键不冲突，还有一点<br>就是他的界面也是能自定义的，背景还能放图片，你怕不怕，只是我目前还没找到一张能让我不眼花缭乱，<br>还能看清代码的的背景图，背景图这个还是有点。。。无语&#x3D;。&#x3D;不过搭配好了也是挺爽的哈~~<br>不多说了，大家搞下来自己玩玩挺有意思的，Mac linux系统的就算了~~绕道~</p>\n<hr>\n<p>下载地址<a href=\"https://github.com/cbucher/console/wiki/Downloads\">https://github.com/cbucher/console/wiki/Downloads</a></p>\n<hr>\n<p>想更详细的了解consoleZ可以去这位朋友瞧瞧~~<a href=\"http://fy98.com/2014/10/18/the-best-ternimal-in-windows/\">http://fy98.com/2014/10/18/the-best-ternimal-in-windows/</a></p>\n","site":{"data":{}},"length":505,"excerpt":"<p>场景：之前开发用git bash复制粘贴有点麻烦，后面就想着有没有个性化自定义功能强一点的命令行工具，后面各种搜索<del>发现了一款比较好玩的</del>暂且记下。</p>","more":"<blockquote>\n<p>据江湖传言，ConsoleZ的前身是Console2，由于长期不更新，一牛人在此基础上重新开发了ConsoleZ</p>\n</blockquote>\n<p>这句话我也是从别的博主那里听来的，为啥要用这个consoleZ呢?其实我个人觉得他个性化的东西比较多吧，<br>我最喜欢的是自定义的hotkeys，鼠标键盘快捷键都能自定义，想咋滴就咋滴，只要你快捷键不冲突，还有一点<br>就是他的界面也是能自定义的，背景还能放图片，你怕不怕，只是我目前还没找到一张能让我不眼花缭乱，<br>还能看清代码的的背景图，背景图这个还是有点。。。无语&#x3D;。&#x3D;不过搭配好了也是挺爽的哈~~<br>不多说了，大家搞下来自己玩玩挺有意思的，Mac linux系统的就算了~~绕道~</p>\n<hr>\n<p>下载地址<a href=\"https://github.com/cbucher/console/wiki/Downloads\">https://github.com/cbucher/console/wiki/Downloads</a></p>\n<hr>\n<p>想更详细的了解consoleZ可以去这位朋友瞧瞧~~<a href=\"http://fy98.com/2014/10/18/the-best-ternimal-in-windows/\">http://fy98.com/2014/10/18/the-best-ternimal-in-windows/</a></p>"},{"title":"OS中的进程与线程","date":"2020-08-12T16:00:00.000Z","description":"OS中进程与线程的区别","_content":"### OS中关于进程与线程的了解\n今天学习node时，有看到说node是单线程的，然后疑惑就来了，虽然大致知道什么叫单线程，多线程，可对于线程和进程这之间区别理解还是模模糊糊的，故翻出以前的课本重新复习一番，顺便记录下。\n<!--more-->\n>## 进程定义\n进程：为了程序能并发执行，并且可以对并发执行的程序加以控制和描述，OS引入“进程”概念，进程由此而来，进程其实是进程实体，进程实体由进程控制块(PCB)，程序段，相关的数据段构成。\n进程的五种基本状态：创建、就绪、执行、阻塞、终止。\n```sequence\n创建->就绪: 许可\n阻塞->就绪: I/O完成\n就绪->执行: 进程调度\n执行-->>就绪: 时间片完\n执行->阻塞: I/O请求\n执行->终止: 释放\n```\n***\n>## 线程定义\n线程: 如果说，在OS中进入进程的目的是为了使多个程序能并发执行，以提高资源利用率和系统吞吐量，那么，在OS中再引入线程，则是为了减少程序在并发执行时所付出的时空开销，使OS具有更好的并发性。\n在20世纪60-80年代，在多道程序OS中一直是以进程作为能拥有资源和独立调度(运行)的基本单位的，直到80年代后，人们提出了比进程更小的基本单位-线程。\n\n***\n>## OS中线程与进程的比较\n由于线程具有许多传统进程的特征，所以又称之为轻型进程，以下中调度性，并发性，系统开销和拥有资源方面对线程和进程进行比较。\n* 调度性、系统开销：传统OS进程是作为独立调度和分派的基本单位，每次调度时，需要切换上下问，开销较大，而引入线程的OS中，线程作为基本单位，切换时基本只需要保存和设置少量寄存器的内容，代价低于进程，系统开销低。\n* 并发性：引入线程的OS中，不仅进程之间可以并发，而且在一个进程中的多个线程之间亦可并发，甚至还允许一个进程内的所有线程都能并发，这使得OS具有更好的并发性。\n* 拥有资源：线程本身并不拥有系统资源，而进程可以拥有资源并作为系统中拥有资源的一个基本单位。\n* 独立性：在同一进程中单不同线程之间的独立性要比不同进程之间的独立性低很多。这是为了防止进程之间彼此干扰和破坏。\n\n**我的理解：如果引入了线程的OS中，一个进程中或许有多个线程，而且都能并发。**\n**两者在不同OS下都是作为OS独立调度和分派的基本单位。**\n","source":"_posts/OS-进程与线程.md","raw":"---\ntitle: OS中的进程与线程\ndate: 2020-08-13\ncategories: OS\ntags: [OS]\ndescription: OS中进程与线程的区别\n---\n### OS中关于进程与线程的了解\n今天学习node时，有看到说node是单线程的，然后疑惑就来了，虽然大致知道什么叫单线程，多线程，可对于线程和进程这之间区别理解还是模模糊糊的，故翻出以前的课本重新复习一番，顺便记录下。\n<!--more-->\n>## 进程定义\n进程：为了程序能并发执行，并且可以对并发执行的程序加以控制和描述，OS引入“进程”概念，进程由此而来，进程其实是进程实体，进程实体由进程控制块(PCB)，程序段，相关的数据段构成。\n进程的五种基本状态：创建、就绪、执行、阻塞、终止。\n```sequence\n创建->就绪: 许可\n阻塞->就绪: I/O完成\n就绪->执行: 进程调度\n执行-->>就绪: 时间片完\n执行->阻塞: I/O请求\n执行->终止: 释放\n```\n***\n>## 线程定义\n线程: 如果说，在OS中进入进程的目的是为了使多个程序能并发执行，以提高资源利用率和系统吞吐量，那么，在OS中再引入线程，则是为了减少程序在并发执行时所付出的时空开销，使OS具有更好的并发性。\n在20世纪60-80年代，在多道程序OS中一直是以进程作为能拥有资源和独立调度(运行)的基本单位的，直到80年代后，人们提出了比进程更小的基本单位-线程。\n\n***\n>## OS中线程与进程的比较\n由于线程具有许多传统进程的特征，所以又称之为轻型进程，以下中调度性，并发性，系统开销和拥有资源方面对线程和进程进行比较。\n* 调度性、系统开销：传统OS进程是作为独立调度和分派的基本单位，每次调度时，需要切换上下问，开销较大，而引入线程的OS中，线程作为基本单位，切换时基本只需要保存和设置少量寄存器的内容，代价低于进程，系统开销低。\n* 并发性：引入线程的OS中，不仅进程之间可以并发，而且在一个进程中的多个线程之间亦可并发，甚至还允许一个进程内的所有线程都能并发，这使得OS具有更好的并发性。\n* 拥有资源：线程本身并不拥有系统资源，而进程可以拥有资源并作为系统中拥有资源的一个基本单位。\n* 独立性：在同一进程中单不同线程之间的独立性要比不同进程之间的独立性低很多。这是为了防止进程之间彼此干扰和破坏。\n\n**我的理解：如果引入了线程的OS中，一个进程中或许有多个线程，而且都能并发。**\n**两者在不同OS下都是作为OS独立调度和分派的基本单位。**\n","slug":"OS-进程与线程","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wq001pr2uf3lkg12dg","content":"<h3 id=\"OS中关于进程与线程的了解\"><a href=\"#OS中关于进程与线程的了解\" class=\"headerlink\" title=\"OS中关于进程与线程的了解\"></a>OS中关于进程与线程的了解</h3><p>今天学习node时，有看到说node是单线程的，然后疑惑就来了，虽然大致知道什么叫单线程，多线程，可对于线程和进程这之间区别理解还是模模糊糊的，故翻出以前的课本重新复习一番，顺便记录下。</p>\n<span id=\"more\"></span>\n<blockquote>\n<h2 id=\"进程定义\"><a href=\"#进程定义\" class=\"headerlink\" title=\"进程定义\"></a>进程定义</h2><p>进程：为了程序能并发执行，并且可以对并发执行的程序加以控制和描述，OS引入“进程”概念，进程由此而来，进程其实是进程实体，进程实体由进程控制块(PCB)，程序段，相关的数据段构成。<br>进程的五种基本状态：创建、就绪、执行、阻塞、终止。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建-&gt;就绪: 许可</span><br><span class=\"line\">阻塞-&gt;就绪: I/O完成</span><br><span class=\"line\">就绪-&gt;执行: 进程调度</span><br><span class=\"line\">执行--&gt;&gt;就绪: 时间片完</span><br><span class=\"line\">执行-&gt;阻塞: I/O请求</span><br><span class=\"line\">执行-&gt;终止: 释放</span><br></pre></td></tr></table></figure>\n<hr>\n<blockquote>\n<h2 id=\"线程定义\"><a href=\"#线程定义\" class=\"headerlink\" title=\"线程定义\"></a>线程定义</h2><p>线程: 如果说，在OS中进入进程的目的是为了使多个程序能并发执行，以提高资源利用率和系统吞吐量，那么，在OS中再引入线程，则是为了减少程序在并发执行时所付出的时空开销，使OS具有更好的并发性。<br>在20世纪60-80年代，在多道程序OS中一直是以进程作为能拥有资源和独立调度(运行)的基本单位的，直到80年代后，人们提出了比进程更小的基本单位-线程。</p>\n</blockquote>\n<hr>\n<blockquote>\n<h2 id=\"OS中线程与进程的比较\"><a href=\"#OS中线程与进程的比较\" class=\"headerlink\" title=\"OS中线程与进程的比较\"></a>OS中线程与进程的比较</h2><p>由于线程具有许多传统进程的特征，所以又称之为轻型进程，以下中调度性，并发性，系统开销和拥有资源方面对线程和进程进行比较。</p>\n</blockquote>\n<ul>\n<li>调度性、系统开销：传统OS进程是作为独立调度和分派的基本单位，每次调度时，需要切换上下问，开销较大，而引入线程的OS中，线程作为基本单位，切换时基本只需要保存和设置少量寄存器的内容，代价低于进程，系统开销低。</li>\n<li>并发性：引入线程的OS中，不仅进程之间可以并发，而且在一个进程中的多个线程之间亦可并发，甚至还允许一个进程内的所有线程都能并发，这使得OS具有更好的并发性。</li>\n<li>拥有资源：线程本身并不拥有系统资源，而进程可以拥有资源并作为系统中拥有资源的一个基本单位。</li>\n<li>独立性：在同一进程中单不同线程之间的独立性要比不同进程之间的独立性低很多。这是为了防止进程之间彼此干扰和破坏。</li>\n</ul>\n<p><strong>我的理解：如果引入了线程的OS中，一个进程中或许有多个线程，而且都能并发。</strong><br><strong>两者在不同OS下都是作为OS独立调度和分派的基本单位。</strong></p>\n","site":{"data":{}},"length":911,"excerpt":"<h3 id=\"OS中关于进程与线程的了解\"><a href=\"#OS中关于进程与线程的了解\" class=\"headerlink\" title=\"OS中关于进程与线程的了解\"></a>OS中关于进程与线程的了解</h3><p>今天学习node时，有看到说node是单线程的，然后疑惑就来了，虽然大致知道什么叫单线程，多线程，可对于线程和进程这之间区别理解还是模模糊糊的，故翻出以前的课本重新复习一番，顺便记录下。</p>","more":"<blockquote>\n<h2 id=\"进程定义\"><a href=\"#进程定义\" class=\"headerlink\" title=\"进程定义\"></a>进程定义</h2><p>进程：为了程序能并发执行，并且可以对并发执行的程序加以控制和描述，OS引入“进程”概念，进程由此而来，进程其实是进程实体，进程实体由进程控制块(PCB)，程序段，相关的数据段构成。<br>进程的五种基本状态：创建、就绪、执行、阻塞、终止。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建-&gt;就绪: 许可</span><br><span class=\"line\">阻塞-&gt;就绪: I/O完成</span><br><span class=\"line\">就绪-&gt;执行: 进程调度</span><br><span class=\"line\">执行--&gt;&gt;就绪: 时间片完</span><br><span class=\"line\">执行-&gt;阻塞: I/O请求</span><br><span class=\"line\">执行-&gt;终止: 释放</span><br></pre></td></tr></table></figure>\n<hr>\n<blockquote>\n<h2 id=\"线程定义\"><a href=\"#线程定义\" class=\"headerlink\" title=\"线程定义\"></a>线程定义</h2><p>线程: 如果说，在OS中进入进程的目的是为了使多个程序能并发执行，以提高资源利用率和系统吞吐量，那么，在OS中再引入线程，则是为了减少程序在并发执行时所付出的时空开销，使OS具有更好的并发性。<br>在20世纪60-80年代，在多道程序OS中一直是以进程作为能拥有资源和独立调度(运行)的基本单位的，直到80年代后，人们提出了比进程更小的基本单位-线程。</p>\n</blockquote>\n<hr>\n<blockquote>\n<h2 id=\"OS中线程与进程的比较\"><a href=\"#OS中线程与进程的比较\" class=\"headerlink\" title=\"OS中线程与进程的比较\"></a>OS中线程与进程的比较</h2><p>由于线程具有许多传统进程的特征，所以又称之为轻型进程，以下中调度性，并发性，系统开销和拥有资源方面对线程和进程进行比较。</p>\n</blockquote>\n<ul>\n<li>调度性、系统开销：传统OS进程是作为独立调度和分派的基本单位，每次调度时，需要切换上下问，开销较大，而引入线程的OS中，线程作为基本单位，切换时基本只需要保存和设置少量寄存器的内容，代价低于进程，系统开销低。</li>\n<li>并发性：引入线程的OS中，不仅进程之间可以并发，而且在一个进程中的多个线程之间亦可并发，甚至还允许一个进程内的所有线程都能并发，这使得OS具有更好的并发性。</li>\n<li>拥有资源：线程本身并不拥有系统资源，而进程可以拥有资源并作为系统中拥有资源的一个基本单位。</li>\n<li>独立性：在同一进程中单不同线程之间的独立性要比不同进程之间的独立性低很多。这是为了防止进程之间彼此干扰和破坏。</li>\n</ul>\n<p><strong>我的理解：如果引入了线程的OS中，一个进程中或许有多个线程，而且都能并发。</strong><br><strong>两者在不同OS下都是作为OS独立调度和分派的基本单位。</strong></p>"},{"title":"ife学习记录 - git文档阅读（git分支）","date":"2018-04-30T16:00:00.000Z","description":"git 文档还是需要读一读的","_content":"# git文档阅读\n\n## Basic - 分支\n分支操作应该是git-flow中最为常见的操作了，也是git作为分布式版本控制系统的关键所在。\n<!--more-->\n一天工作下来，切分支合分支，弄个几十次很正常吧，虽然这些操作都会，重新看看文档也没啥不好的。[廖雪峰 - 分支管理](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013743862006503a1c5bf5a783434581661a3cc2084efa000)\n- ### 分支操作相关命令\n\tgit鼓励大量使用分支：\n\n\t查看分支：git branch\n\n\t创建分支：git branch <name>\n\n\t切换分支：git checkout <name>\n\n\t创建+切换分支：git checkout -b <name>\n\n\t合并某分支到当前分支：git merge <name>\n\n\t删除分支：git branch -d <name>\n- ### 解决冲突\n\t当两个分支修改了同一个文件的相同部分，如果进行分支合并，git就会报出冲突，需要你和另一个分支的开发者来共同决定需要哪个分支上的内容。  \n\t冲突文件中一般会看到类似下面这样的：  \n\t```bash\n\tGit is a distributed version control system.\n\tGit is free software distributed under the GPL.\n\tGit has a mutable index called stage.\n\tGit tracks changes of files.\n\t<<<<<<< HEAD\n\tCreating a new branch is quick & simple.\n\t=======\n\tCreating a new branch is quick AND simple.\n\t>>>>>>> test1\t\n\t```\n\tGit用<<<<<<<，=======，>>>>>>>标记出不同分支的内容。\n\t当你解决完冲突后，需要重新将文件添加进暂存区，也就是进行add、commit操作。\n\t<b>tips:</b> 用git log --graph命令可以看到分支合并图。\n- ### 分支策略\n\t在实际开发中，我们应该按照几个基本原则进行分支管理：\n\t首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；\n\t那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；\n\t你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。所以，团队合作的分支看起来就像这样：\n\t<img src=\"https://cdn.liaoxuefeng.com/cdn/files/attachments/001384909239390d355eb07d9d64305b6322aaf4edac1e3000/0\">\n\tGit分支十分强大，在团队开发中应该充分应用。\n\n\t---\n\t# 相关文章\n\t- [git documention](https://git-scm.com/docs)\n\t- [廖雪峰git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\t- [菜鸟教程](http://www.runoob.com/git/git-tutorial.html)","source":"_posts/ife学习记录 - git文档阅读（三）.md","raw":"---\ntitle: ife学习记录 - git文档阅读（git分支）\ncategories: git\ntags: [git]\ndate: 2018-05-01\ndescription: git 文档还是需要读一读的\n---\n# git文档阅读\n\n## Basic - 分支\n分支操作应该是git-flow中最为常见的操作了，也是git作为分布式版本控制系统的关键所在。\n<!--more-->\n一天工作下来，切分支合分支，弄个几十次很正常吧，虽然这些操作都会，重新看看文档也没啥不好的。[廖雪峰 - 分支管理](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013743862006503a1c5bf5a783434581661a3cc2084efa000)\n- ### 分支操作相关命令\n\tgit鼓励大量使用分支：\n\n\t查看分支：git branch\n\n\t创建分支：git branch <name>\n\n\t切换分支：git checkout <name>\n\n\t创建+切换分支：git checkout -b <name>\n\n\t合并某分支到当前分支：git merge <name>\n\n\t删除分支：git branch -d <name>\n- ### 解决冲突\n\t当两个分支修改了同一个文件的相同部分，如果进行分支合并，git就会报出冲突，需要你和另一个分支的开发者来共同决定需要哪个分支上的内容。  \n\t冲突文件中一般会看到类似下面这样的：  \n\t```bash\n\tGit is a distributed version control system.\n\tGit is free software distributed under the GPL.\n\tGit has a mutable index called stage.\n\tGit tracks changes of files.\n\t<<<<<<< HEAD\n\tCreating a new branch is quick & simple.\n\t=======\n\tCreating a new branch is quick AND simple.\n\t>>>>>>> test1\t\n\t```\n\tGit用<<<<<<<，=======，>>>>>>>标记出不同分支的内容。\n\t当你解决完冲突后，需要重新将文件添加进暂存区，也就是进行add、commit操作。\n\t<b>tips:</b> 用git log --graph命令可以看到分支合并图。\n- ### 分支策略\n\t在实际开发中，我们应该按照几个基本原则进行分支管理：\n\t首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；\n\t那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；\n\t你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。所以，团队合作的分支看起来就像这样：\n\t<img src=\"https://cdn.liaoxuefeng.com/cdn/files/attachments/001384909239390d355eb07d9d64305b6322aaf4edac1e3000/0\">\n\tGit分支十分强大，在团队开发中应该充分应用。\n\n\t---\n\t# 相关文章\n\t- [git documention](https://git-scm.com/docs)\n\t- [廖雪峰git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\t- [菜鸟教程](http://www.runoob.com/git/git-tutorial.html)","slug":"ife学习记录 - git文档阅读（三）","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wr001tr2uf8jznev3t","content":"<h1 id=\"git文档阅读\"><a href=\"#git文档阅读\" class=\"headerlink\" title=\"git文档阅读\"></a>git文档阅读</h1><h2 id=\"Basic-分支\"><a href=\"#Basic-分支\" class=\"headerlink\" title=\"Basic - 分支\"></a>Basic - 分支</h2><p>分支操作应该是git-flow中最为常见的操作了，也是git作为分布式版本控制系统的关键所在。</p>\n<span id=\"more\"></span>\n<p>一天工作下来，切分支合分支，弄个几十次很正常吧，虽然这些操作都会，重新看看文档也没啥不好的。<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013743862006503a1c5bf5a783434581661a3cc2084efa000\">廖雪峰 - 分支管理</a></p>\n<ul>\n<li><h3 id=\"分支操作相关命令\"><a href=\"#分支操作相关命令\" class=\"headerlink\" title=\"分支操作相关命令\"></a>分支操作相关命令</h3><p>  git鼓励大量使用分支：</p>\n<p>  查看分支：git branch</p>\n<p>  创建分支：git branch <name></p>\n<p>  切换分支：git checkout <name></p>\n<p>  创建+切换分支：git checkout -b <name></p>\n<p>  合并某分支到当前分支：git merge <name></p>\n<p>  删除分支：git branch -d <name></p>\n</li>\n<li><h3 id=\"解决冲突\"><a href=\"#解决冲突\" class=\"headerlink\" title=\"解决冲突\"></a>解决冲突</h3><p>  当两个分支修改了同一个文件的相同部分，如果进行分支合并，git就会报出冲突，需要你和另一个分支的开发者来共同决定需要哪个分支上的内容。<br>  冲突文件中一般会看到类似下面这样的：  </p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Git is a distributed version control system.</span><br><span class=\"line\">Git is free software distributed under the GPL.</span><br><span class=\"line\">Git has a mutable index called stage.</span><br><span class=\"line\">Git tracks changes of files.</span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; <span class=\"string\">HEAD</span></span><br><span class=\"line\"><span class=\"string\">Creating a new branch is quick &amp; simple.</span></span><br><span class=\"line\"><span class=\"string\">=======</span></span><br><span class=\"line\"><span class=\"string\">Creating a new branch is quick AND simple.</span></span><br><span class=\"line\"><span class=\"string\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; test1\t</span></span><br></pre></td></tr></table></figure>\n<p>  Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容。<br>  当你解决完冲突后，需要重新将文件添加进暂存区，也就是进行add、commit操作。<br>  <b>tips:</b> 用git log –graph命令可以看到分支合并图。</p>\n</li>\n<li><h3 id=\"分支策略\"><a href=\"#分支策略\" class=\"headerlink\" title=\"分支策略\"></a>分支策略</h3><p>  在实际开发中，我们应该按照几个基本原则进行分支管理：<br>  首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；<br>  那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；<br>  你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。所以，团队合作的分支看起来就像这样：</p>\n  <img src=\"https://cdn.liaoxuefeng.com/cdn/files/attachments/001384909239390d355eb07d9d64305b6322aaf4edac1e3000/0\">\n  Git分支十分强大，在团队开发中应该充分应用。\n\n<hr>\n<h1 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h1><ul>\n<li><a href=\"https://git-scm.com/docs\">git documention</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰git教程</a></li>\n<li><a href=\"http://www.runoob.com/git/git-tutorial.html\">菜鸟教程</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":1077,"excerpt":"<h1 id=\"git文档阅读\"><a href=\"#git文档阅读\" class=\"headerlink\" title=\"git文档阅读\"></a>git文档阅读</h1><h2 id=\"Basic-分支\"><a href=\"#Basic-分支\" class=\"headerlink\" title=\"Basic - 分支\"></a>Basic - 分支</h2><p>分支操作应该是git-flow中最为常见的操作了，也是git作为分布式版本控制系统的关键所在。</p>","more":"<p>一天工作下来，切分支合分支，弄个几十次很正常吧，虽然这些操作都会，重新看看文档也没啥不好的。<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013743862006503a1c5bf5a783434581661a3cc2084efa000\">廖雪峰 - 分支管理</a></p>\n<ul>\n<li><h3 id=\"分支操作相关命令\"><a href=\"#分支操作相关命令\" class=\"headerlink\" title=\"分支操作相关命令\"></a>分支操作相关命令</h3><p>  git鼓励大量使用分支：</p>\n<p>  查看分支：git branch</p>\n<p>  创建分支：git branch <name></p>\n<p>  切换分支：git checkout <name></p>\n<p>  创建+切换分支：git checkout -b <name></p>\n<p>  合并某分支到当前分支：git merge <name></p>\n<p>  删除分支：git branch -d <name></p>\n</li>\n<li><h3 id=\"解决冲突\"><a href=\"#解决冲突\" class=\"headerlink\" title=\"解决冲突\"></a>解决冲突</h3><p>  当两个分支修改了同一个文件的相同部分，如果进行分支合并，git就会报出冲突，需要你和另一个分支的开发者来共同决定需要哪个分支上的内容。<br>  冲突文件中一般会看到类似下面这样的：  </p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Git is a distributed version control system.</span><br><span class=\"line\">Git is free software distributed under the GPL.</span><br><span class=\"line\">Git has a mutable index called stage.</span><br><span class=\"line\">Git tracks changes of files.</span><br><span class=\"line\">&lt;&lt;&lt;&lt;&lt;&lt;&lt; <span class=\"string\">HEAD</span></span><br><span class=\"line\"><span class=\"string\">Creating a new branch is quick &amp; simple.</span></span><br><span class=\"line\"><span class=\"string\">=======</span></span><br><span class=\"line\"><span class=\"string\">Creating a new branch is quick AND simple.</span></span><br><span class=\"line\"><span class=\"string\">&gt;&gt;&gt;&gt;&gt;&gt;&gt; test1\t</span></span><br></pre></td></tr></table></figure>\n<p>  Git用&lt;&lt;&lt;&lt;&lt;&lt;&lt;，&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;，&gt;&gt;&gt;&gt;&gt;&gt;&gt;标记出不同分支的内容。<br>  当你解决完冲突后，需要重新将文件添加进暂存区，也就是进行add、commit操作。<br>  <b>tips:</b> 用git log –graph命令可以看到分支合并图。</p>\n</li>\n<li><h3 id=\"分支策略\"><a href=\"#分支策略\" class=\"headerlink\" title=\"分支策略\"></a>分支策略</h3><p>  在实际开发中，我们应该按照几个基本原则进行分支管理：<br>  首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；<br>  那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；<br>  你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。所以，团队合作的分支看起来就像这样：</p>\n  <img src=\"https://cdn.liaoxuefeng.com/cdn/files/attachments/001384909239390d355eb07d9d64305b6322aaf4edac1e3000/0\">\n  Git分支十分强大，在团队开发中应该充分应用。\n\n<hr>\n<h1 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h1><ul>\n<li><a href=\"https://git-scm.com/docs\">git documention</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰git教程</a></li>\n<li><a href=\"http://www.runoob.com/git/git-tutorial.html\">菜鸟教程</a></li>\n</ul>\n</li>\n</ul>"},{"title":"ife学习记录 - git文档阅读（git配置）","date":"2018-04-30T16:00:00.000Z","description":"git 文档还是需要读一读的","_content":"# git文档阅读\n\n## Setup and Config - 安装与配置\n这里主要还是学习配置项，安装没啥好说的。。  \n<!--more-->\n看下主要的配置项  \n- ### 用户信息\n\t配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次 git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：\n\t```bash\n\t$ git config --global user.name \"tanelmer\"\n\t$ git config --global user.email 244lixinyi@163.com\n\t```\n- ### 文本编辑器\n\t设置默认使用的文本编辑器，git 需要你输入一些额外消息的时候，会自动调用一个外部文本编辑器给你用。默认会使用操作系统指定的默认编辑器，一般可能会是 Vi 或者 Vim。如果你有其他偏好，比如 Emacs 的话，可以重新设置：\n\t```bash\n\t$ git config --global core.editor emacs\n\t```\n- ### 差异解决工具\n\t在解决合并冲突时使用哪种差异分析工具。比如要改用 vimdiff 的话：\n\t```bash\n\t$ git config --global merge.tool vimdiff\n\t```\n- ### 查看配置信息\n\t查看已有配置信息列表 <code>$ git config --list</code>  \n\t```bash\n\t$ git config --list\n\tuser.name=Scott Chacon\n\tuser.email=schacon@gmail.com\n\tcolor.status=auto\n\tcolor.branch=auto\n\tcolor.interactive=auto\n\tcolor.diff=auto\n\t...\n\t```\n\t有时候会看到重复的变量名，那就说明它们来自不同的配置文件（比如 /etc/gitconfig 和 ~/.gitconfig），不过最终 git 实际采用的是最后一个。  \n\t也可以直接查阅某个环境变量的设定，只要把特定的名字跟在后面即可，像这样：\n\t```bash\n\t$ git config user.name\n\ttanelmer\n\t```\n\n\t---\n\t# 相关文章\n\t- [git documention](https://git-scm.com/docs)\n\t- [廖雪峰git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\t- [菜鸟教程](http://www.runoob.com/git/git-tutorial.html)","source":"_posts/ife学习记录 - git文档阅读（一）.md","raw":"---\ntitle: ife学习记录 - git文档阅读（git配置）\ncategories: git\ntags: [git]\ndate: 2018-05-01\ndescription: git 文档还是需要读一读的\n---\n# git文档阅读\n\n## Setup and Config - 安装与配置\n这里主要还是学习配置项，安装没啥好说的。。  \n<!--more-->\n看下主要的配置项  \n- ### 用户信息\n\t配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次 git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：\n\t```bash\n\t$ git config --global user.name \"tanelmer\"\n\t$ git config --global user.email 244lixinyi@163.com\n\t```\n- ### 文本编辑器\n\t设置默认使用的文本编辑器，git 需要你输入一些额外消息的时候，会自动调用一个外部文本编辑器给你用。默认会使用操作系统指定的默认编辑器，一般可能会是 Vi 或者 Vim。如果你有其他偏好，比如 Emacs 的话，可以重新设置：\n\t```bash\n\t$ git config --global core.editor emacs\n\t```\n- ### 差异解决工具\n\t在解决合并冲突时使用哪种差异分析工具。比如要改用 vimdiff 的话：\n\t```bash\n\t$ git config --global merge.tool vimdiff\n\t```\n- ### 查看配置信息\n\t查看已有配置信息列表 <code>$ git config --list</code>  \n\t```bash\n\t$ git config --list\n\tuser.name=Scott Chacon\n\tuser.email=schacon@gmail.com\n\tcolor.status=auto\n\tcolor.branch=auto\n\tcolor.interactive=auto\n\tcolor.diff=auto\n\t...\n\t```\n\t有时候会看到重复的变量名，那就说明它们来自不同的配置文件（比如 /etc/gitconfig 和 ~/.gitconfig），不过最终 git 实际采用的是最后一个。  \n\t也可以直接查阅某个环境变量的设定，只要把特定的名字跟在后面即可，像这样：\n\t```bash\n\t$ git config user.name\n\ttanelmer\n\t```\n\n\t---\n\t# 相关文章\n\t- [git documention](https://git-scm.com/docs)\n\t- [廖雪峰git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\t- [菜鸟教程](http://www.runoob.com/git/git-tutorial.html)","slug":"ife学习记录 - git文档阅读（一）","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wr001xr2uf6ehb4abj","content":"<h1 id=\"git文档阅读\"><a href=\"#git文档阅读\" class=\"headerlink\" title=\"git文档阅读\"></a>git文档阅读</h1><h2 id=\"Setup-and-Config-安装与配置\"><a href=\"#Setup-and-Config-安装与配置\" class=\"headerlink\" title=\"Setup and Config - 安装与配置\"></a>Setup and Config - 安装与配置</h2><p>这里主要还是学习配置项，安装没啥好说的。。  </p>\n<span id=\"more\"></span>\n<p>看下主要的配置项  </p>\n<ul>\n<li><h3 id=\"用户信息\"><a href=\"#用户信息\" class=\"headerlink\" title=\"用户信息\"></a>用户信息</h3>  配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次 git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name <span class=\"string\">&quot;tanelmer&quot;</span></span><br><span class=\"line\">$ git config --global user.email 244lixinyi@163.com</span><br></pre></td></tr></table></figure></li>\n<li><h3 id=\"文本编辑器\"><a href=\"#文本编辑器\" class=\"headerlink\" title=\"文本编辑器\"></a>文本编辑器</h3>  设置默认使用的文本编辑器，git 需要你输入一些额外消息的时候，会自动调用一个外部文本编辑器给你用。默认会使用操作系统指定的默认编辑器，一般可能会是 Vi 或者 Vim。如果你有其他偏好，比如 Emacs 的话，可以重新设置：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global core.editor emacs</span><br></pre></td></tr></table></figure></li>\n<li><h3 id=\"差异解决工具\"><a href=\"#差异解决工具\" class=\"headerlink\" title=\"差异解决工具\"></a>差异解决工具</h3>  在解决合并冲突时使用哪种差异分析工具。比如要改用 vimdiff 的话：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global merge.tool vimdiff</span><br></pre></td></tr></table></figure></li>\n<li><h3 id=\"查看配置信息\"><a href=\"#查看配置信息\" class=\"headerlink\" title=\"查看配置信息\"></a>查看配置信息</h3>  查看已有配置信息列表 <code>$ git config --list</code>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --list</span><br><span class=\"line\">user.name=Scott Chacon</span><br><span class=\"line\">user.email=schacon@gmail.com</span><br><span class=\"line\">color.status=auto</span><br><span class=\"line\">color.branch=auto</span><br><span class=\"line\">color.interactive=auto</span><br><span class=\"line\">color.diff=auto</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n  有时候会看到重复的变量名，那就说明它们来自不同的配置文件（比如 &#x2F;etc&#x2F;gitconfig 和 ~&#x2F;.gitconfig），不过最终 git 实际采用的是最后一个。<br>  也可以直接查阅某个环境变量的设定，只要把特定的名字跟在后面即可，像这样：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config user.name</span><br><span class=\"line\">tanelmer</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h1><ul>\n<li><a href=\"https://git-scm.com/docs\">git documention</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰git教程</a></li>\n<li><a href=\"http://www.runoob.com/git/git-tutorial.html\">菜鸟教程</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":822,"excerpt":"<h1 id=\"git文档阅读\"><a href=\"#git文档阅读\" class=\"headerlink\" title=\"git文档阅读\"></a>git文档阅读</h1><h2 id=\"Setup-and-Config-安装与配置\"><a href=\"#Setup-and-Config-安装与配置\" class=\"headerlink\" title=\"Setup and Config - 安装与配置\"></a>Setup and Config - 安装与配置</h2><p>这里主要还是学习配置项，安装没啥好说的。。  </p>","more":"<p>看下主要的配置项  </p>\n<ul>\n<li><h3 id=\"用户信息\"><a href=\"#用户信息\" class=\"headerlink\" title=\"用户信息\"></a>用户信息</h3>  配置的是你个人的用户名称和电子邮件地址。这两条配置很重要，每次 git 提交时都会引用这两条信息，说明是谁提交了更新，所以会随更新内容一起被永久纳入历史记录：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name <span class=\"string\">&quot;tanelmer&quot;</span></span><br><span class=\"line\">$ git config --global user.email 244lixinyi@163.com</span><br></pre></td></tr></table></figure></li>\n<li><h3 id=\"文本编辑器\"><a href=\"#文本编辑器\" class=\"headerlink\" title=\"文本编辑器\"></a>文本编辑器</h3>  设置默认使用的文本编辑器，git 需要你输入一些额外消息的时候，会自动调用一个外部文本编辑器给你用。默认会使用操作系统指定的默认编辑器，一般可能会是 Vi 或者 Vim。如果你有其他偏好，比如 Emacs 的话，可以重新设置：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global core.editor emacs</span><br></pre></td></tr></table></figure></li>\n<li><h3 id=\"差异解决工具\"><a href=\"#差异解决工具\" class=\"headerlink\" title=\"差异解决工具\"></a>差异解决工具</h3>  在解决合并冲突时使用哪种差异分析工具。比如要改用 vimdiff 的话：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global merge.tool vimdiff</span><br></pre></td></tr></table></figure></li>\n<li><h3 id=\"查看配置信息\"><a href=\"#查看配置信息\" class=\"headerlink\" title=\"查看配置信息\"></a>查看配置信息</h3>  查看已有配置信息列表 <code>$ git config --list</code>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --list</span><br><span class=\"line\">user.name=Scott Chacon</span><br><span class=\"line\">user.email=schacon@gmail.com</span><br><span class=\"line\">color.status=auto</span><br><span class=\"line\">color.branch=auto</span><br><span class=\"line\">color.interactive=auto</span><br><span class=\"line\">color.diff=auto</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n  有时候会看到重复的变量名，那就说明它们来自不同的配置文件（比如 &#x2F;etc&#x2F;gitconfig 和 ~&#x2F;.gitconfig），不过最终 git 实际采用的是最后一个。<br>  也可以直接查阅某个环境变量的设定，只要把特定的名字跟在后面即可，像这样：  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config user.name</span><br><span class=\"line\">tanelmer</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h1 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h1><ul>\n<li><a href=\"https://git-scm.com/docs\">git documention</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰git教程</a></li>\n<li><a href=\"http://www.runoob.com/git/git-tutorial.html\">菜鸟教程</a></li>\n</ul>\n</li>\n</ul>"},{"title":"ife学习记录 - git文档阅读（git基础）","date":"2018-04-30T16:00:00.000Z","description":"git 文档还是需要读一读的","_content":"# git文档阅读\n\n## Basic - 基础\n突然发现阅读文档后，还是有很多命令工作中不怎么用呀。不说了，记录下基础常用的吧。。。  \n<!--more-->\n看下基础command，基本上你们都能用到。\n- ### 初始化新仓库\n\t要对现有的某个项目开始用 git 管理，只需到此项目所在的目录，执行：\n\t```bash\n\t$ git init\n\t```\n\t初始化后，在当前目录下会出现一个名为 .git 的目录，所有 git 需要的数据和资源都存放在这个目录中。\n- ### 从现有仓库克隆\n\t如果想对某个开源项目出一份力，可以先把该项目的 git 仓库复制一份出来，这就需要用到 <code>git clone </code>命令。如果你熟悉其他的 VCS 比如 Subversion，你可能已经注意到这里使用的是 clone 而不是 checkout。这是个非常重要的差别，git 收取的是项目历史的所有数据（每一个文件的每一个版本），服务器上有的数据克隆之后本地也都有了。实际上，即便服务器的磁盘发生故障，用任何一个克隆出来的客户端都可以重建服务器上的仓库，回到当初克隆时的状态（虽然可能会丢失某些服务器端的挂钩设置，但所有版本的数据仍旧还在）。\n\t克隆仓库的命令格式为 <code>git clone [url]</code>。比如，要克隆 Ruby 语言的 git 代码仓库 Grit，可以用下面的命令：：\n\t```bash\n\t$ git clone git://github.com/schacon/grit.git\n\t```\n\t<b>划重点：</b>这会在当前目录下创建一个名为grit的目录，其中包含一个 .git 的目录，用于保存下载下来的所有版本记录，然后从中取出最新版本的文件拷贝。如果进入这个新建的 grit 目录，你会看到项目中的所有文件已经在里边了，准备好后续的开发和使用。如果希望在克隆的时候，自己定义要新建的项目目录名称，可以在上面的命令末尾指定新的名字：\n\t```bash\n\t$ git clone git://github.com/schacon/grit.git mygrit\n\t```\n\t唯一的差别就是，现在新建的目录成了 mygrit，其他的都和上边的一样。\n- ### 提交更新到仓库\n\t要确定哪些文件当前处于什么状态，可以用 <code>git status </code>命令。如果在克隆仓库之后立即执行此命令，会看到类似这样的输出：\n\t```bash\n\t$ git status\n\tOn branch master\n\tnothing to commit, working directory clean\n\t```\n\t然后，在当前目录添加一个readme文件，保存后运行 git status之后会看到类似这样的：\n\t```bash\n\t$ git status\n\tOn branch master\n\tUntracked files:\n\t  (use \"git add <file>...\" to include in what will be committed)\n\n\t        readme\n\n\tnothing added to commit but untracked files present (use \"git add\" to track)\n\t```\n\treadme文件现在是untracked，我们要把它添加到暂存区，使用 <code>git add readme</code>：\n\t```bash\n\t$ git status\n\tOn branch master\n\tChanges to be committed:\n  \t(use \"git reset HEAD <file>...\" to unstage)\n\n        new file:   readme\n\t```\n\t现在的暂存区域已经准备妥当可以提交了。在此之前，请一定要确认还有什么修改过的或新建的文件还没有 git add 过，否则提交的时候不会记录这些还没暂存起来的变化。所以，每次准备提交前，先用 git status 看下，是不是都已暂存起来了，然后再运行提交命令 <code>git commit -m'new file readme'</code>:  \n\t```bash\n\t$ git commit -m \"new file readme\"\n\t[master 463dc4f] new file readme\n\t 2 files changed, 3 insertions(+)\n\t create mode 100644 readme\n\t```\n\n- ### 移除文件\n\t要从 git 中移除某个文件，就必须要从已跟踪文件清单中移除（确切地说，是从暂存区域移除），然后提交。可以用 <code>git rm </code>命令完成此项工作，并连带从工作目录中删除指定的文件，这样以后就不会出现在未跟踪文件清单中了。\n\n\t如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 “Changes not staged for commit” 部分（也就是未暂存清单）看到：  \n\t```bash\n\t$ rm readme\n\t$ git status\n\tOn branch master\n\tChanges not staged for commit:\n\t  (use \"git add/rm <file>...\" to update what will be committed)\n\t  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\t        deleted:    readme\n\n\tno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\t```\n\t然后再运行 git rm 记录此次移除文件的操作：\n\t```bash\n\t$ git rm readme\n\trm 'readme'\n\t$ git status\n\tOn branch master\n\tChanges to be committed:\n\t  (use \"git reset HEAD <file>...\" to unstage)\n\n\t        deleted:    readme\n\t```\n\t最后提交的时候，该文件就不再纳入版本管理了。如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f（译注：即 force 的首字母），以防误删除文件后丢失修改的内容。\n\t<b>划重点：</b>另外一种情况是，我们想把文件从 git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。换句话说，仅是从跟踪清单中删除。比如一些大型日志文件或者一堆 .a 编译文件，不小心纳入仓库后，要移除跟踪但不删除文件，以便稍后在 .gitignore 文件中补上，用 --cached 选项即可：\n\t```bash\n\t$ git rm --cached readme.txt\n\t```\n- ### 查看提交历史\n\t在提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，可以使用 git log 命令查看。\n\t```bash\n\t$ git log\n\tcommit ca82a6dff817ec66f44342007202690a93763949\n\tAuthor: tanelmer <244lixinyi@163.com>\n\tDate:   Mon Mar 17 21:52:11 2018 -0700\n\n    new file readme\n\t```\n\t<code>git log</code>还有很多参数，可以用help去查查，试试看看。  \n- ### 回退文件/版本\n\t任何时候，你都有可能需要撤消刚才所做的某些操作。\n\t<code>git reset</code>这个命令用法很多，详细使用建议查文档，我工作用有到的，一般是回退版本，回退文件概率很少。  \n\t<code>git reset -h | git reset --help</code>\n- ### 远程仓库\n\t远程仓库是指托管在网络上的项目仓库，可能会有好多个，其中有些你只能读，另外有些可以写。同他人协作开发某个项目时，需要管理这些远程仓库，以便推送或拉取数据，分享各自的工作进展。 管理远程仓库的工作，包括添加远程库，移除废弃的远程库，管理各式远程库分支，定义是否跟踪这些分支，等等。\n\t查看当前的远程库：  \n\t要查看当前配置有哪些远程仓库，可以用 <code>git remote</code> 命令，它会列出每个远程库的简短名字。在克隆完某个项目后，至少可以看到一个名为 origin 的远程库，git 默认使用这个名字来标识你所克隆的原始仓库。  \n\t添加远程库：  \n\t要添加一个新的远程仓库，可以指定一个简单的名字，以便将来引用，运行 <code>git remote add [shortname] [url]</code>：  \n\t从远程仓库抓取数据： \n\t<code>git fetch [remote-name]</code>  \n\t推送数据到远程仓库:  \n\t<code>git push origin master</code>  \n\t远程仓库的删除和重命名:  \n\t<code>git remote rename [old] [new]</code>  \n\t<code>git remote rm [name]</code>  \n- ### 打标签\n\t同大多数 VCS 一样，git 也可以对某一时间点上的版本打上标签。人们在发布某个软件版本（比如 v1.0 等等）的时候，经常这么做。本节我们一起来学习如何列出所有可用的标签，如何新建标签，以及各种不同类型标签之间的差别。\n\t新建标签：  \n\tgit 使用的标签有两种类型：轻量级的（lightweight）和含附注的（annotated）。轻量级标签就像是个不会变化的分支，实际上它就是个指向特定提交对象的引用。而含附注标签，实际上是存储在仓库中的一个独立对象，它有自身的校验和信息，包含着标签的名字，电子邮件地址和日期，以及标签说明，标签本身也允许使用 GNU Privacy Guard (GPG) 来签署或验证。一般我们都建议使用含附注型的标签，以便保留相关信息；当然，如果只是临时性加注标签，或者不需要旁注额外信息，用轻量级标签也没问题。\n\t含附注的标签：  \n\t创建一个含附注类型的标签非常简单，用 -a （译注：取 annotated 的首字母）指定标签名字即可：<code>git tag -a v1.4 -m 'my version 1.4'</code>\n\t而 -m 选项则指定了对应的标签说明，git 会将此说明一同保存在标签对象中。如果没有给出该选项，git 会启动文本编辑软件供你输入标签说明。\n\t轻量级标签:  \n\t轻量级标签实际上就是一个保存着对应提交对象的校验和信息的文件。要创建这样的标签，一个 -a，-s 或 -m 选项都不用，直接给出标签名字即可：<code>$ git tag [name]</code>\n- ### 技巧和窍门\n\t<b>git 命令自动补全</b>  \n\t使用TAB键获取所有匹配的可用命令建议。  \n\t<b>git 命令别名</b>  \n\tgit 并不会推断你输入的几个字符将会是哪条命令，不过如果想偷懒，少敲几个命令的字符，可以用 git config 为命令设置别名。来看看下面的例子：\n\t```bash\n\t$ git config --global alias.co checkout\n\t$ git config --global alias.br branch\n\t$ git config --global alias.ci commit\n\t$ git config --global alias.st status\n\t```\n\t现在，如果要输入 git commit 只需键入 git ci 即可。而随着 git 使用的深入，会有很多经常要用到的命令，遇到这种情况，不妨建个别名提高效率。\n\t\n\t---\n\t# 相关文章\n\t- [git documention](https://git-scm.com/docs)\n\t- [廖雪峰git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\t- [菜鸟教程](http://www.runoob.com/git/git-tutorial.html)","source":"_posts/ife学习记录 - git文档阅读（二）.md","raw":"---\ntitle: ife学习记录 - git文档阅读（git基础）\ncategories: git\ntags: [git]\ndate: 2018-05-01\ndescription: git 文档还是需要读一读的\n---\n# git文档阅读\n\n## Basic - 基础\n突然发现阅读文档后，还是有很多命令工作中不怎么用呀。不说了，记录下基础常用的吧。。。  \n<!--more-->\n看下基础command，基本上你们都能用到。\n- ### 初始化新仓库\n\t要对现有的某个项目开始用 git 管理，只需到此项目所在的目录，执行：\n\t```bash\n\t$ git init\n\t```\n\t初始化后，在当前目录下会出现一个名为 .git 的目录，所有 git 需要的数据和资源都存放在这个目录中。\n- ### 从现有仓库克隆\n\t如果想对某个开源项目出一份力，可以先把该项目的 git 仓库复制一份出来，这就需要用到 <code>git clone </code>命令。如果你熟悉其他的 VCS 比如 Subversion，你可能已经注意到这里使用的是 clone 而不是 checkout。这是个非常重要的差别，git 收取的是项目历史的所有数据（每一个文件的每一个版本），服务器上有的数据克隆之后本地也都有了。实际上，即便服务器的磁盘发生故障，用任何一个克隆出来的客户端都可以重建服务器上的仓库，回到当初克隆时的状态（虽然可能会丢失某些服务器端的挂钩设置，但所有版本的数据仍旧还在）。\n\t克隆仓库的命令格式为 <code>git clone [url]</code>。比如，要克隆 Ruby 语言的 git 代码仓库 Grit，可以用下面的命令：：\n\t```bash\n\t$ git clone git://github.com/schacon/grit.git\n\t```\n\t<b>划重点：</b>这会在当前目录下创建一个名为grit的目录，其中包含一个 .git 的目录，用于保存下载下来的所有版本记录，然后从中取出最新版本的文件拷贝。如果进入这个新建的 grit 目录，你会看到项目中的所有文件已经在里边了，准备好后续的开发和使用。如果希望在克隆的时候，自己定义要新建的项目目录名称，可以在上面的命令末尾指定新的名字：\n\t```bash\n\t$ git clone git://github.com/schacon/grit.git mygrit\n\t```\n\t唯一的差别就是，现在新建的目录成了 mygrit，其他的都和上边的一样。\n- ### 提交更新到仓库\n\t要确定哪些文件当前处于什么状态，可以用 <code>git status </code>命令。如果在克隆仓库之后立即执行此命令，会看到类似这样的输出：\n\t```bash\n\t$ git status\n\tOn branch master\n\tnothing to commit, working directory clean\n\t```\n\t然后，在当前目录添加一个readme文件，保存后运行 git status之后会看到类似这样的：\n\t```bash\n\t$ git status\n\tOn branch master\n\tUntracked files:\n\t  (use \"git add <file>...\" to include in what will be committed)\n\n\t        readme\n\n\tnothing added to commit but untracked files present (use \"git add\" to track)\n\t```\n\treadme文件现在是untracked，我们要把它添加到暂存区，使用 <code>git add readme</code>：\n\t```bash\n\t$ git status\n\tOn branch master\n\tChanges to be committed:\n  \t(use \"git reset HEAD <file>...\" to unstage)\n\n        new file:   readme\n\t```\n\t现在的暂存区域已经准备妥当可以提交了。在此之前，请一定要确认还有什么修改过的或新建的文件还没有 git add 过，否则提交的时候不会记录这些还没暂存起来的变化。所以，每次准备提交前，先用 git status 看下，是不是都已暂存起来了，然后再运行提交命令 <code>git commit -m'new file readme'</code>:  \n\t```bash\n\t$ git commit -m \"new file readme\"\n\t[master 463dc4f] new file readme\n\t 2 files changed, 3 insertions(+)\n\t create mode 100644 readme\n\t```\n\n- ### 移除文件\n\t要从 git 中移除某个文件，就必须要从已跟踪文件清单中移除（确切地说，是从暂存区域移除），然后提交。可以用 <code>git rm </code>命令完成此项工作，并连带从工作目录中删除指定的文件，这样以后就不会出现在未跟踪文件清单中了。\n\n\t如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 “Changes not staged for commit” 部分（也就是未暂存清单）看到：  \n\t```bash\n\t$ rm readme\n\t$ git status\n\tOn branch master\n\tChanges not staged for commit:\n\t  (use \"git add/rm <file>...\" to update what will be committed)\n\t  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\t        deleted:    readme\n\n\tno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\t```\n\t然后再运行 git rm 记录此次移除文件的操作：\n\t```bash\n\t$ git rm readme\n\trm 'readme'\n\t$ git status\n\tOn branch master\n\tChanges to be committed:\n\t  (use \"git reset HEAD <file>...\" to unstage)\n\n\t        deleted:    readme\n\t```\n\t最后提交的时候，该文件就不再纳入版本管理了。如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f（译注：即 force 的首字母），以防误删除文件后丢失修改的内容。\n\t<b>划重点：</b>另外一种情况是，我们想把文件从 git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。换句话说，仅是从跟踪清单中删除。比如一些大型日志文件或者一堆 .a 编译文件，不小心纳入仓库后，要移除跟踪但不删除文件，以便稍后在 .gitignore 文件中补上，用 --cached 选项即可：\n\t```bash\n\t$ git rm --cached readme.txt\n\t```\n- ### 查看提交历史\n\t在提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，可以使用 git log 命令查看。\n\t```bash\n\t$ git log\n\tcommit ca82a6dff817ec66f44342007202690a93763949\n\tAuthor: tanelmer <244lixinyi@163.com>\n\tDate:   Mon Mar 17 21:52:11 2018 -0700\n\n    new file readme\n\t```\n\t<code>git log</code>还有很多参数，可以用help去查查，试试看看。  \n- ### 回退文件/版本\n\t任何时候，你都有可能需要撤消刚才所做的某些操作。\n\t<code>git reset</code>这个命令用法很多，详细使用建议查文档，我工作用有到的，一般是回退版本，回退文件概率很少。  \n\t<code>git reset -h | git reset --help</code>\n- ### 远程仓库\n\t远程仓库是指托管在网络上的项目仓库，可能会有好多个，其中有些你只能读，另外有些可以写。同他人协作开发某个项目时，需要管理这些远程仓库，以便推送或拉取数据，分享各自的工作进展。 管理远程仓库的工作，包括添加远程库，移除废弃的远程库，管理各式远程库分支，定义是否跟踪这些分支，等等。\n\t查看当前的远程库：  \n\t要查看当前配置有哪些远程仓库，可以用 <code>git remote</code> 命令，它会列出每个远程库的简短名字。在克隆完某个项目后，至少可以看到一个名为 origin 的远程库，git 默认使用这个名字来标识你所克隆的原始仓库。  \n\t添加远程库：  \n\t要添加一个新的远程仓库，可以指定一个简单的名字，以便将来引用，运行 <code>git remote add [shortname] [url]</code>：  \n\t从远程仓库抓取数据： \n\t<code>git fetch [remote-name]</code>  \n\t推送数据到远程仓库:  \n\t<code>git push origin master</code>  \n\t远程仓库的删除和重命名:  \n\t<code>git remote rename [old] [new]</code>  \n\t<code>git remote rm [name]</code>  \n- ### 打标签\n\t同大多数 VCS 一样，git 也可以对某一时间点上的版本打上标签。人们在发布某个软件版本（比如 v1.0 等等）的时候，经常这么做。本节我们一起来学习如何列出所有可用的标签，如何新建标签，以及各种不同类型标签之间的差别。\n\t新建标签：  \n\tgit 使用的标签有两种类型：轻量级的（lightweight）和含附注的（annotated）。轻量级标签就像是个不会变化的分支，实际上它就是个指向特定提交对象的引用。而含附注标签，实际上是存储在仓库中的一个独立对象，它有自身的校验和信息，包含着标签的名字，电子邮件地址和日期，以及标签说明，标签本身也允许使用 GNU Privacy Guard (GPG) 来签署或验证。一般我们都建议使用含附注型的标签，以便保留相关信息；当然，如果只是临时性加注标签，或者不需要旁注额外信息，用轻量级标签也没问题。\n\t含附注的标签：  \n\t创建一个含附注类型的标签非常简单，用 -a （译注：取 annotated 的首字母）指定标签名字即可：<code>git tag -a v1.4 -m 'my version 1.4'</code>\n\t而 -m 选项则指定了对应的标签说明，git 会将此说明一同保存在标签对象中。如果没有给出该选项，git 会启动文本编辑软件供你输入标签说明。\n\t轻量级标签:  \n\t轻量级标签实际上就是一个保存着对应提交对象的校验和信息的文件。要创建这样的标签，一个 -a，-s 或 -m 选项都不用，直接给出标签名字即可：<code>$ git tag [name]</code>\n- ### 技巧和窍门\n\t<b>git 命令自动补全</b>  \n\t使用TAB键获取所有匹配的可用命令建议。  \n\t<b>git 命令别名</b>  \n\tgit 并不会推断你输入的几个字符将会是哪条命令，不过如果想偷懒，少敲几个命令的字符，可以用 git config 为命令设置别名。来看看下面的例子：\n\t```bash\n\t$ git config --global alias.co checkout\n\t$ git config --global alias.br branch\n\t$ git config --global alias.ci commit\n\t$ git config --global alias.st status\n\t```\n\t现在，如果要输入 git commit 只需键入 git ci 即可。而随着 git 使用的深入，会有很多经常要用到的命令，遇到这种情况，不妨建个别名提高效率。\n\t\n\t---\n\t# 相关文章\n\t- [git documention](https://git-scm.com/docs)\n\t- [廖雪峰git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n\t- [菜鸟教程](http://www.runoob.com/git/git-tutorial.html)","slug":"ife学习记录 - git文档阅读（二）","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7ws0020r2uffsur6x01","content":"<h1 id=\"git文档阅读\"><a href=\"#git文档阅读\" class=\"headerlink\" title=\"git文档阅读\"></a>git文档阅读</h1><h2 id=\"Basic-基础\"><a href=\"#Basic-基础\" class=\"headerlink\" title=\"Basic - 基础\"></a>Basic - 基础</h2><p>突然发现阅读文档后，还是有很多命令工作中不怎么用呀。不说了，记录下基础常用的吧。。。  </p>\n<span id=\"more\"></span>\n<p>看下基础command，基本上你们都能用到。</p>\n<ul>\n<li><h3 id=\"初始化新仓库\"><a href=\"#初始化新仓库\" class=\"headerlink\" title=\"初始化新仓库\"></a>初始化新仓库</h3><p>  要对现有的某个项目开始用 git 管理，只需到此项目所在的目录，执行：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br></pre></td></tr></table></figure>\n<p>  初始化后，在当前目录下会出现一个名为 .git 的目录，所有 git 需要的数据和资源都存放在这个目录中。</p>\n</li>\n<li><h3 id=\"从现有仓库克隆\"><a href=\"#从现有仓库克隆\" class=\"headerlink\" title=\"从现有仓库克隆\"></a>从现有仓库克隆</h3><p>  如果想对某个开源项目出一份力，可以先把该项目的 git 仓库复制一份出来，这就需要用到 <code>git clone </code>命令。如果你熟悉其他的 VCS 比如 Subversion，你可能已经注意到这里使用的是 clone 而不是 checkout。这是个非常重要的差别，git 收取的是项目历史的所有数据（每一个文件的每一个版本），服务器上有的数据克隆之后本地也都有了。实际上，即便服务器的磁盘发生故障，用任何一个克隆出来的客户端都可以重建服务器上的仓库，回到当初克隆时的状态（虽然可能会丢失某些服务器端的挂钩设置，但所有版本的数据仍旧还在）。<br>  克隆仓库的命令格式为 <code>git clone [url]</code>。比如，要克隆 Ruby 语言的 git 代码仓库 Grit，可以用下面的命令：：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git://github.com/schacon/grit.git</span><br></pre></td></tr></table></figure>\n<p>  <b>划重点：</b>这会在当前目录下创建一个名为grit的目录，其中包含一个 .git 的目录，用于保存下载下来的所有版本记录，然后从中取出最新版本的文件拷贝。如果进入这个新建的 grit 目录，你会看到项目中的所有文件已经在里边了，准备好后续的开发和使用。如果希望在克隆的时候，自己定义要新建的项目目录名称，可以在上面的命令末尾指定新的名字：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git://github.com/schacon/grit.git mygrit</span><br></pre></td></tr></table></figure>\n<p>  唯一的差别就是，现在新建的目录成了 mygrit，其他的都和上边的一样。</p>\n</li>\n<li><h3 id=\"提交更新到仓库\"><a href=\"#提交更新到仓库\" class=\"headerlink\" title=\"提交更新到仓库\"></a>提交更新到仓库</h3><p>  要确定哪些文件当前处于什么状态，可以用 <code>git status </code>命令。如果在克隆仓库之后立即执行此命令，会看到类似这样的输出：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure>\n<p>  然后，在当前目录添加一个readme文件，保存后运行 git status之后会看到类似这样的：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Untracked files:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git add &lt;file&gt;...&quot;</span> to include <span class=\"keyword\">in</span> what will be committed)</span><br><span class=\"line\"></span><br><span class=\"line\">        readme</span><br><span class=\"line\"></span><br><span class=\"line\">nothing added to commit but untracked files present (use <span class=\"string\">&quot;git add&quot;</span> to track)</span><br></pre></td></tr></table></figure>\n<p>  readme文件现在是untracked，我们要把它添加到暂存区，使用 <code>git add readme</code>：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\"> \t(use <span class=\"string\">&quot;git reset HEAD &lt;file&gt;...&quot;</span> to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">       new file:   readme</span><br></pre></td></tr></table></figure>\n<p>  现在的暂存区域已经准备妥当可以提交了。在此之前，请一定要确认还有什么修改过的或新建的文件还没有 git add 过，否则提交的时候不会记录这些还没暂存起来的变化。所以，每次准备提交前，先用 git status 看下，是不是都已暂存起来了，然后再运行提交命令 <code>git commit -m'new file readme'</code>:  </p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m <span class=\"string\">&quot;new file readme&quot;</span></span><br><span class=\"line\">[master 463dc4f] new file readme</span><br><span class=\"line\"> 2 files changed, 3 insertions(+)</span><br><span class=\"line\"> create mode 100644 readme</span><br></pre></td></tr></table></figure>\n</li>\n<li><h3 id=\"移除文件\"><a href=\"#移除文件\" class=\"headerlink\" title=\"移除文件\"></a>移除文件</h3><p>  要从 git 中移除某个文件，就必须要从已跟踪文件清单中移除（确切地说，是从暂存区域移除），然后提交。可以用 <code>git rm </code>命令完成此项工作，并连带从工作目录中删除指定的文件，这样以后就不会出现在未跟踪文件清单中了。</p>\n<p>  如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 “Changes not staged for commit” 部分（也就是未暂存清单）看到：  </p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">rm</span> readme</span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Changes not staged <span class=\"keyword\">for</span> commit:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git add/rm &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git checkout -- &lt;file&gt;...&quot;</span> to discard changes <span class=\"keyword\">in</span> working directory)</span><br><span class=\"line\"></span><br><span class=\"line\">        deleted:    readme</span><br><span class=\"line\"></span><br><span class=\"line\">no changes added to commit (use <span class=\"string\">&quot;git add&quot;</span> and/or <span class=\"string\">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>  然后再运行 git rm 记录此次移除文件的操作：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">rm</span> readme</span><br><span class=\"line\"><span class=\"built_in\">rm</span> <span class=\"string\">&#x27;readme&#x27;</span></span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git reset HEAD &lt;file&gt;...&quot;</span> to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">        deleted:    readme</span><br></pre></td></tr></table></figure>\n<p>  最后提交的时候，该文件就不再纳入版本管理了。如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f（译注：即 force 的首字母），以防误删除文件后丢失修改的内容。<br>  <b>划重点：</b>另外一种情况是，我们想把文件从 git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。换句话说，仅是从跟踪清单中删除。比如一些大型日志文件或者一堆 .a 编译文件，不小心纳入仓库后，要移除跟踪但不删除文件，以便稍后在 .gitignore 文件中补上，用 –cached 选项即可：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">rm</span> --cached readme.txt</span><br></pre></td></tr></table></figure></li>\n<li><h3 id=\"查看提交历史\"><a href=\"#查看提交历史\" class=\"headerlink\" title=\"查看提交历史\"></a>查看提交历史</h3><p>  在提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，可以使用 git log 命令查看。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span></span><br><span class=\"line\">commit ca82a6dff817ec66f44342007202690a93763949</span><br><span class=\"line\">Author: tanelmer &lt;244lixinyi@163.com&gt;</span><br><span class=\"line\">Date:   Mon Mar 17 21:52:11 2018 -0700</span><br><span class=\"line\"></span><br><span class=\"line\">   new file readme</span><br></pre></td></tr></table></figure>\n<p>  <code>git log</code>还有很多参数，可以用help去查查，试试看看。  </p>\n</li>\n<li><h3 id=\"回退文件-x2F-版本\"><a href=\"#回退文件-x2F-版本\" class=\"headerlink\" title=\"回退文件&#x2F;版本\"></a>回退文件&#x2F;版本</h3><p>  任何时候，你都有可能需要撤消刚才所做的某些操作。<br>  <code>git reset</code>这个命令用法很多，详细使用建议查文档，我工作用有到的，一般是回退版本，回退文件概率很少。<br>  <code>git reset -h | git reset --help</code></p>\n</li>\n<li><h3 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h3><p>  远程仓库是指托管在网络上的项目仓库，可能会有好多个，其中有些你只能读，另外有些可以写。同他人协作开发某个项目时，需要管理这些远程仓库，以便推送或拉取数据，分享各自的工作进展。 管理远程仓库的工作，包括添加远程库，移除废弃的远程库，管理各式远程库分支，定义是否跟踪这些分支，等等。<br>  查看当前的远程库：<br>  要查看当前配置有哪些远程仓库，可以用 <code>git remote</code> 命令，它会列出每个远程库的简短名字。在克隆完某个项目后，至少可以看到一个名为 origin 的远程库，git 默认使用这个名字来标识你所克隆的原始仓库。<br>  添加远程库：<br>  要添加一个新的远程仓库，可以指定一个简单的名字，以便将来引用，运行 <code>git remote add [shortname] [url]</code>：<br>  从远程仓库抓取数据：<br>  <code>git fetch [remote-name]</code><br>  推送数据到远程仓库:<br>  <code>git push origin master</code><br>  远程仓库的删除和重命名:<br>  <code>git remote rename [old] [new]</code><br>  <code>git remote rm [name]</code>  </p>\n</li>\n<li><h3 id=\"打标签\"><a href=\"#打标签\" class=\"headerlink\" title=\"打标签\"></a>打标签</h3><p>  同大多数 VCS 一样，git 也可以对某一时间点上的版本打上标签。人们在发布某个软件版本（比如 v1.0 等等）的时候，经常这么做。本节我们一起来学习如何列出所有可用的标签，如何新建标签，以及各种不同类型标签之间的差别。<br>  新建标签：<br>  git 使用的标签有两种类型：轻量级的（lightweight）和含附注的（annotated）。轻量级标签就像是个不会变化的分支，实际上它就是个指向特定提交对象的引用。而含附注标签，实际上是存储在仓库中的一个独立对象，它有自身的校验和信息，包含着标签的名字，电子邮件地址和日期，以及标签说明，标签本身也允许使用 GNU Privacy Guard (GPG) 来签署或验证。一般我们都建议使用含附注型的标签，以便保留相关信息；当然，如果只是临时性加注标签，或者不需要旁注额外信息，用轻量级标签也没问题。<br>  含附注的标签：<br>  创建一个含附注类型的标签非常简单，用 -a （译注：取 annotated 的首字母）指定标签名字即可：<code>git tag -a v1.4 -m 'my version 1.4'</code><br>  而 -m 选项则指定了对应的标签说明，git 会将此说明一同保存在标签对象中。如果没有给出该选项，git 会启动文本编辑软件供你输入标签说明。<br>  轻量级标签:<br>  轻量级标签实际上就是一个保存着对应提交对象的校验和信息的文件。要创建这样的标签，一个 -a，-s 或 -m 选项都不用，直接给出标签名字即可：<code>$ git tag [name]</code></p>\n</li>\n<li><h3 id=\"技巧和窍门\"><a href=\"#技巧和窍门\" class=\"headerlink\" title=\"技巧和窍门\"></a>技巧和窍门</h3><p>  <b>git 命令自动补全</b><br>  使用TAB键获取所有匹配的可用命令建议。<br>  <b>git 命令别名</b><br>  git 并不会推断你输入的几个字符将会是哪条命令，不过如果想偷懒，少敲几个命令的字符，可以用 git config 为命令设置别名。来看看下面的例子：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global alias.co checkout</span><br><span class=\"line\">$ git config --global alias.br branch</span><br><span class=\"line\">$ git config --global alias.ci commit</span><br><span class=\"line\">$ git config --global alias.st status</span><br></pre></td></tr></table></figure>\n<p>  现在，如果要输入 git commit 只需键入 git ci 即可。而随着 git 使用的深入，会有很多经常要用到的命令，遇到这种情况，不妨建个别名提高效率。</p>\n<hr>\n<h1 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h1><ul>\n<li><a href=\"https://git-scm.com/docs\">git documention</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰git教程</a></li>\n<li><a href=\"http://www.runoob.com/git/git-tutorial.html\">菜鸟教程</a></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":4229,"excerpt":"<h1 id=\"git文档阅读\"><a href=\"#git文档阅读\" class=\"headerlink\" title=\"git文档阅读\"></a>git文档阅读</h1><h2 id=\"Basic-基础\"><a href=\"#Basic-基础\" class=\"headerlink\" title=\"Basic - 基础\"></a>Basic - 基础</h2><p>突然发现阅读文档后，还是有很多命令工作中不怎么用呀。不说了，记录下基础常用的吧。。。  </p>","more":"<p>看下基础command，基本上你们都能用到。</p>\n<ul>\n<li><h3 id=\"初始化新仓库\"><a href=\"#初始化新仓库\" class=\"headerlink\" title=\"初始化新仓库\"></a>初始化新仓库</h3><p>  要对现有的某个项目开始用 git 管理，只需到此项目所在的目录，执行：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git init</span><br></pre></td></tr></table></figure>\n<p>  初始化后，在当前目录下会出现一个名为 .git 的目录，所有 git 需要的数据和资源都存放在这个目录中。</p>\n</li>\n<li><h3 id=\"从现有仓库克隆\"><a href=\"#从现有仓库克隆\" class=\"headerlink\" title=\"从现有仓库克隆\"></a>从现有仓库克隆</h3><p>  如果想对某个开源项目出一份力，可以先把该项目的 git 仓库复制一份出来，这就需要用到 <code>git clone </code>命令。如果你熟悉其他的 VCS 比如 Subversion，你可能已经注意到这里使用的是 clone 而不是 checkout。这是个非常重要的差别，git 收取的是项目历史的所有数据（每一个文件的每一个版本），服务器上有的数据克隆之后本地也都有了。实际上，即便服务器的磁盘发生故障，用任何一个克隆出来的客户端都可以重建服务器上的仓库，回到当初克隆时的状态（虽然可能会丢失某些服务器端的挂钩设置，但所有版本的数据仍旧还在）。<br>  克隆仓库的命令格式为 <code>git clone [url]</code>。比如，要克隆 Ruby 语言的 git 代码仓库 Grit，可以用下面的命令：：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git://github.com/schacon/grit.git</span><br></pre></td></tr></table></figure>\n<p>  <b>划重点：</b>这会在当前目录下创建一个名为grit的目录，其中包含一个 .git 的目录，用于保存下载下来的所有版本记录，然后从中取出最新版本的文件拷贝。如果进入这个新建的 grit 目录，你会看到项目中的所有文件已经在里边了，准备好后续的开发和使用。如果希望在克隆的时候，自己定义要新建的项目目录名称，可以在上面的命令末尾指定新的名字：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git://github.com/schacon/grit.git mygrit</span><br></pre></td></tr></table></figure>\n<p>  唯一的差别就是，现在新建的目录成了 mygrit，其他的都和上边的一样。</p>\n</li>\n<li><h3 id=\"提交更新到仓库\"><a href=\"#提交更新到仓库\" class=\"headerlink\" title=\"提交更新到仓库\"></a>提交更新到仓库</h3><p>  要确定哪些文件当前处于什么状态，可以用 <code>git status </code>命令。如果在克隆仓库之后立即执行此命令，会看到类似这样的输出：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure>\n<p>  然后，在当前目录添加一个readme文件，保存后运行 git status之后会看到类似这样的：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Untracked files:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git add &lt;file&gt;...&quot;</span> to include <span class=\"keyword\">in</span> what will be committed)</span><br><span class=\"line\"></span><br><span class=\"line\">        readme</span><br><span class=\"line\"></span><br><span class=\"line\">nothing added to commit but untracked files present (use <span class=\"string\">&quot;git add&quot;</span> to track)</span><br></pre></td></tr></table></figure>\n<p>  readme文件现在是untracked，我们要把它添加到暂存区，使用 <code>git add readme</code>：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\"> \t(use <span class=\"string\">&quot;git reset HEAD &lt;file&gt;...&quot;</span> to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">       new file:   readme</span><br></pre></td></tr></table></figure>\n<p>  现在的暂存区域已经准备妥当可以提交了。在此之前，请一定要确认还有什么修改过的或新建的文件还没有 git add 过，否则提交的时候不会记录这些还没暂存起来的变化。所以，每次准备提交前，先用 git status 看下，是不是都已暂存起来了，然后再运行提交命令 <code>git commit -m'new file readme'</code>:  </p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git commit -m <span class=\"string\">&quot;new file readme&quot;</span></span><br><span class=\"line\">[master 463dc4f] new file readme</span><br><span class=\"line\"> 2 files changed, 3 insertions(+)</span><br><span class=\"line\"> create mode 100644 readme</span><br></pre></td></tr></table></figure>\n</li>\n<li><h3 id=\"移除文件\"><a href=\"#移除文件\" class=\"headerlink\" title=\"移除文件\"></a>移除文件</h3><p>  要从 git 中移除某个文件，就必须要从已跟踪文件清单中移除（确切地说，是从暂存区域移除），然后提交。可以用 <code>git rm </code>命令完成此项工作，并连带从工作目录中删除指定的文件，这样以后就不会出现在未跟踪文件清单中了。</p>\n<p>  如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 “Changes not staged for commit” 部分（也就是未暂存清单）看到：  </p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">rm</span> readme</span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Changes not staged <span class=\"keyword\">for</span> commit:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git add/rm &lt;file&gt;...&quot;</span> to update what will be committed)</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git checkout -- &lt;file&gt;...&quot;</span> to discard changes <span class=\"keyword\">in</span> working directory)</span><br><span class=\"line\"></span><br><span class=\"line\">        deleted:    readme</span><br><span class=\"line\"></span><br><span class=\"line\">no changes added to commit (use <span class=\"string\">&quot;git add&quot;</span> and/or <span class=\"string\">&quot;git commit -a&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>  然后再运行 git rm 记录此次移除文件的操作：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">rm</span> readme</span><br><span class=\"line\"><span class=\"built_in\">rm</span> <span class=\"string\">&#x27;readme&#x27;</span></span><br><span class=\"line\">$ git status</span><br><span class=\"line\">On branch master</span><br><span class=\"line\">Changes to be committed:</span><br><span class=\"line\">  (use <span class=\"string\">&quot;git reset HEAD &lt;file&gt;...&quot;</span> to unstage)</span><br><span class=\"line\"></span><br><span class=\"line\">        deleted:    readme</span><br></pre></td></tr></table></figure>\n<p>  最后提交的时候，该文件就不再纳入版本管理了。如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f（译注：即 force 的首字母），以防误删除文件后丢失修改的内容。<br>  <b>划重点：</b>另外一种情况是，我们想把文件从 git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。换句话说，仅是从跟踪清单中删除。比如一些大型日志文件或者一堆 .a 编译文件，不小心纳入仓库后，要移除跟踪但不删除文件，以便稍后在 .gitignore 文件中补上，用 –cached 选项即可：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">rm</span> --cached readme.txt</span><br></pre></td></tr></table></figure></li>\n<li><h3 id=\"查看提交历史\"><a href=\"#查看提交历史\" class=\"headerlink\" title=\"查看提交历史\"></a>查看提交历史</h3><p>  在提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，可以使用 git log 命令查看。</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">log</span></span><br><span class=\"line\">commit ca82a6dff817ec66f44342007202690a93763949</span><br><span class=\"line\">Author: tanelmer &lt;244lixinyi@163.com&gt;</span><br><span class=\"line\">Date:   Mon Mar 17 21:52:11 2018 -0700</span><br><span class=\"line\"></span><br><span class=\"line\">   new file readme</span><br></pre></td></tr></table></figure>\n<p>  <code>git log</code>还有很多参数，可以用help去查查，试试看看。  </p>\n</li>\n<li><h3 id=\"回退文件-x2F-版本\"><a href=\"#回退文件-x2F-版本\" class=\"headerlink\" title=\"回退文件&#x2F;版本\"></a>回退文件&#x2F;版本</h3><p>  任何时候，你都有可能需要撤消刚才所做的某些操作。<br>  <code>git reset</code>这个命令用法很多，详细使用建议查文档，我工作用有到的，一般是回退版本，回退文件概率很少。<br>  <code>git reset -h | git reset --help</code></p>\n</li>\n<li><h3 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h3><p>  远程仓库是指托管在网络上的项目仓库，可能会有好多个，其中有些你只能读，另外有些可以写。同他人协作开发某个项目时，需要管理这些远程仓库，以便推送或拉取数据，分享各自的工作进展。 管理远程仓库的工作，包括添加远程库，移除废弃的远程库，管理各式远程库分支，定义是否跟踪这些分支，等等。<br>  查看当前的远程库：<br>  要查看当前配置有哪些远程仓库，可以用 <code>git remote</code> 命令，它会列出每个远程库的简短名字。在克隆完某个项目后，至少可以看到一个名为 origin 的远程库，git 默认使用这个名字来标识你所克隆的原始仓库。<br>  添加远程库：<br>  要添加一个新的远程仓库，可以指定一个简单的名字，以便将来引用，运行 <code>git remote add [shortname] [url]</code>：<br>  从远程仓库抓取数据：<br>  <code>git fetch [remote-name]</code><br>  推送数据到远程仓库:<br>  <code>git push origin master</code><br>  远程仓库的删除和重命名:<br>  <code>git remote rename [old] [new]</code><br>  <code>git remote rm [name]</code>  </p>\n</li>\n<li><h3 id=\"打标签\"><a href=\"#打标签\" class=\"headerlink\" title=\"打标签\"></a>打标签</h3><p>  同大多数 VCS 一样，git 也可以对某一时间点上的版本打上标签。人们在发布某个软件版本（比如 v1.0 等等）的时候，经常这么做。本节我们一起来学习如何列出所有可用的标签，如何新建标签，以及各种不同类型标签之间的差别。<br>  新建标签：<br>  git 使用的标签有两种类型：轻量级的（lightweight）和含附注的（annotated）。轻量级标签就像是个不会变化的分支，实际上它就是个指向特定提交对象的引用。而含附注标签，实际上是存储在仓库中的一个独立对象，它有自身的校验和信息，包含着标签的名字，电子邮件地址和日期，以及标签说明，标签本身也允许使用 GNU Privacy Guard (GPG) 来签署或验证。一般我们都建议使用含附注型的标签，以便保留相关信息；当然，如果只是临时性加注标签，或者不需要旁注额外信息，用轻量级标签也没问题。<br>  含附注的标签：<br>  创建一个含附注类型的标签非常简单，用 -a （译注：取 annotated 的首字母）指定标签名字即可：<code>git tag -a v1.4 -m 'my version 1.4'</code><br>  而 -m 选项则指定了对应的标签说明，git 会将此说明一同保存在标签对象中。如果没有给出该选项，git 会启动文本编辑软件供你输入标签说明。<br>  轻量级标签:<br>  轻量级标签实际上就是一个保存着对应提交对象的校验和信息的文件。要创建这样的标签，一个 -a，-s 或 -m 选项都不用，直接给出标签名字即可：<code>$ git tag [name]</code></p>\n</li>\n<li><h3 id=\"技巧和窍门\"><a href=\"#技巧和窍门\" class=\"headerlink\" title=\"技巧和窍门\"></a>技巧和窍门</h3><p>  <b>git 命令自动补全</b><br>  使用TAB键获取所有匹配的可用命令建议。<br>  <b>git 命令别名</b><br>  git 并不会推断你输入的几个字符将会是哪条命令，不过如果想偷懒，少敲几个命令的字符，可以用 git config 为命令设置别名。来看看下面的例子：</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global alias.co checkout</span><br><span class=\"line\">$ git config --global alias.br branch</span><br><span class=\"line\">$ git config --global alias.ci commit</span><br><span class=\"line\">$ git config --global alias.st status</span><br></pre></td></tr></table></figure>\n<p>  现在，如果要输入 git commit 只需键入 git ci 即可。而随着 git 使用的深入，会有很多经常要用到的命令，遇到这种情况，不妨建个别名提高效率。</p>\n<hr>\n<h1 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h1><ul>\n<li><a href=\"https://git-scm.com/docs\">git documention</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰git教程</a></li>\n<li><a href=\"http://www.runoob.com/git/git-tutorial.html\">菜鸟教程</a></li>\n</ul>\n</li>\n</ul>"},{"title":"ife学习记录 - git文档阅读（远程仓库）","date":"2018-04-30T16:00:00.000Z","description":"git 文档还是需要读一读的","_content":"# git文档阅读\n\n## 服务器上的Git - 远程仓库\n远程仓库通常只是一个裸仓库（bare repository） — 即一个没有当前工作目录的仓库。\n因为该仓库只是一个合作媒介，所以不需要从硬盘上取出最新版本的快照；仓库里存放的仅仅是 Git 的数据。简单地说，裸仓库就是你工作目录中 .git 子目录内的内容。\n<!--more-->\n### 关于远程仓库的常用git命令\n   添加新的远程仓库  \n    ```bash\n    $ git remote add [shortname] [url]\n    ```\n   提取远程仓库  \n   ```bash\n    $ git fetch\n   ```\n   推送新分支到远程仓库  \n    ```bash\n    $ git push [alias] [branch]\n    ```\n\n### SSH KEY(公钥)\n   由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息：  \n    首先要在你的本地生成秘钥  \n    ```bash\n    $ ssh-keygen -t rsa -C \"youremail@example.com\"\n    ```\n   后面的 your_email@youremail.com 改为你在 github 上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。\n    成功的话会在~/下生成.ssh文件夹，里面有id_rsa.pub，复制里面的 key。\n    ```bash\n    $ cat ~/.ssh/id_rsa.pub\n    ```\n   然后我们需要到github你的账号settings里面SSH keys上添加你这台机器的本地公钥，相当于是你这台机器跟github账号的一个钥匙。  \n    之后每次推送和拉取就不用再授权了。\n    详细的操作可以看官方文档 [SSH github-help](https://help.github.com/articles/connecting-to-github-with-ssh/)\n\n### git hooks(git钩子)\n   钩子存放目录一般在.git/hooks。 Git 默认会放置一些脚本样本在这个目录中，除了可以作为挂钩使用，这些样本本身是可以独立使用的。\n   所有的样本都是shell脚本，其中一些还包含了Perl的脚本，不过，任何正确命名的可执行脚本都可以正常使用 — 可以用Ruby或Python，或其他。\n   在Git 1.6版本之后，这些样本名都是以.sample结尾，因此，你必须重新命名。在Git 1.6版本之前，这些样本名都是正确的，但这些样本不是可执行文件。\n   当某些重要事件发生时，Git 以调用自定义脚本。  \n   有两组挂钩：客户端和服务器端。客户端挂钩用于客户端的操作，如提交和合并。服务器端挂钩用于 Git 服务器端的操作，如接收被推送的提交。\n   简单地来说，就是你在进行git操作是会有一些钩子，这些钩子允许你在git完成这些操作后调用脚本处理一些事情。  \n   比如pre-commit钩子，post-merge钩子等。其实git也支持一些自定义钩子，\n   一般用于持续集成、自动化部署。（最近才开始研究-。-还未深入）\n\n   [你不知道的持续集成的3个Git Hooks详解](https://www.atlassian.com/continuous-delivery/git-hooks-continuous-integration)\n\n   ---\n# 相关文章\n   - [git documention](https://git-scm.com/docs)\n   - [廖雪峰git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n   - [菜鸟教程](http://www.runoob.com/git/git-tutorial.html)\n","source":"_posts/ife学习记录 - git文档阅读（四）.md","raw":"---\ntitle: ife学习记录 - git文档阅读（远程仓库）\ndate: 2018-05-01\ncategories: git\ntags: [git]\ndescription: git 文档还是需要读一读的\n---\n# git文档阅读\n\n## 服务器上的Git - 远程仓库\n远程仓库通常只是一个裸仓库（bare repository） — 即一个没有当前工作目录的仓库。\n因为该仓库只是一个合作媒介，所以不需要从硬盘上取出最新版本的快照；仓库里存放的仅仅是 Git 的数据。简单地说，裸仓库就是你工作目录中 .git 子目录内的内容。\n<!--more-->\n### 关于远程仓库的常用git命令\n   添加新的远程仓库  \n    ```bash\n    $ git remote add [shortname] [url]\n    ```\n   提取远程仓库  \n   ```bash\n    $ git fetch\n   ```\n   推送新分支到远程仓库  \n    ```bash\n    $ git push [alias] [branch]\n    ```\n\n### SSH KEY(公钥)\n   由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息：  \n    首先要在你的本地生成秘钥  \n    ```bash\n    $ ssh-keygen -t rsa -C \"youremail@example.com\"\n    ```\n   后面的 your_email@youremail.com 改为你在 github 上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。\n    成功的话会在~/下生成.ssh文件夹，里面有id_rsa.pub，复制里面的 key。\n    ```bash\n    $ cat ~/.ssh/id_rsa.pub\n    ```\n   然后我们需要到github你的账号settings里面SSH keys上添加你这台机器的本地公钥，相当于是你这台机器跟github账号的一个钥匙。  \n    之后每次推送和拉取就不用再授权了。\n    详细的操作可以看官方文档 [SSH github-help](https://help.github.com/articles/connecting-to-github-with-ssh/)\n\n### git hooks(git钩子)\n   钩子存放目录一般在.git/hooks。 Git 默认会放置一些脚本样本在这个目录中，除了可以作为挂钩使用，这些样本本身是可以独立使用的。\n   所有的样本都是shell脚本，其中一些还包含了Perl的脚本，不过，任何正确命名的可执行脚本都可以正常使用 — 可以用Ruby或Python，或其他。\n   在Git 1.6版本之后，这些样本名都是以.sample结尾，因此，你必须重新命名。在Git 1.6版本之前，这些样本名都是正确的，但这些样本不是可执行文件。\n   当某些重要事件发生时，Git 以调用自定义脚本。  \n   有两组挂钩：客户端和服务器端。客户端挂钩用于客户端的操作，如提交和合并。服务器端挂钩用于 Git 服务器端的操作，如接收被推送的提交。\n   简单地来说，就是你在进行git操作是会有一些钩子，这些钩子允许你在git完成这些操作后调用脚本处理一些事情。  \n   比如pre-commit钩子，post-merge钩子等。其实git也支持一些自定义钩子，\n   一般用于持续集成、自动化部署。（最近才开始研究-。-还未深入）\n\n   [你不知道的持续集成的3个Git Hooks详解](https://www.atlassian.com/continuous-delivery/git-hooks-continuous-integration)\n\n   ---\n# 相关文章\n   - [git documention](https://git-scm.com/docs)\n   - [廖雪峰git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\n   - [菜鸟教程](http://www.runoob.com/git/git-tutorial.html)\n","slug":"ife学习记录 - git文档阅读（四）","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7ws0023r2uf3vzfcbr4","content":"<h1 id=\"git文档阅读\"><a href=\"#git文档阅读\" class=\"headerlink\" title=\"git文档阅读\"></a>git文档阅读</h1><h2 id=\"服务器上的Git-远程仓库\"><a href=\"#服务器上的Git-远程仓库\" class=\"headerlink\" title=\"服务器上的Git - 远程仓库\"></a>服务器上的Git - 远程仓库</h2><p>远程仓库通常只是一个裸仓库（bare repository） — 即一个没有当前工作目录的仓库。<br>因为该仓库只是一个合作媒介，所以不需要从硬盘上取出最新版本的快照；仓库里存放的仅仅是 Git 的数据。简单地说，裸仓库就是你工作目录中 .git 子目录内的内容。</p>\n<span id=\"more\"></span>\n<h3 id=\"关于远程仓库的常用git命令\"><a href=\"#关于远程仓库的常用git命令\" class=\"headerlink\" title=\"关于远程仓库的常用git命令\"></a>关于远程仓库的常用git命令</h3><p>   添加新的远程仓库<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote add [shortname] [url]</span><br></pre></td></tr></table></figure><br>   提取远程仓库<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch</span><br></pre></td></tr></table></figure><br>   推送新分支到远程仓库<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push [<span class=\"built_in\">alias</span>] [branch]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"SSH-KEY-公钥\"><a href=\"#SSH-KEY-公钥\" class=\"headerlink\" title=\"SSH KEY(公钥)\"></a>SSH KEY(公钥)</h3><p>   由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息：<br>    首先要在你的本地生成秘钥<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C <span class=\"string\">&quot;youremail@example.com&quot;</span></span><br></pre></td></tr></table></figure><br>   后面的 <a href=\"mailto:&#x79;&#111;&#x75;&#114;&#x5f;&#101;&#x6d;&#97;&#105;&#108;&#x40;&#121;&#111;&#117;&#114;&#101;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#109;\">&#x79;&#111;&#x75;&#114;&#x5f;&#101;&#x6d;&#97;&#105;&#108;&#x40;&#121;&#111;&#117;&#114;&#101;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a> 改为你在 github 上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。<br>    成功的话会在~&#x2F;下生成.ssh文件夹，里面有id_rsa.pub，复制里面的 key。<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><br>   然后我们需要到github你的账号settings里面SSH keys上添加你这台机器的本地公钥，相当于是你这台机器跟github账号的一个钥匙。<br>    之后每次推送和拉取就不用再授权了。<br>    详细的操作可以看官方文档 <a href=\"https://help.github.com/articles/connecting-to-github-with-ssh/\">SSH github-help</a></p>\n<h3 id=\"git-hooks-git钩子\"><a href=\"#git-hooks-git钩子\" class=\"headerlink\" title=\"git hooks(git钩子)\"></a>git hooks(git钩子)</h3><p>   钩子存放目录一般在.git&#x2F;hooks。 Git 默认会放置一些脚本样本在这个目录中，除了可以作为挂钩使用，这些样本本身是可以独立使用的。<br>   所有的样本都是shell脚本，其中一些还包含了Perl的脚本，不过，任何正确命名的可执行脚本都可以正常使用 — 可以用Ruby或Python，或其他。<br>   在Git 1.6版本之后，这些样本名都是以.sample结尾，因此，你必须重新命名。在Git 1.6版本之前，这些样本名都是正确的，但这些样本不是可执行文件。<br>   当某些重要事件发生时，Git 以调用自定义脚本。<br>   有两组挂钩：客户端和服务器端。客户端挂钩用于客户端的操作，如提交和合并。服务器端挂钩用于 Git 服务器端的操作，如接收被推送的提交。<br>   简单地来说，就是你在进行git操作是会有一些钩子，这些钩子允许你在git完成这些操作后调用脚本处理一些事情。<br>   比如pre-commit钩子，post-merge钩子等。其实git也支持一些自定义钩子，<br>   一般用于持续集成、自动化部署。（最近才开始研究-。-还未深入）</p>\n<p>   <a href=\"https://www.atlassian.com/continuous-delivery/git-hooks-continuous-integration\">你不知道的持续集成的3个Git Hooks详解</a></p>\n<hr>\n<h1 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h1><ul>\n<li><a href=\"https://git-scm.com/docs\">git documention</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰git教程</a></li>\n<li><a href=\"http://www.runoob.com/git/git-tutorial.html\">菜鸟教程</a></li>\n</ul>\n","site":{"data":{}},"length":1247,"excerpt":"<h1 id=\"git文档阅读\"><a href=\"#git文档阅读\" class=\"headerlink\" title=\"git文档阅读\"></a>git文档阅读</h1><h2 id=\"服务器上的Git-远程仓库\"><a href=\"#服务器上的Git-远程仓库\" class=\"headerlink\" title=\"服务器上的Git - 远程仓库\"></a>服务器上的Git - 远程仓库</h2><p>远程仓库通常只是一个裸仓库（bare repository） — 即一个没有当前工作目录的仓库。<br>因为该仓库只是一个合作媒介，所以不需要从硬盘上取出最新版本的快照；仓库里存放的仅仅是 Git 的数据。简单地说，裸仓库就是你工作目录中 .git 子目录内的内容。</p>","more":"<h3 id=\"关于远程仓库的常用git命令\"><a href=\"#关于远程仓库的常用git命令\" class=\"headerlink\" title=\"关于远程仓库的常用git命令\"></a>关于远程仓库的常用git命令</h3><p>   添加新的远程仓库<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote add [shortname] [url]</span><br></pre></td></tr></table></figure><br>   提取远程仓库<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git fetch</span><br></pre></td></tr></table></figure><br>   推送新分支到远程仓库<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push [<span class=\"built_in\">alias</span>] [branch]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"SSH-KEY-公钥\"><a href=\"#SSH-KEY-公钥\" class=\"headerlink\" title=\"SSH KEY(公钥)\"></a>SSH KEY(公钥)</h3><p>   由于你的本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，所以我们需要配置验证信息：<br>    首先要在你的本地生成秘钥<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C <span class=\"string\">&quot;youremail@example.com&quot;</span></span><br></pre></td></tr></table></figure><br>   后面的 <a href=\"mailto:&#x79;&#111;&#x75;&#114;&#x5f;&#101;&#x6d;&#97;&#105;&#108;&#x40;&#121;&#111;&#117;&#114;&#101;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#109;\">&#x79;&#111;&#x75;&#114;&#x5f;&#101;&#x6d;&#97;&#105;&#108;&#x40;&#121;&#111;&#117;&#114;&#101;&#x6d;&#97;&#x69;&#x6c;&#46;&#99;&#111;&#109;</a> 改为你在 github 上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。<br>    成功的话会在~&#x2F;下生成.ssh文件夹，里面有id_rsa.pub，复制里面的 key。<br>    <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cat</span> ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><br>   然后我们需要到github你的账号settings里面SSH keys上添加你这台机器的本地公钥，相当于是你这台机器跟github账号的一个钥匙。<br>    之后每次推送和拉取就不用再授权了。<br>    详细的操作可以看官方文档 <a href=\"https://help.github.com/articles/connecting-to-github-with-ssh/\">SSH github-help</a></p>\n<h3 id=\"git-hooks-git钩子\"><a href=\"#git-hooks-git钩子\" class=\"headerlink\" title=\"git hooks(git钩子)\"></a>git hooks(git钩子)</h3><p>   钩子存放目录一般在.git&#x2F;hooks。 Git 默认会放置一些脚本样本在这个目录中，除了可以作为挂钩使用，这些样本本身是可以独立使用的。<br>   所有的样本都是shell脚本，其中一些还包含了Perl的脚本，不过，任何正确命名的可执行脚本都可以正常使用 — 可以用Ruby或Python，或其他。<br>   在Git 1.6版本之后，这些样本名都是以.sample结尾，因此，你必须重新命名。在Git 1.6版本之前，这些样本名都是正确的，但这些样本不是可执行文件。<br>   当某些重要事件发生时，Git 以调用自定义脚本。<br>   有两组挂钩：客户端和服务器端。客户端挂钩用于客户端的操作，如提交和合并。服务器端挂钩用于 Git 服务器端的操作，如接收被推送的提交。<br>   简单地来说，就是你在进行git操作是会有一些钩子，这些钩子允许你在git完成这些操作后调用脚本处理一些事情。<br>   比如pre-commit钩子，post-merge钩子等。其实git也支持一些自定义钩子，<br>   一般用于持续集成、自动化部署。（最近才开始研究-。-还未深入）</p>\n<p>   <a href=\"https://www.atlassian.com/continuous-delivery/git-hooks-continuous-integration\">你不知道的持续集成的3个Git Hooks详解</a></p>\n<hr>\n<h1 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h1><ul>\n<li><a href=\"https://git-scm.com/docs\">git documention</a></li>\n<li><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\">廖雪峰git教程</a></li>\n<li><a href=\"http://www.runoob.com/git/git-tutorial.html\">菜鸟教程</a></li>\n</ul>"},{"title":"ife学习记录 - 构建工具（一）","date":"2016-08-11T16:00:00.000Z","description":"前端工程化，工具少不了，grunt、gulp、webpack、新出的parcel，一个接一个，先熟悉熟悉parcel和webpack。","_content":"# 构建工具（parcel）\n\n## parcel - 快速，零配置的 Web 应用程序打包器\n对于parcel这个新事物，莫名其妙的就在前端圈兴起了，目前为止star已超22K，之前虽然也有听过，但也没测试，我这边也就照着文档操作了一把，试一试感觉。\n<!--more-->\n![图片](https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-18%20%E4%B8%8B%E5%8D%888.36.08.png)\n上面图片就是照着文档入门了一把，确实配置贼简单，写个入口文件就完事了。  \nparcel中文文档中说了一些特性吧。\n* 资源（意思是parcel基于资源进行打包，它会自动分析这些资源中的依赖关系，分别做不同的打包处理）\n* 转换（内置postcss，babel这样一类的转换工具）\n* 热编译（类似webpack-hot-middleware插件一样的功能，就是热编译）\n* 代码拆分（这个特性其实就是支持模块化，按需或异步import导入都支持）\n* 环境配置（对于生产环境的一些配置说明吧，看起来挺不错的）\n\n总体来说parcel看起来确实比webpack简洁多了，有篇文章写的很透彻，测试了webpack和parcel一些数据对比，分析也挺有道理。其中有些坑我也遇到过。。\n[Parcel Vs Webpack](https://segmentfault.com/a/1190000012612891)","source":"_posts/ife学习记录 - 构建工具（一）.md","raw":"---\ntitle: ife学习记录 - 构建工具（一）\ndate: 2016-08-12\ncategories: 构建工具\ntags: [构建工具]\ndescription: 前端工程化，工具少不了，grunt、gulp、webpack、新出的parcel，一个接一个，先熟悉熟悉parcel和webpack。\n---\n# 构建工具（parcel）\n\n## parcel - 快速，零配置的 Web 应用程序打包器\n对于parcel这个新事物，莫名其妙的就在前端圈兴起了，目前为止star已超22K，之前虽然也有听过，但也没测试，我这边也就照着文档操作了一把，试一试感觉。\n<!--more-->\n![图片](https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-18%20%E4%B8%8B%E5%8D%888.36.08.png)\n上面图片就是照着文档入门了一把，确实配置贼简单，写个入口文件就完事了。  \nparcel中文文档中说了一些特性吧。\n* 资源（意思是parcel基于资源进行打包，它会自动分析这些资源中的依赖关系，分别做不同的打包处理）\n* 转换（内置postcss，babel这样一类的转换工具）\n* 热编译（类似webpack-hot-middleware插件一样的功能，就是热编译）\n* 代码拆分（这个特性其实就是支持模块化，按需或异步import导入都支持）\n* 环境配置（对于生产环境的一些配置说明吧，看起来挺不错的）\n\n总体来说parcel看起来确实比webpack简洁多了，有篇文章写的很透彻，测试了webpack和parcel一些数据对比，分析也挺有道理。其中有些坑我也遇到过。。\n[Parcel Vs Webpack](https://segmentfault.com/a/1190000012612891)","slug":"ife学习记录 - 构建工具（一）","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7ws0027r2ufdzso140p","content":"<h1 id=\"构建工具（parcel）\"><a href=\"#构建工具（parcel）\" class=\"headerlink\" title=\"构建工具（parcel）\"></a>构建工具（parcel）</h1><h2 id=\"parcel-快速，零配置的-Web-应用程序打包器\"><a href=\"#parcel-快速，零配置的-Web-应用程序打包器\" class=\"headerlink\" title=\"parcel - 快速，零配置的 Web 应用程序打包器\"></a>parcel - 快速，零配置的 Web 应用程序打包器</h2><p>对于parcel这个新事物，莫名其妙的就在前端圈兴起了，目前为止star已超22K，之前虽然也有听过，但也没测试，我这边也就照着文档操作了一把，试一试感觉。</p>\n<span id=\"more\"></span>\n<p><img src=\"https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-18%20%E4%B8%8B%E5%8D%888.36.08.png\" alt=\"图片\"><br>上面图片就是照着文档入门了一把，确实配置贼简单，写个入口文件就完事了。<br>parcel中文文档中说了一些特性吧。</p>\n<ul>\n<li>资源（意思是parcel基于资源进行打包，它会自动分析这些资源中的依赖关系，分别做不同的打包处理）</li>\n<li>转换（内置postcss，babel这样一类的转换工具）</li>\n<li>热编译（类似webpack-hot-middleware插件一样的功能，就是热编译）</li>\n<li>代码拆分（这个特性其实就是支持模块化，按需或异步import导入都支持）</li>\n<li>环境配置（对于生产环境的一些配置说明吧，看起来挺不错的）</li>\n</ul>\n<p>总体来说parcel看起来确实比webpack简洁多了，有篇文章写的很透彻，测试了webpack和parcel一些数据对比，分析也挺有道理。其中有些坑我也遇到过。。<br><a href=\"https://segmentfault.com/a/1190000012612891\">Parcel Vs Webpack</a></p>\n","site":{"data":{}},"length":448,"excerpt":"<h1 id=\"构建工具（parcel）\"><a href=\"#构建工具（parcel）\" class=\"headerlink\" title=\"构建工具（parcel）\"></a>构建工具（parcel）</h1><h2 id=\"parcel-快速，零配置的-Web-应用程序打包器\"><a href=\"#parcel-快速，零配置的-Web-应用程序打包器\" class=\"headerlink\" title=\"parcel - 快速，零配置的 Web 应用程序打包器\"></a>parcel - 快速，零配置的 Web 应用程序打包器</h2><p>对于parcel这个新事物，莫名其妙的就在前端圈兴起了，目前为止star已超22K，之前虽然也有听过，但也没测试，我这边也就照着文档操作了一把，试一试感觉。</p>","more":"<p><img src=\"https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-18%20%E4%B8%8B%E5%8D%888.36.08.png\" alt=\"图片\"><br>上面图片就是照着文档入门了一把，确实配置贼简单，写个入口文件就完事了。<br>parcel中文文档中说了一些特性吧。</p>\n<ul>\n<li>资源（意思是parcel基于资源进行打包，它会自动分析这些资源中的依赖关系，分别做不同的打包处理）</li>\n<li>转换（内置postcss，babel这样一类的转换工具）</li>\n<li>热编译（类似webpack-hot-middleware插件一样的功能，就是热编译）</li>\n<li>代码拆分（这个特性其实就是支持模块化，按需或异步import导入都支持）</li>\n<li>环境配置（对于生产环境的一些配置说明吧，看起来挺不错的）</li>\n</ul>\n<p>总体来说parcel看起来确实比webpack简洁多了，有篇文章写的很透彻，测试了webpack和parcel一些数据对比，分析也挺有道理。其中有些坑我也遇到过。。<br><a href=\"https://segmentfault.com/a/1190000012612891\">Parcel Vs Webpack</a></p>"},{"title":"ife学习记录 - 构建工具（二）","date":"2016-07-10T16:00:00.000Z","description":"前端工程化，工具少不了，grunt、gulp、webpack、新出的parcel，一个接一个，先熟悉熟悉parcel和webpack。","_content":"# 构建工具（webpack）\n\n## webpack - 时下最热门的模块打包器\nwebpack是一个前端资源加载/打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。  \n<!--more-->\nwebpack很早就出来了，之前也有用过，但是也仅仅限于简单应用，后面用vur-cli脚手架的时候觉得配置还是挺多的，然后就找了些关于vue-cli里webpack配置的资料了解下，也做了点笔记。  \n[webpack-vue-cli配置详解](https://elmerlxy.com/2018/04/29/webpack-vue-cli%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/)\n>## vue-cli 命令行工具\n为单页面应用快速搭建 (SPA) 繁杂的脚手架。它为现代前端工作流提供了 batteries-included 的构建设置。只需要几分钟的时间就可以运行起来并带有热重载、保存时 lint 校验，以及生产环境可用的构建版本。\n\n## webpack文档阅读&实践\n文档嘛就不用说了，当你想要了解一个之前未了解过的技术时，读文档可能是入门最快的方式，而后加上一些实践，基本上对这玩意就会有一个大概的了解。  \n[webpack中文文档](https://webpack.docschina.org/concepts/)  \n### webpack有几个核心概念\n* 入口（entry）\n* 输出（output）\n* 加载器（loader）\n* 插件（plugins）  \n---\n\n### 入口：打包的起始文件。\n这里有两种区分，一种是单页面文件入口，还有一种是多页面文件入口。  \n语法也有区分，单页和多页传参是不一样的，对应对象和数组。\nwebpack.config.js\n```javascript\n//单页面入口\nmodule.exports = {\n  entry: {\n    app: './src/app.js',\n    vendors: './src/vendors.js'\n  }\n};\n//多页面入口\nmodule.exports = {\n  entry: {\n    pageOne: './src/pageOne/index.js',\n    pageTwo: './src/pageTwo/index.js',\n    pageThree: './src/pageThree/index.js'\n  }\n};\n```\n### 输出配置也搭配的入口规则来的\n```javascript\n//单页输出\nmodule.exports = {\n  output: {\n    filename: 'bundle.js',\n    path: '/home/proj/public/assets'\n  }\n};\n//多页输出\nmodule.exports = {\n  entry: {\n    app: './src/app.js',\n    search: './src/search.js'\n  },\n  output: {\n    filename: '[name].js',\n    path: __dirname + '/dist'\n  }\n};\n\n// 写入到硬盘：./dist/app.js, ./dist/search.js\n```\n有个需要注意的地方就是，你可能有需求将输出文件路径配置到cnd上，并在文件末尾加上hash来去除缓存，这里有个publicPath的配置项，可以满足你的需求。  \n```javascript\nmodule.exports = {\n  //...\n  output: {\n    path: '/home/proj/cdn/assets/[hash]',\n    publicPath: 'http://cdn.example.com/assets/[hash]/'\n  }\n};\n```\n关于path和publicPath的区别。这篇webpack解惑讲的很全很清晰。  \n[文章链接](https://www.jianshu.com/p/dcb28b582318)\n>“path”仅仅告诉Webpack结果存储在哪里，然而“publicPath”项则被许多Webpack的插件用于在生产模式下更新内嵌到css、html文件里的url值。\n例如，在localhost（译者注：即本地开发模式）里的css文件中边你可能用“./test.png”这样的url来加载图片，但是在生产模式下“test.png”文件可能会定位到CDN上并且你的Node.js服务器可能是运行在HeroKu上边的。这就意味着在生产环境你必须手动更新所有文件里的url为CDN的路径。\n然而你也可以使用Webpack的“publicPath”选项和一些插件来在生产模式下编译输出文件时自动更新这些url。  \n\n### 加载器(loader) VS 插件(plugin)\n文档解释  \n>loader 类似于其他构建工具中“任务(task)”，并提供了处理前端构建步骤的强大方法。loader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript，或将内联图像转换为 data URL。loader 甚至允许你直接在 JavaScript 模块中 import CSS文件！  \n之前我总感觉loader跟plugin是一个玩意，只不过是语法引用方面有些不同，都是webpack的一些扩展，后面才发现这其中有些复杂的关系。。。  \n\n功能思想上的区别：\n>loader 用于加载某些资源文件。 因为webpack 本身只能打包commonjs规范的js文件，对于其他资源例如 css，图片，或者其他的语法集，比如 jsx， coffee，是没有办法加载的。 这就需要对应的loader将资源转化，加载进来。从字面意思也能看出，loader是用于加载的，它作用于一个个文件上。  \nplugin 用于扩展webpack的功能。它直接作用于 webpack，扩展了它的功能。当然loader也时变相的扩展了 webpack ，但是它只专注于转化文件（transform）这一个领域。而plugin的功能更加的丰富，而不仅局限于资源的加载。\n\n这样一解释基本就知道了loader和plugin功能定义上的区别了。  \n\n### 还有更多(more)\n其实webpack的知识点远不至于此，例如manifest、target、模块依赖等等，有很多东西只有在实际应用中才能了解，之后会在自己项目中应用下来深入下webpack这个工具。\n","source":"_posts/ife学习记录 - 构建工具（二）.md","raw":"---\ntitle: ife学习记录 - 构建工具（二）\ndate: 2016-07-11\ncategories: 构建工具\ntags: [构建工具]\ndescription: 前端工程化，工具少不了，grunt、gulp、webpack、新出的parcel，一个接一个，先熟悉熟悉parcel和webpack。\n---\n# 构建工具（webpack）\n\n## webpack - 时下最热门的模块打包器\nwebpack是一个前端资源加载/打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。  \n<!--more-->\nwebpack很早就出来了，之前也有用过，但是也仅仅限于简单应用，后面用vur-cli脚手架的时候觉得配置还是挺多的，然后就找了些关于vue-cli里webpack配置的资料了解下，也做了点笔记。  \n[webpack-vue-cli配置详解](https://elmerlxy.com/2018/04/29/webpack-vue-cli%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/)\n>## vue-cli 命令行工具\n为单页面应用快速搭建 (SPA) 繁杂的脚手架。它为现代前端工作流提供了 batteries-included 的构建设置。只需要几分钟的时间就可以运行起来并带有热重载、保存时 lint 校验，以及生产环境可用的构建版本。\n\n## webpack文档阅读&实践\n文档嘛就不用说了，当你想要了解一个之前未了解过的技术时，读文档可能是入门最快的方式，而后加上一些实践，基本上对这玩意就会有一个大概的了解。  \n[webpack中文文档](https://webpack.docschina.org/concepts/)  \n### webpack有几个核心概念\n* 入口（entry）\n* 输出（output）\n* 加载器（loader）\n* 插件（plugins）  \n---\n\n### 入口：打包的起始文件。\n这里有两种区分，一种是单页面文件入口，还有一种是多页面文件入口。  \n语法也有区分，单页和多页传参是不一样的，对应对象和数组。\nwebpack.config.js\n```javascript\n//单页面入口\nmodule.exports = {\n  entry: {\n    app: './src/app.js',\n    vendors: './src/vendors.js'\n  }\n};\n//多页面入口\nmodule.exports = {\n  entry: {\n    pageOne: './src/pageOne/index.js',\n    pageTwo: './src/pageTwo/index.js',\n    pageThree: './src/pageThree/index.js'\n  }\n};\n```\n### 输出配置也搭配的入口规则来的\n```javascript\n//单页输出\nmodule.exports = {\n  output: {\n    filename: 'bundle.js',\n    path: '/home/proj/public/assets'\n  }\n};\n//多页输出\nmodule.exports = {\n  entry: {\n    app: './src/app.js',\n    search: './src/search.js'\n  },\n  output: {\n    filename: '[name].js',\n    path: __dirname + '/dist'\n  }\n};\n\n// 写入到硬盘：./dist/app.js, ./dist/search.js\n```\n有个需要注意的地方就是，你可能有需求将输出文件路径配置到cnd上，并在文件末尾加上hash来去除缓存，这里有个publicPath的配置项，可以满足你的需求。  \n```javascript\nmodule.exports = {\n  //...\n  output: {\n    path: '/home/proj/cdn/assets/[hash]',\n    publicPath: 'http://cdn.example.com/assets/[hash]/'\n  }\n};\n```\n关于path和publicPath的区别。这篇webpack解惑讲的很全很清晰。  \n[文章链接](https://www.jianshu.com/p/dcb28b582318)\n>“path”仅仅告诉Webpack结果存储在哪里，然而“publicPath”项则被许多Webpack的插件用于在生产模式下更新内嵌到css、html文件里的url值。\n例如，在localhost（译者注：即本地开发模式）里的css文件中边你可能用“./test.png”这样的url来加载图片，但是在生产模式下“test.png”文件可能会定位到CDN上并且你的Node.js服务器可能是运行在HeroKu上边的。这就意味着在生产环境你必须手动更新所有文件里的url为CDN的路径。\n然而你也可以使用Webpack的“publicPath”选项和一些插件来在生产模式下编译输出文件时自动更新这些url。  \n\n### 加载器(loader) VS 插件(plugin)\n文档解释  \n>loader 类似于其他构建工具中“任务(task)”，并提供了处理前端构建步骤的强大方法。loader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript，或将内联图像转换为 data URL。loader 甚至允许你直接在 JavaScript 模块中 import CSS文件！  \n之前我总感觉loader跟plugin是一个玩意，只不过是语法引用方面有些不同，都是webpack的一些扩展，后面才发现这其中有些复杂的关系。。。  \n\n功能思想上的区别：\n>loader 用于加载某些资源文件。 因为webpack 本身只能打包commonjs规范的js文件，对于其他资源例如 css，图片，或者其他的语法集，比如 jsx， coffee，是没有办法加载的。 这就需要对应的loader将资源转化，加载进来。从字面意思也能看出，loader是用于加载的，它作用于一个个文件上。  \nplugin 用于扩展webpack的功能。它直接作用于 webpack，扩展了它的功能。当然loader也时变相的扩展了 webpack ，但是它只专注于转化文件（transform）这一个领域。而plugin的功能更加的丰富，而不仅局限于资源的加载。\n\n这样一解释基本就知道了loader和plugin功能定义上的区别了。  \n\n### 还有更多(more)\n其实webpack的知识点远不至于此，例如manifest、target、模块依赖等等，有很多东西只有在实际应用中才能了解，之后会在自己项目中应用下来深入下webpack这个工具。\n","slug":"ife学习记录 - 构建工具（二）","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7ws002br2uf6k09eu9i","content":"<h1 id=\"构建工具（webpack）\"><a href=\"#构建工具（webpack）\" class=\"headerlink\" title=\"构建工具（webpack）\"></a>构建工具（webpack）</h1><h2 id=\"webpack-时下最热门的模块打包器\"><a href=\"#webpack-时下最热门的模块打包器\" class=\"headerlink\" title=\"webpack - 时下最热门的模块打包器\"></a>webpack - 时下最热门的模块打包器</h2><p>webpack是一个前端资源加载&#x2F;打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。  </p>\n<span id=\"more\"></span>\n<p>webpack很早就出来了，之前也有用过，但是也仅仅限于简单应用，后面用vur-cli脚手架的时候觉得配置还是挺多的，然后就找了些关于vue-cli里webpack配置的资料了解下，也做了点笔记。<br><a href=\"https://elmerlxy.com/2018/04/29/webpack-vue-cli%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/\">webpack-vue-cli配置详解</a></p>\n<blockquote>\n<h2 id=\"vue-cli-命令行工具\"><a href=\"#vue-cli-命令行工具\" class=\"headerlink\" title=\"vue-cli 命令行工具\"></a>vue-cli 命令行工具</h2><p>为单页面应用快速搭建 (SPA) 繁杂的脚手架。它为现代前端工作流提供了 batteries-included 的构建设置。只需要几分钟的时间就可以运行起来并带有热重载、保存时 lint 校验，以及生产环境可用的构建版本。</p>\n</blockquote>\n<h2 id=\"webpack文档阅读-amp-实践\"><a href=\"#webpack文档阅读-amp-实践\" class=\"headerlink\" title=\"webpack文档阅读&amp;实践\"></a>webpack文档阅读&amp;实践</h2><p>文档嘛就不用说了，当你想要了解一个之前未了解过的技术时，读文档可能是入门最快的方式，而后加上一些实践，基本上对这玩意就会有一个大概的了解。<br><a href=\"https://webpack.docschina.org/concepts/\">webpack中文文档</a>  </p>\n<h3 id=\"webpack有几个核心概念\"><a href=\"#webpack有几个核心概念\" class=\"headerlink\" title=\"webpack有几个核心概念\"></a>webpack有几个核心概念</h3><ul>\n<li>入口（entry）</li>\n<li>输出（output）</li>\n<li>加载器（loader）</li>\n<li>插件（plugins）</li>\n</ul>\n<hr>\n<h3 id=\"入口：打包的起始文件。\"><a href=\"#入口：打包的起始文件。\" class=\"headerlink\" title=\"入口：打包的起始文件。\"></a>入口：打包的起始文件。</h3><p>这里有两种区分，一种是单页面文件入口，还有一种是多页面文件入口。<br>语法也有区分，单页和多页传参是不一样的，对应对象和数组。<br>webpack.config.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//单页面入口</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">app</span>: <span class=\"string\">&#x27;./src/app.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">vendors</span>: <span class=\"string\">&#x27;./src/vendors.js&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//多页面入口</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">pageOne</span>: <span class=\"string\">&#x27;./src/pageOne/index.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">pageTwo</span>: <span class=\"string\">&#x27;./src/pageTwo/index.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">pageThree</span>: <span class=\"string\">&#x27;./src/pageThree/index.js&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"输出配置也搭配的入口规则来的\"><a href=\"#输出配置也搭配的入口规则来的\" class=\"headerlink\" title=\"输出配置也搭配的入口规则来的\"></a>输出配置也搭配的入口规则来的</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//单页输出</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;bundle.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/home/proj/public/assets&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//多页输出</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">app</span>: <span class=\"string\">&#x27;./src/app.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">search</span>: <span class=\"string\">&#x27;./src/search.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: __dirname + <span class=\"string\">&#x27;/dist&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 写入到硬盘：./dist/app.js, ./dist/search.js</span></span><br></pre></td></tr></table></figure>\n<p>有个需要注意的地方就是，你可能有需求将输出文件路径配置到cnd上，并在文件末尾加上hash来去除缓存，这里有个publicPath的配置项，可以满足你的需求。  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/home/proj/cdn/assets/[hash]&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;http://cdn.example.com/assets/[hash]/&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>关于path和publicPath的区别。这篇webpack解惑讲的很全很清晰。<br><a href=\"https://www.jianshu.com/p/dcb28b582318\">文章链接</a></p>\n<blockquote>\n<p>“path”仅仅告诉Webpack结果存储在哪里，然而“publicPath”项则被许多Webpack的插件用于在生产模式下更新内嵌到css、html文件里的url值。<br>例如，在localhost（译者注：即本地开发模式）里的css文件中边你可能用“.&#x2F;test.png”这样的url来加载图片，但是在生产模式下“test.png”文件可能会定位到CDN上并且你的Node.js服务器可能是运行在HeroKu上边的。这就意味着在生产环境你必须手动更新所有文件里的url为CDN的路径。<br>然而你也可以使用Webpack的“publicPath”选项和一些插件来在生产模式下编译输出文件时自动更新这些url。  </p>\n</blockquote>\n<h3 id=\"加载器-loader-VS-插件-plugin\"><a href=\"#加载器-loader-VS-插件-plugin\" class=\"headerlink\" title=\"加载器(loader) VS 插件(plugin)\"></a>加载器(loader) VS 插件(plugin)</h3><p>文档解释  </p>\n<blockquote>\n<p>loader 类似于其他构建工具中“任务(task)”，并提供了处理前端构建步骤的强大方法。loader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript，或将内联图像转换为 data URL。loader 甚至允许你直接在 JavaScript 模块中 import CSS文件！<br>之前我总感觉loader跟plugin是一个玩意，只不过是语法引用方面有些不同，都是webpack的一些扩展，后面才发现这其中有些复杂的关系。。。  </p>\n</blockquote>\n<p>功能思想上的区别：</p>\n<blockquote>\n<p>loader 用于加载某些资源文件。 因为webpack 本身只能打包commonjs规范的js文件，对于其他资源例如 css，图片，或者其他的语法集，比如 jsx， coffee，是没有办法加载的。 这就需要对应的loader将资源转化，加载进来。从字面意思也能看出，loader是用于加载的，它作用于一个个文件上。<br>plugin 用于扩展webpack的功能。它直接作用于 webpack，扩展了它的功能。当然loader也时变相的扩展了 webpack ，但是它只专注于转化文件（transform）这一个领域。而plugin的功能更加的丰富，而不仅局限于资源的加载。</p>\n</blockquote>\n<p>这样一解释基本就知道了loader和plugin功能定义上的区别了。  </p>\n<h3 id=\"还有更多-more\"><a href=\"#还有更多-more\" class=\"headerlink\" title=\"还有更多(more)\"></a>还有更多(more)</h3><p>其实webpack的知识点远不至于此，例如manifest、target、模块依赖等等，有很多东西只有在实际应用中才能了解，之后会在自己项目中应用下来深入下webpack这个工具。</p>\n","site":{"data":{}},"length":2562,"excerpt":"<h1 id=\"构建工具（webpack）\"><a href=\"#构建工具（webpack）\" class=\"headerlink\" title=\"构建工具（webpack）\"></a>构建工具（webpack）</h1><h2 id=\"webpack-时下最热门的模块打包器\"><a href=\"#webpack-时下最热门的模块打包器\" class=\"headerlink\" title=\"webpack - 时下最热门的模块打包器\"></a>webpack - 时下最热门的模块打包器</h2><p>webpack是一个前端资源加载&#x2F;打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。  </p>","more":"<p>webpack很早就出来了，之前也有用过，但是也仅仅限于简单应用，后面用vur-cli脚手架的时候觉得配置还是挺多的，然后就找了些关于vue-cli里webpack配置的资料了解下，也做了点笔记。<br><a href=\"https://elmerlxy.com/2018/04/29/webpack-vue-cli%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/\">webpack-vue-cli配置详解</a></p>\n<blockquote>\n<h2 id=\"vue-cli-命令行工具\"><a href=\"#vue-cli-命令行工具\" class=\"headerlink\" title=\"vue-cli 命令行工具\"></a>vue-cli 命令行工具</h2><p>为单页面应用快速搭建 (SPA) 繁杂的脚手架。它为现代前端工作流提供了 batteries-included 的构建设置。只需要几分钟的时间就可以运行起来并带有热重载、保存时 lint 校验，以及生产环境可用的构建版本。</p>\n</blockquote>\n<h2 id=\"webpack文档阅读-amp-实践\"><a href=\"#webpack文档阅读-amp-实践\" class=\"headerlink\" title=\"webpack文档阅读&amp;实践\"></a>webpack文档阅读&amp;实践</h2><p>文档嘛就不用说了，当你想要了解一个之前未了解过的技术时，读文档可能是入门最快的方式，而后加上一些实践，基本上对这玩意就会有一个大概的了解。<br><a href=\"https://webpack.docschina.org/concepts/\">webpack中文文档</a>  </p>\n<h3 id=\"webpack有几个核心概念\"><a href=\"#webpack有几个核心概念\" class=\"headerlink\" title=\"webpack有几个核心概念\"></a>webpack有几个核心概念</h3><ul>\n<li>入口（entry）</li>\n<li>输出（output）</li>\n<li>加载器（loader）</li>\n<li>插件（plugins）</li>\n</ul>\n<hr>\n<h3 id=\"入口：打包的起始文件。\"><a href=\"#入口：打包的起始文件。\" class=\"headerlink\" title=\"入口：打包的起始文件。\"></a>入口：打包的起始文件。</h3><p>这里有两种区分，一种是单页面文件入口，还有一种是多页面文件入口。<br>语法也有区分，单页和多页传参是不一样的，对应对象和数组。<br>webpack.config.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//单页面入口</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">app</span>: <span class=\"string\">&#x27;./src/app.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">vendors</span>: <span class=\"string\">&#x27;./src/vendors.js&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//多页面入口</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">pageOne</span>: <span class=\"string\">&#x27;./src/pageOne/index.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">pageTwo</span>: <span class=\"string\">&#x27;./src/pageTwo/index.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">pageThree</span>: <span class=\"string\">&#x27;./src/pageThree/index.js&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"输出配置也搭配的入口规则来的\"><a href=\"#输出配置也搭配的入口规则来的\" class=\"headerlink\" title=\"输出配置也搭配的入口规则来的\"></a>输出配置也搭配的入口规则来的</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//单页输出</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;bundle.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/home/proj/public/assets&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//多页输出</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">app</span>: <span class=\"string\">&#x27;./src/app.js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">search</span>: <span class=\"string\">&#x27;./src/search.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: __dirname + <span class=\"string\">&#x27;/dist&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 写入到硬盘：./dist/app.js, ./dist/search.js</span></span><br></pre></td></tr></table></figure>\n<p>有个需要注意的地方就是，你可能有需求将输出文件路径配置到cnd上，并在文件末尾加上hash来去除缓存，这里有个publicPath的配置项，可以满足你的需求。  </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"comment\">//...</span></span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: <span class=\"string\">&#x27;/home/proj/cdn/assets/[hash]&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;http://cdn.example.com/assets/[hash]/&#x27;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>关于path和publicPath的区别。这篇webpack解惑讲的很全很清晰。<br><a href=\"https://www.jianshu.com/p/dcb28b582318\">文章链接</a></p>\n<blockquote>\n<p>“path”仅仅告诉Webpack结果存储在哪里，然而“publicPath”项则被许多Webpack的插件用于在生产模式下更新内嵌到css、html文件里的url值。<br>例如，在localhost（译者注：即本地开发模式）里的css文件中边你可能用“.&#x2F;test.png”这样的url来加载图片，但是在生产模式下“test.png”文件可能会定位到CDN上并且你的Node.js服务器可能是运行在HeroKu上边的。这就意味着在生产环境你必须手动更新所有文件里的url为CDN的路径。<br>然而你也可以使用Webpack的“publicPath”选项和一些插件来在生产模式下编译输出文件时自动更新这些url。  </p>\n</blockquote>\n<h3 id=\"加载器-loader-VS-插件-plugin\"><a href=\"#加载器-loader-VS-插件-plugin\" class=\"headerlink\" title=\"加载器(loader) VS 插件(plugin)\"></a>加载器(loader) VS 插件(plugin)</h3><p>文档解释  </p>\n<blockquote>\n<p>loader 类似于其他构建工具中“任务(task)”，并提供了处理前端构建步骤的强大方法。loader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript，或将内联图像转换为 data URL。loader 甚至允许你直接在 JavaScript 模块中 import CSS文件！<br>之前我总感觉loader跟plugin是一个玩意，只不过是语法引用方面有些不同，都是webpack的一些扩展，后面才发现这其中有些复杂的关系。。。  </p>\n</blockquote>\n<p>功能思想上的区别：</p>\n<blockquote>\n<p>loader 用于加载某些资源文件。 因为webpack 本身只能打包commonjs规范的js文件，对于其他资源例如 css，图片，或者其他的语法集，比如 jsx， coffee，是没有办法加载的。 这就需要对应的loader将资源转化，加载进来。从字面意思也能看出，loader是用于加载的，它作用于一个个文件上。<br>plugin 用于扩展webpack的功能。它直接作用于 webpack，扩展了它的功能。当然loader也时变相的扩展了 webpack ，但是它只专注于转化文件（transform）这一个领域。而plugin的功能更加的丰富，而不仅局限于资源的加载。</p>\n</blockquote>\n<p>这样一解释基本就知道了loader和plugin功能定义上的区别了。  </p>\n<h3 id=\"还有更多-more\"><a href=\"#还有更多-more\" class=\"headerlink\" title=\"还有更多(more)\"></a>还有更多(more)</h3><p>其实webpack的知识点远不至于此，例如manifest、target、模块依赖等等，有很多东西只有在实际应用中才能了解，之后会在自己项目中应用下来深入下webpack这个工具。</p>"},{"title":"node-express搭建简单博客","date":"2019-01-13T16:00:00.000Z","description":"用express框架和MongoDB来搭建个简单的博客系统","_content":"### node-express Blog \nnode实战简单项目\n<!-- more -->\n## 需安装node、mongodb环境\n两步开启服务\n1. 开启MongoDB\n我用的win系统，所以首先到mongo的安装目录下，cmd\n例如：c:/Program Files/MongoDB/Server/3.4/bin<br>\n<code>mongod --dbpath=D:\\Node\\Blog\\db</code><br>\n不知道开启mongo的，可以Google。<br>\nmongo可视化工具：Robo 3T\n2. 启动服务<br>\n<code>node app.js</code>\n***\n目前只写了登录和注册，保存登录状态，其余功能还在建设中。。。\n[github](https://github.com/Tanelmer/node-blog)","source":"_posts/node-express搭建一个简单博客.md","raw":"---\ntitle: node-express搭建简单博客\ndate: 2019-01-14\ncategories: node\ntags: [node,javascript,前端]\ndescription: 用express框架和MongoDB来搭建个简单的博客系统\n---\n### node-express Blog \nnode实战简单项目\n<!-- more -->\n## 需安装node、mongodb环境\n两步开启服务\n1. 开启MongoDB\n我用的win系统，所以首先到mongo的安装目录下，cmd\n例如：c:/Program Files/MongoDB/Server/3.4/bin<br>\n<code>mongod --dbpath=D:\\Node\\Blog\\db</code><br>\n不知道开启mongo的，可以Google。<br>\nmongo可视化工具：Robo 3T\n2. 启动服务<br>\n<code>node app.js</code>\n***\n目前只写了登录和注册，保存登录状态，其余功能还在建设中。。。\n[github](https://github.com/Tanelmer/node-blog)","slug":"node-express搭建一个简单博客","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wt002er2uf4krm9nul","content":"<h3 id=\"node-express-Blog\"><a href=\"#node-express-Blog\" class=\"headerlink\" title=\"node-express Blog\"></a>node-express Blog</h3><p>node实战简单项目</p>\n<span id=\"more\"></span>\n<h2 id=\"需安装node、mongodb环境\"><a href=\"#需安装node、mongodb环境\" class=\"headerlink\" title=\"需安装node、mongodb环境\"></a>需安装node、mongodb环境</h2><p>两步开启服务</p>\n<ol>\n<li>开启MongoDB<br>我用的win系统，所以首先到mongo的安装目录下，cmd<br>例如：c:&#x2F;Program Files&#x2F;MongoDB&#x2F;Server&#x2F;3.4&#x2F;bin<br><br><code>mongod --dbpath=D:\\Node\\Blog\\db</code><br><br>不知道开启mongo的，可以Google。<br><br>mongo可视化工具：Robo 3T</li>\n<li>启动服务<br><br><code>node app.js</code></li>\n</ol>\n<hr>\n<p>目前只写了登录和注册，保存登录状态，其余功能还在建设中。。。<br><a href=\"https://github.com/Tanelmer/node-blog\">github</a></p>\n","site":{"data":{}},"length":271,"excerpt":"<h3 id=\"node-express-Blog\"><a href=\"#node-express-Blog\" class=\"headerlink\" title=\"node-express Blog\"></a>node-express Blog</h3><p>node实战简单项目</p>","more":"<h2 id=\"需安装node、mongodb环境\"><a href=\"#需安装node、mongodb环境\" class=\"headerlink\" title=\"需安装node、mongodb环境\"></a>需安装node、mongodb环境</h2><p>两步开启服务</p>\n<ol>\n<li>开启MongoDB<br>我用的win系统，所以首先到mongo的安装目录下，cmd<br>例如：c:&#x2F;Program Files&#x2F;MongoDB&#x2F;Server&#x2F;3.4&#x2F;bin<br><br><code>mongod --dbpath=D:\\Node\\Blog\\db</code><br><br>不知道开启mongo的，可以Google。<br><br>mongo可视化工具：Robo 3T</li>\n<li>启动服务<br><br><code>node app.js</code></li>\n</ol>\n<hr>\n<p>目前只写了登录和注册，保存登录状态，其余功能还在建设中。。。<br><a href=\"https://github.com/Tanelmer/node-blog\">github</a></p>"},{"title":"聊一聊npm版本管理","date":"2020-04-23T16:00:00.000Z","description":"npm版本管理规范","_content":"> 一段对话  \n-。- ：'npm有发过模块包吗？'  \n=、= ：'发过一些。'  \n-。- ：'那知道npm版本如何管理的吗？版本号的规则呢？'  \n=、= ：'？？？'\n\n<!--more-->\n## npm版本管理 - SemVer\n这个[SemVer](https://github.com/semver/semver/blob/master/semver.md)是npm模块采用的语义化版本控制规范。  \n### 基本格式：  \n\n| Major | Minor | Patch |\n|---|---|---|\n| 主版本号 | 次版本号 | 修订版本号 |\n|x|y|z|\n\n>Patch version Z (x.y.Z | x > 0) MUST be incremented if only backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.  \n\n>Minor version Y (x.Y.z | x > 0) MUST be incremented if new, backwards compatible functionality is introduced to the public API. It MUST be incremented if any public API functionality is marked as deprecated. It MAY be incremented if substantial new functionality or improvements are introduced within the private code. It MAY include patch level changes. Patch version MUST be reset to 0 when minor version is incremented.\n\n>Major version X (X.y.z | X > 0) MUST be incremented if any backwards incompatible changes are introduced to the public API. It MAY also include minor and patch level changes. Patch and minor version MUST be reset to 0 when major version is incremented.\n\n全是英文~~那就只好机器翻译了，总的来说就是。。\n1. 主版本需要更改：是当你新增向下不兼容的功能，大版本更新\n2. 次版本需要更改：是当你新增了向下兼容的功能\n3. 修订版本需要更改：是当你修复了某些有问题的功能\n\n\n### 基本规则\n<code>\"hexo\": \"^3.2.0\"</code>像这种版本号前面的~、^符号，代表啥意思呢？  \n>\"3.2.0\"：指定版本  \n\"~3.2.0\"：小版本迭代，如果有缺省值，缺省部分任意迭代；\n如果没有缺省值，只允许补丁即修订版本（Patch）的迭代  \n\"^3.2.0\"：大版本迭代，允许从左到右的第一段不为0那一版本位+1迭代（左闭右开）；如果有缺省值，且缺省值之前没有不为0的版本位，则允许缺省值的前一位版本+1迭代\n\n这块这一篇[文章](https://www.cnblogs.com/skylor/p/9675646.html)有很多举例，讲的也很透彻。我就mark一下，以防以后忘记了又要到处找资料。。。","source":"_posts/npm版本管理学习.md","raw":"---\ntitle: 聊一聊npm版本管理\ndate: 2020-04-24\ncategories: node\ntags: [node,javascript,前端]\ndescription: npm版本管理规范\n---\n> 一段对话  \n-。- ：'npm有发过模块包吗？'  \n=、= ：'发过一些。'  \n-。- ：'那知道npm版本如何管理的吗？版本号的规则呢？'  \n=、= ：'？？？'\n\n<!--more-->\n## npm版本管理 - SemVer\n这个[SemVer](https://github.com/semver/semver/blob/master/semver.md)是npm模块采用的语义化版本控制规范。  \n### 基本格式：  \n\n| Major | Minor | Patch |\n|---|---|---|\n| 主版本号 | 次版本号 | 修订版本号 |\n|x|y|z|\n\n>Patch version Z (x.y.Z | x > 0) MUST be incremented if only backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.  \n\n>Minor version Y (x.Y.z | x > 0) MUST be incremented if new, backwards compatible functionality is introduced to the public API. It MUST be incremented if any public API functionality is marked as deprecated. It MAY be incremented if substantial new functionality or improvements are introduced within the private code. It MAY include patch level changes. Patch version MUST be reset to 0 when minor version is incremented.\n\n>Major version X (X.y.z | X > 0) MUST be incremented if any backwards incompatible changes are introduced to the public API. It MAY also include minor and patch level changes. Patch and minor version MUST be reset to 0 when major version is incremented.\n\n全是英文~~那就只好机器翻译了，总的来说就是。。\n1. 主版本需要更改：是当你新增向下不兼容的功能，大版本更新\n2. 次版本需要更改：是当你新增了向下兼容的功能\n3. 修订版本需要更改：是当你修复了某些有问题的功能\n\n\n### 基本规则\n<code>\"hexo\": \"^3.2.0\"</code>像这种版本号前面的~、^符号，代表啥意思呢？  \n>\"3.2.0\"：指定版本  \n\"~3.2.0\"：小版本迭代，如果有缺省值，缺省部分任意迭代；\n如果没有缺省值，只允许补丁即修订版本（Patch）的迭代  \n\"^3.2.0\"：大版本迭代，允许从左到右的第一段不为0那一版本位+1迭代（左闭右开）；如果有缺省值，且缺省值之前没有不为0的版本位，则允许缺省值的前一位版本+1迭代\n\n这块这一篇[文章](https://www.cnblogs.com/skylor/p/9675646.html)有很多举例，讲的也很透彻。我就mark一下，以防以后忘记了又要到处找资料。。。","slug":"npm版本管理学习","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wt002hr2ufd6559t99","content":"<blockquote>\n<p>一段对话<br>-。- ：’npm有发过模块包吗？’<br>&#x3D;、&#x3D; ：’发过一些。’<br>-。- ：’那知道npm版本如何管理的吗？版本号的规则呢？’<br>&#x3D;、&#x3D; ：’？？？’</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"npm版本管理-SemVer\"><a href=\"#npm版本管理-SemVer\" class=\"headerlink\" title=\"npm版本管理 - SemVer\"></a>npm版本管理 - SemVer</h2><p>这个<a href=\"https://github.com/semver/semver/blob/master/semver.md\">SemVer</a>是npm模块采用的语义化版本控制规范。  </p>\n<h3 id=\"基本格式：\"><a href=\"#基本格式：\" class=\"headerlink\" title=\"基本格式：\"></a>基本格式：</h3><table>\n<thead>\n<tr>\n<th>Major</th>\n<th>Minor</th>\n<th>Patch</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>主版本号</td>\n<td>次版本号</td>\n<td>修订版本号</td>\n</tr>\n<tr>\n<td>x</td>\n<td>y</td>\n<td>z</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>Patch version Z (x.y.Z | x &gt; 0) MUST be incremented if only backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.  </p>\n</blockquote>\n<blockquote>\n<p>Minor version Y (x.Y.z | x &gt; 0) MUST be incremented if new, backwards compatible functionality is introduced to the public API. It MUST be incremented if any public API functionality is marked as deprecated. It MAY be incremented if substantial new functionality or improvements are introduced within the private code. It MAY include patch level changes. Patch version MUST be reset to 0 when minor version is incremented.</p>\n</blockquote>\n<blockquote>\n<p>Major version X (X.y.z | X &gt; 0) MUST be incremented if any backwards incompatible changes are introduced to the public API. It MAY also include minor and patch level changes. Patch and minor version MUST be reset to 0 when major version is incremented.</p>\n</blockquote>\n<p>全是英文~~那就只好机器翻译了，总的来说就是。。</p>\n<ol>\n<li>主版本需要更改：是当你新增向下不兼容的功能，大版本更新</li>\n<li>次版本需要更改：是当你新增了向下兼容的功能</li>\n<li>修订版本需要更改：是当你修复了某些有问题的功能</li>\n</ol>\n<h3 id=\"基本规则\"><a href=\"#基本规则\" class=\"headerlink\" title=\"基本规则\"></a>基本规则</h3><p><code>\"hexo\": \"^3.2.0\"</code>像这种版本号前面的~、^符号，代表啥意思呢？  </p>\n<blockquote>\n<p>“3.2.0”：指定版本<br>“~3.2.0”：小版本迭代，如果有缺省值，缺省部分任意迭代；<br>如果没有缺省值，只允许补丁即修订版本（Patch）的迭代<br>“^3.2.0”：大版本迭代，允许从左到右的第一段不为0那一版本位+1迭代（左闭右开）；如果有缺省值，且缺省值之前没有不为0的版本位，则允许缺省值的前一位版本+1迭代</p>\n</blockquote>\n<p>这块这一篇<a href=\"https://www.cnblogs.com/skylor/p/9675646.html\">文章</a>有很多举例，讲的也很透彻。我就mark一下，以防以后忘记了又要到处找资料。。。</p>\n","site":{"data":{}},"length":1223,"excerpt":"<blockquote>\n<p>一段对话<br>-。- ：’npm有发过模块包吗？’<br>&#x3D;、&#x3D; ：’发过一些。’<br>-。- ：’那知道npm版本如何管理的吗？版本号的规则呢？’<br>&#x3D;、&#x3D; ：’？？？’</p>\n</blockquote>","more":"<h2 id=\"npm版本管理-SemVer\"><a href=\"#npm版本管理-SemVer\" class=\"headerlink\" title=\"npm版本管理 - SemVer\"></a>npm版本管理 - SemVer</h2><p>这个<a href=\"https://github.com/semver/semver/blob/master/semver.md\">SemVer</a>是npm模块采用的语义化版本控制规范。  </p>\n<h3 id=\"基本格式：\"><a href=\"#基本格式：\" class=\"headerlink\" title=\"基本格式：\"></a>基本格式：</h3><table>\n<thead>\n<tr>\n<th>Major</th>\n<th>Minor</th>\n<th>Patch</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>主版本号</td>\n<td>次版本号</td>\n<td>修订版本号</td>\n</tr>\n<tr>\n<td>x</td>\n<td>y</td>\n<td>z</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>Patch version Z (x.y.Z | x &gt; 0) MUST be incremented if only backwards compatible bug fixes are introduced. A bug fix is defined as an internal change that fixes incorrect behavior.  </p>\n</blockquote>\n<blockquote>\n<p>Minor version Y (x.Y.z | x &gt; 0) MUST be incremented if new, backwards compatible functionality is introduced to the public API. It MUST be incremented if any public API functionality is marked as deprecated. It MAY be incremented if substantial new functionality or improvements are introduced within the private code. It MAY include patch level changes. Patch version MUST be reset to 0 when minor version is incremented.</p>\n</blockquote>\n<blockquote>\n<p>Major version X (X.y.z | X &gt; 0) MUST be incremented if any backwards incompatible changes are introduced to the public API. It MAY also include minor and patch level changes. Patch and minor version MUST be reset to 0 when major version is incremented.</p>\n</blockquote>\n<p>全是英文~~那就只好机器翻译了，总的来说就是。。</p>\n<ol>\n<li>主版本需要更改：是当你新增向下不兼容的功能，大版本更新</li>\n<li>次版本需要更改：是当你新增了向下兼容的功能</li>\n<li>修订版本需要更改：是当你修复了某些有问题的功能</li>\n</ol>\n<h3 id=\"基本规则\"><a href=\"#基本规则\" class=\"headerlink\" title=\"基本规则\"></a>基本规则</h3><p><code>\"hexo\": \"^3.2.0\"</code>像这种版本号前面的~、^符号，代表啥意思呢？  </p>\n<blockquote>\n<p>“3.2.0”：指定版本<br>“~3.2.0”：小版本迭代，如果有缺省值，缺省部分任意迭代；<br>如果没有缺省值，只允许补丁即修订版本（Patch）的迭代<br>“^3.2.0”：大版本迭代，允许从左到右的第一段不为0那一版本位+1迭代（左闭右开）；如果有缺省值，且缺省值之前没有不为0的版本位，则允许缺省值的前一位版本+1迭代</p>\n</blockquote>\n<p>这块这一篇<a href=\"https://www.cnblogs.com/skylor/p/9675646.html\">文章</a>有很多举例，讲的也很透彻。我就mark一下，以防以后忘记了又要到处找资料。。。</p>"},{"title":"JQuery-rolling无缝向上滚动","date":"2016-07-08T16:00:00.000Z","description":"简单的jQuery无缝向上滚动效果演示","_content":"### 对于JQuery-rolling插件的思考\n确实~ 我是个菜鸟，这点不用多说~ 大神请绕道，不然就班门弄斧了~~\n\n<!--more-->\n*应用场景：*一般用于信息展示窗口 向上无缝滚动  > [演示地址](http://www.jq22.com/yanshi6631)\n\n*大致实现思路：*用animate往上滚（marginTop） 1px，需要注意的是动画回调里写的玩意，这是实现无缝的精华,然后就是跑定时器，为啥要用遍历去包裹定时器我还没弄懂，我去掉遍历demo跑起来也没问题，然后看遍历影响的是intId这个定时器对象数组，估计是出于性能方面的考究，清除定时器只清除对应的？还不是特别懂，希望有懂的朋友告知，然后继续学习吧~\n\n*感悟：*之前在公司也有写过这种业务需求的小插件，思路大体类似，用的scrollTop这个属性，这玩意不好的地方就是会产生滚动条，无缝实现起来没那么容易，而且animate动画不支持，然后就不流畅~，滚一行是一行，滚到底了又重新回到顶上继续滚，然后突然觉得**对于一个问题，想出解决办法可能不是难事，想出最佳的解决办法才是比较难的~**，所以关于思想，算法的考虑就尤为重要了吧~算法=。=~~\n***\nJavaScript：\n```javascript\n// JavaScript Document\n\t(function($){\n\t\t$.fn.myScroll = function(options){\n\t\t//默认配置\n\t\tvar defaults = {\n\t\t\tspeed:40,  //滚动速度,值越大速度越慢\n\t\t\trowHeight:24 //每行的高度\n\t\t};\n\t\t\n\t\tvar opts = $.extend({}, defaults, options),intId = [];\n\t\t\n\t\tfunction marquee(obj, step){\n\t\t\n\t\t\tobj.find(\"ul\").animate({\n\t\t\t\tmarginTop: '-=1'\n\t\t\t},0,function(){\n\t\t\t\t\tvar s = Math.abs(parseInt($(this).css(\"margin-top\")));\n\t\t\t\t\tif(s >= step){\n\t\t\t\t\t\t$(this).find(\"li\").slice(0, 1).appendTo($(this));\n\t\t\t\t\t\t$(this).css(\"margin-top\", 0);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tthis.each(function(i){\n\t\t\t\tvar sh = opts[\"rowHeight\"],speed = opts[\"speed\"],_this = $(this);\n\t\t\t\tintId[i] = setInterval(function(){\n\t\t\t\t\tif(_this.find(\"ul\").height()<=_this.height()){\n\t\t\t\t\t\tclearInterval(intId[i]);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tmarquee(_this, sh);\n\t\t\t\t\t}\n\t\t\t\t}, speed);\n\t\n\t\t\t\t_this.hover(function(){\n\t\t\t\t\tclearInterval(intId[i]);\n\t\t\t\t},function(){\n\t\t\t\t\tintId[i] = setInterval(function(){\n\t\t\t\t\t\tif(_this.find(\"ul\").height()<=_this.height()){\n\t\t\t\t\t\t\tclearInterval(intId[i]);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tmarquee(_this, sh);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, speed);\n\t\t\t\t});\n\t\t\t\n\t\t\t});\n\t\n\t\t}\n\t\n\t})(jQuery);\n```\n","source":"_posts/scroll-JQuery.md","raw":"---\ntitle: JQuery-rolling无缝向上滚动\ndate: 2016-07-09\ncategories: 前端\ntags: [JavaScript，JQuery]\ndescription: 简单的jQuery无缝向上滚动效果演示\n---\n### 对于JQuery-rolling插件的思考\n确实~ 我是个菜鸟，这点不用多说~ 大神请绕道，不然就班门弄斧了~~\n\n<!--more-->\n*应用场景：*一般用于信息展示窗口 向上无缝滚动  > [演示地址](http://www.jq22.com/yanshi6631)\n\n*大致实现思路：*用animate往上滚（marginTop） 1px，需要注意的是动画回调里写的玩意，这是实现无缝的精华,然后就是跑定时器，为啥要用遍历去包裹定时器我还没弄懂，我去掉遍历demo跑起来也没问题，然后看遍历影响的是intId这个定时器对象数组，估计是出于性能方面的考究，清除定时器只清除对应的？还不是特别懂，希望有懂的朋友告知，然后继续学习吧~\n\n*感悟：*之前在公司也有写过这种业务需求的小插件，思路大体类似，用的scrollTop这个属性，这玩意不好的地方就是会产生滚动条，无缝实现起来没那么容易，而且animate动画不支持，然后就不流畅~，滚一行是一行，滚到底了又重新回到顶上继续滚，然后突然觉得**对于一个问题，想出解决办法可能不是难事，想出最佳的解决办法才是比较难的~**，所以关于思想，算法的考虑就尤为重要了吧~算法=。=~~\n***\nJavaScript：\n```javascript\n// JavaScript Document\n\t(function($){\n\t\t$.fn.myScroll = function(options){\n\t\t//默认配置\n\t\tvar defaults = {\n\t\t\tspeed:40,  //滚动速度,值越大速度越慢\n\t\t\trowHeight:24 //每行的高度\n\t\t};\n\t\t\n\t\tvar opts = $.extend({}, defaults, options),intId = [];\n\t\t\n\t\tfunction marquee(obj, step){\n\t\t\n\t\t\tobj.find(\"ul\").animate({\n\t\t\t\tmarginTop: '-=1'\n\t\t\t},0,function(){\n\t\t\t\t\tvar s = Math.abs(parseInt($(this).css(\"margin-top\")));\n\t\t\t\t\tif(s >= step){\n\t\t\t\t\t\t$(this).find(\"li\").slice(0, 1).appendTo($(this));\n\t\t\t\t\t\t$(this).css(\"margin-top\", 0);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tthis.each(function(i){\n\t\t\t\tvar sh = opts[\"rowHeight\"],speed = opts[\"speed\"],_this = $(this);\n\t\t\t\tintId[i] = setInterval(function(){\n\t\t\t\t\tif(_this.find(\"ul\").height()<=_this.height()){\n\t\t\t\t\t\tclearInterval(intId[i]);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tmarquee(_this, sh);\n\t\t\t\t\t}\n\t\t\t\t}, speed);\n\t\n\t\t\t\t_this.hover(function(){\n\t\t\t\t\tclearInterval(intId[i]);\n\t\t\t\t},function(){\n\t\t\t\t\tintId[i] = setInterval(function(){\n\t\t\t\t\t\tif(_this.find(\"ul\").height()<=_this.height()){\n\t\t\t\t\t\t\tclearInterval(intId[i]);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tmarquee(_this, sh);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, speed);\n\t\t\t\t});\n\t\t\t\n\t\t\t});\n\t\n\t\t}\n\t\n\t})(jQuery);\n```\n","slug":"scroll-JQuery","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wt002kr2ufe5pcd9z0","content":"<h3 id=\"对于JQuery-rolling插件的思考\"><a href=\"#对于JQuery-rolling插件的思考\" class=\"headerlink\" title=\"对于JQuery-rolling插件的思考\"></a>对于JQuery-rolling插件的思考</h3><p>确实~ 我是个菜鸟，这点不用多说~ 大神请绕道，不然就班门弄斧了~~</p>\n<span id=\"more\"></span>\n<p><em>应用场景：</em>一般用于信息展示窗口 向上无缝滚动  &gt; <a href=\"http://www.jq22.com/yanshi6631\">演示地址</a></p>\n<p><em>大致实现思路：</em>用animate往上滚（marginTop） 1px，需要注意的是动画回调里写的玩意，这是实现无缝的精华,然后就是跑定时器，为啥要用遍历去包裹定时器我还没弄懂，我去掉遍历demo跑起来也没问题，然后看遍历影响的是intId这个定时器对象数组，估计是出于性能方面的考究，清除定时器只清除对应的？还不是特别懂，希望有懂的朋友告知，然后继续学习吧~</p>\n<p><em>感悟：</em>之前在公司也有写过这种业务需求的小插件，思路大体类似，用的scrollTop这个属性，这玩意不好的地方就是会产生滚动条，无缝实现起来没那么容易，而且animate动画不支持，然后就不流畅<del>，滚一行是一行，滚到底了又重新回到顶上继续滚，然后突然觉得**对于一个问题，想出解决办法可能不是难事，想出最佳的解决办法才是比较难的</del>**，所以关于思想，算法的考虑就尤为重要了吧~算法&#x3D;。&#x3D;~~</p>\n<hr>\n<p>JavaScript：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// JavaScript Document</span></span><br><span class=\"line\">\t(<span class=\"keyword\">function</span>(<span class=\"params\">$</span>)&#123;</span><br><span class=\"line\">\t\t$.fn.<span class=\"property\">myScroll</span> = <span class=\"keyword\">function</span>(<span class=\"params\">options</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//默认配置</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> defaults = &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">speed</span>:<span class=\"number\">40</span>,  <span class=\"comment\">//滚动速度,值越大速度越慢</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">rowHeight</span>:<span class=\"number\">24</span> <span class=\"comment\">//每行的高度</span></span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> opts = $.<span class=\"title function_\">extend</span>(&#123;&#125;, defaults, options),intId = [];</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">marquee</span>(<span class=\"params\">obj, step</span>)&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\tobj.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">animate</span>(&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">marginTop</span>: <span class=\"string\">&#x27;-=1&#x27;</span></span><br><span class=\"line\">\t\t\t&#125;,<span class=\"number\">0</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> s = <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"built_in\">parseInt</span>($(<span class=\"variable language_\">this</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;margin-top&quot;</span>)));</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(s &gt;= step)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>).<span class=\"title function_\">appendTo</span>($(<span class=\"variable language_\">this</span>));</span><br><span class=\"line\">\t\t\t\t\t\t$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;margin-top&quot;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span>(<span class=\"params\">i</span>)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> sh = opts[<span class=\"string\">&quot;rowHeight&quot;</span>],speed = opts[<span class=\"string\">&quot;speed&quot;</span>],_this = $(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">\t\t\t\tintId[i] = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(_this.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">height</span>()&lt;=_this.<span class=\"title function_\">height</span>())&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">clearInterval</span>(intId[i]);</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"title function_\">marquee</span>(_this, sh);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;, speed);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t\t\t_this.<span class=\"title function_\">hover</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">clearInterval</span>(intId[i]);</span><br><span class=\"line\">\t\t\t\t&#125;,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\tintId[i] = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(_this.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">height</span>()&lt;=_this.<span class=\"title function_\">height</span>())&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"built_in\">clearInterval</span>(intId[i]);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"title function_\">marquee</span>(_this, sh);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;, speed);</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;)(jQuery);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":1663,"excerpt":"<h3 id=\"对于JQuery-rolling插件的思考\"><a href=\"#对于JQuery-rolling插件的思考\" class=\"headerlink\" title=\"对于JQuery-rolling插件的思考\"></a>对于JQuery-rolling插件的思考</h3><p>确实~ 我是个菜鸟，这点不用多说~ 大神请绕道，不然就班门弄斧了~~</p>","more":"<p><em>应用场景：</em>一般用于信息展示窗口 向上无缝滚动  &gt; <a href=\"http://www.jq22.com/yanshi6631\">演示地址</a></p>\n<p><em>大致实现思路：</em>用animate往上滚（marginTop） 1px，需要注意的是动画回调里写的玩意，这是实现无缝的精华,然后就是跑定时器，为啥要用遍历去包裹定时器我还没弄懂，我去掉遍历demo跑起来也没问题，然后看遍历影响的是intId这个定时器对象数组，估计是出于性能方面的考究，清除定时器只清除对应的？还不是特别懂，希望有懂的朋友告知，然后继续学习吧~</p>\n<p><em>感悟：</em>之前在公司也有写过这种业务需求的小插件，思路大体类似，用的scrollTop这个属性，这玩意不好的地方就是会产生滚动条，无缝实现起来没那么容易，而且animate动画不支持，然后就不流畅<del>，滚一行是一行，滚到底了又重新回到顶上继续滚，然后突然觉得**对于一个问题，想出解决办法可能不是难事，想出最佳的解决办法才是比较难的</del>**，所以关于思想，算法的考虑就尤为重要了吧~算法&#x3D;。&#x3D;~~</p>\n<hr>\n<p>JavaScript：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// JavaScript Document</span></span><br><span class=\"line\">\t(<span class=\"keyword\">function</span>(<span class=\"params\">$</span>)&#123;</span><br><span class=\"line\">\t\t$.fn.<span class=\"property\">myScroll</span> = <span class=\"keyword\">function</span>(<span class=\"params\">options</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//默认配置</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> defaults = &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">speed</span>:<span class=\"number\">40</span>,  <span class=\"comment\">//滚动速度,值越大速度越慢</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">rowHeight</span>:<span class=\"number\">24</span> <span class=\"comment\">//每行的高度</span></span><br><span class=\"line\">\t\t&#125;;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">var</span> opts = $.<span class=\"title function_\">extend</span>(&#123;&#125;, defaults, options),intId = [];</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">function</span> <span class=\"title function_\">marquee</span>(<span class=\"params\">obj, step</span>)&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\tobj.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">animate</span>(&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">marginTop</span>: <span class=\"string\">&#x27;-=1&#x27;</span></span><br><span class=\"line\">\t\t\t&#125;,<span class=\"number\">0</span>,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> s = <span class=\"title class_\">Math</span>.<span class=\"title function_\">abs</span>(<span class=\"built_in\">parseInt</span>($(<span class=\"variable language_\">this</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;margin-top&quot;</span>)));</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(s &gt;= step)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&quot;li&quot;</span>).<span class=\"title function_\">slice</span>(<span class=\"number\">0</span>, <span class=\"number\">1</span>).<span class=\"title function_\">appendTo</span>($(<span class=\"variable language_\">this</span>));</span><br><span class=\"line\">\t\t\t\t\t\t$(<span class=\"variable language_\">this</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;margin-top&quot;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"variable language_\">this</span>.<span class=\"title function_\">each</span>(<span class=\"keyword\">function</span>(<span class=\"params\">i</span>)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">var</span> sh = opts[<span class=\"string\">&quot;rowHeight&quot;</span>],speed = opts[<span class=\"string\">&quot;speed&quot;</span>],_this = $(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">\t\t\t\tintId[i] = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(_this.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">height</span>()&lt;=_this.<span class=\"title function_\">height</span>())&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">clearInterval</span>(intId[i]);</span><br><span class=\"line\">\t\t\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"title function_\">marquee</span>(_this, sh);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;, speed);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t\t\t_this.<span class=\"title function_\">hover</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">clearInterval</span>(intId[i]);</span><br><span class=\"line\">\t\t\t\t&#125;,<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\tintId[i] = <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(_this.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;ul&quot;</span>).<span class=\"title function_\">height</span>()&lt;=_this.<span class=\"title function_\">height</span>())&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"built_in\">clearInterval</span>(intId[i]);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"title function_\">marquee</span>(_this, sh);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125;, speed);</span><br><span class=\"line\">\t\t\t\t&#125;);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;)(jQuery);</span><br></pre></td></tr></table></figure>"},{"title":"Hexo主题TKL更换next","date":"2018-05-12T16:00:00.000Z","description":"next真的很好看，好看的不行，强力推荐。。","_content":"换了next主题，博客第一感觉真的清爽了好多，不愧为github上人气最高的hexo主题，NB好吧。。\n<!-- more -->\n弄到凌晨一两点这时候，说实话我是真的困了，还有比标签和分类没弄好，等明天醒来了再弄吧。\n## 配置\n这里先附上主题链接，以及官方安装配置教程。。睡觉去了~~~。\n[next - github](https://github.com/iissnan/hexo-theme-next)\n[安装配置教程](http://theme-next.iissnan.com/theme-settings.html#use-bg-animation)","source":"_posts/theme.md","raw":"---\ntitle: Hexo主题TKL更换next\ndate: 2018-05-13\ncategories: hexo\ntags: [hexo]\ndescription: next真的很好看，好看的不行，强力推荐。。\n---\n换了next主题，博客第一感觉真的清爽了好多，不愧为github上人气最高的hexo主题，NB好吧。。\n<!-- more -->\n弄到凌晨一两点这时候，说实话我是真的困了，还有比标签和分类没弄好，等明天醒来了再弄吧。\n## 配置\n这里先附上主题链接，以及官方安装配置教程。。睡觉去了~~~。\n[next - github](https://github.com/iissnan/hexo-theme-next)\n[安装配置教程](http://theme-next.iissnan.com/theme-settings.html#use-bg-animation)","slug":"theme","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wu002nr2uf950r9hnn","content":"<p>换了next主题，博客第一感觉真的清爽了好多，不愧为github上人气最高的hexo主题，NB好吧。。</p>\n<span id=\"more\"></span>\n<p>弄到凌晨一两点这时候，说实话我是真的困了，还有比标签和分类没弄好，等明天醒来了再弄吧。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>这里先附上主题链接，以及官方安装配置教程。。睡觉去了~~~。<br><a href=\"https://github.com/iissnan/hexo-theme-next\">next - github</a><br><a href=\"http://theme-next.iissnan.com/theme-settings.html#use-bg-animation\">安装配置教程</a></p>\n","site":{"data":{}},"length":143,"excerpt":"<p>换了next主题，博客第一感觉真的清爽了好多，不愧为github上人气最高的hexo主题，NB好吧。。</p>","more":"<p>弄到凌晨一两点这时候，说实话我是真的困了，还有比标签和分类没弄好，等明天醒来了再弄吧。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>这里先附上主题链接，以及官方安装配置教程。。睡觉去了~~~。<br><a href=\"https://github.com/iissnan/hexo-theme-next\">next - github</a><br><a href=\"http://theme-next.iissnan.com/theme-settings.html#use-bg-animation\">安装配置教程</a></p>"},{"title":"鸡年大吉","date":"2017-02-13T16:00:00.000Z","description":"2017，农历新年，拼搏，加油","_content":"### 新年快乐\n祝大家新年快乐，鸡年大吉，技术越来越牛，生活越来越好，也希望自己在新的一年里，不负韶华，努力拼搏，过上自己想要的生活。\n<!-- more -->\n\n***\n\n%e9%b8%a1%e5%b9%b4%e5%a4%a7%e5%90%89\n%e6%81%ad%e5%96%9c%e5%8f%91%e8%b4%a2\n%e6%a8%aa%e6%89%b9%ef%bc%9a%e6%96%b0%e5%b9%b4%e5%bf%ab%e4%b9%90","source":"_posts/new year.md","raw":"---\ntitle: 鸡年大吉\ndate: 2017-02-14\ncategories: 生活随笔\ntags: [随笔]\ndescription: 2017，农历新年，拼搏，加油\n---\n### 新年快乐\n祝大家新年快乐，鸡年大吉，技术越来越牛，生活越来越好，也希望自己在新的一年里，不负韶华，努力拼搏，过上自己想要的生活。\n<!-- more -->\n\n***\n\n%e9%b8%a1%e5%b9%b4%e5%a4%a7%e5%90%89\n%e6%81%ad%e5%96%9c%e5%8f%91%e8%b4%a2\n%e6%a8%aa%e6%89%b9%ef%bc%9a%e6%96%b0%e5%b9%b4%e5%bf%ab%e4%b9%90","slug":"new year","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wu002pr2uf495g1i2s","content":"<h3 id=\"新年快乐\"><a href=\"#新年快乐\" class=\"headerlink\" title=\"新年快乐\"></a>新年快乐</h3><p>祝大家新年快乐，鸡年大吉，技术越来越牛，生活越来越好，也希望自己在新的一年里，不负韶华，努力拼搏，过上自己想要的生活。</p>\n<span id=\"more\"></span>\n\n<hr>\n<p>%e9%b8%a1%e5%b9%b4%e5%a4%a7%e5%90%89<br>%e6%81%ad%e5%96%9c%e5%8f%91%e8%b4%a2<br>%e6%a8%aa%e6%89%b9%ef%bc%9a%e6%96%b0%e5%b9%b4%e5%bf%ab%e4%b9%90</p>\n","site":{"data":{}},"length":198,"excerpt":"<h3 id=\"新年快乐\"><a href=\"#新年快乐\" class=\"headerlink\" title=\"新年快乐\"></a>新年快乐</h3><p>祝大家新年快乐，鸡年大吉，技术越来越牛，生活越来越好，也希望自己在新的一年里，不负韶华，努力拼搏，过上自己想要的生活。</p>","more":"<hr>\n<p>%e9%b8%a1%e5%b9%b4%e5%a4%a7%e5%90%89<br>%e6%81%ad%e5%96%9c%e5%8f%91%e8%b4%a2<br>%e6%a8%aa%e6%89%b9%ef%bc%9a%e6%96%b0%e5%b9%b4%e5%bf%ab%e4%b9%90</p>"},{"title":"移动前端tap事件点透解决方案","date":"2017-11-08T16:00:00.000Z","description":"tap点透解决","_content":"### 移动前端tap事件问题解决或替代方案\ntap轻触事件，对于做移动前端的同学们大多来说都不陌生了，但zepto在封装tap的时候有点小瑕疵，以至于产生了tap点透，那什么是tap点透呢？\n<!-- more -->\n***\n## 问题描述：\ntap事件的出现是为了解决移动click延迟300ms响应问题，而点透问题的产生是因为zepto把touch事件绑定在document上，所以冒泡就等于阻止不了，因为document已经在最上层了，所以tap事件在触发时有可能触发到非当前层级，以至出现点透。\n## 解决：\n1. 使用替代方案，github有个fastclick.js，这个库能替代click事件，解决了click延迟响应。\n> 因为他事件是绑定到document上，先touchstart然后touchend，根据touchstart的event参数判断该dom是否注册了tap事件，有就触发，于是问题来了，zepto的touchend这里有个event参数，我们event.preventDefault()，这里本来都是最上层了，这就代码压根没什么用，但是fastclick处理办法不可谓不巧妙，这个库直接在touchend的时候就触发了dom上的click事件而替换了本来的触发时间，意思是原来要350-400ms执行的代码突然就移到了50-100ms，然后这里虽然使用了touch事件但是touch事件是绑定到了具体dom而不是document上，所以e.preventDefault是有效的，我们可以阻止冒泡，也可以阻止浏览器默认事件，这个才是fastclick的精华部分，不可谓不高啊！！！\ngithub地址:[https://github.com/ftlabs/fastclick](https://github.com/ftlabs/fastclick)\n\n2. touchend事件替代tap事件\n因为tap是绑在document上，所以才会点透，touchend可绑在dom上，用even.preventDefault()可以阻止冒泡，防止点透。\n","source":"_posts/tap点透处理.md","raw":"---\ntitle: 移动前端tap事件点透解决方案\ndate: 2017-11-09\ncategories: 前端\ntags: [JavaScript,前端]\ndescription: tap点透解决\n---\n### 移动前端tap事件问题解决或替代方案\ntap轻触事件，对于做移动前端的同学们大多来说都不陌生了，但zepto在封装tap的时候有点小瑕疵，以至于产生了tap点透，那什么是tap点透呢？\n<!-- more -->\n***\n## 问题描述：\ntap事件的出现是为了解决移动click延迟300ms响应问题，而点透问题的产生是因为zepto把touch事件绑定在document上，所以冒泡就等于阻止不了，因为document已经在最上层了，所以tap事件在触发时有可能触发到非当前层级，以至出现点透。\n## 解决：\n1. 使用替代方案，github有个fastclick.js，这个库能替代click事件，解决了click延迟响应。\n> 因为他事件是绑定到document上，先touchstart然后touchend，根据touchstart的event参数判断该dom是否注册了tap事件，有就触发，于是问题来了，zepto的touchend这里有个event参数，我们event.preventDefault()，这里本来都是最上层了，这就代码压根没什么用，但是fastclick处理办法不可谓不巧妙，这个库直接在touchend的时候就触发了dom上的click事件而替换了本来的触发时间，意思是原来要350-400ms执行的代码突然就移到了50-100ms，然后这里虽然使用了touch事件但是touch事件是绑定到了具体dom而不是document上，所以e.preventDefault是有效的，我们可以阻止冒泡，也可以阻止浏览器默认事件，这个才是fastclick的精华部分，不可谓不高啊！！！\ngithub地址:[https://github.com/ftlabs/fastclick](https://github.com/ftlabs/fastclick)\n\n2. touchend事件替代tap事件\n因为tap是绑在document上，所以才会点透，touchend可绑在dom上，用even.preventDefault()可以阻止冒泡，防止点透。\n","slug":"tap点透处理","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wu002tr2uf8jklcz03","content":"<h3 id=\"移动前端tap事件问题解决或替代方案\"><a href=\"#移动前端tap事件问题解决或替代方案\" class=\"headerlink\" title=\"移动前端tap事件问题解决或替代方案\"></a>移动前端tap事件问题解决或替代方案</h3><p>tap轻触事件，对于做移动前端的同学们大多来说都不陌生了，但zepto在封装tap的时候有点小瑕疵，以至于产生了tap点透，那什么是tap点透呢？</p>\n<span id=\"more\"></span>\n<hr>\n<h2 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h2><p>tap事件的出现是为了解决移动click延迟300ms响应问题，而点透问题的产生是因为zepto把touch事件绑定在document上，所以冒泡就等于阻止不了，因为document已经在最上层了，所以tap事件在触发时有可能触发到非当前层级，以至出现点透。</p>\n<h2 id=\"解决：\"><a href=\"#解决：\" class=\"headerlink\" title=\"解决：\"></a>解决：</h2><ol>\n<li><p>使用替代方案，github有个fastclick.js，这个库能替代click事件，解决了click延迟响应。</p>\n<blockquote>\n<p>因为他事件是绑定到document上，先touchstart然后touchend，根据touchstart的event参数判断该dom是否注册了tap事件，有就触发，于是问题来了，zepto的touchend这里有个event参数，我们event.preventDefault()，这里本来都是最上层了，这就代码压根没什么用，但是fastclick处理办法不可谓不巧妙，这个库直接在touchend的时候就触发了dom上的click事件而替换了本来的触发时间，意思是原来要350-400ms执行的代码突然就移到了50-100ms，然后这里虽然使用了touch事件但是touch事件是绑定到了具体dom而不是document上，所以e.preventDefault是有效的，我们可以阻止冒泡，也可以阻止浏览器默认事件，这个才是fastclick的精华部分，不可谓不高啊！！！<br>github地址:<a href=\"https://github.com/ftlabs/fastclick\">https://github.com/ftlabs/fastclick</a></p>\n</blockquote>\n</li>\n<li><p>touchend事件替代tap事件<br>因为tap是绑在document上，所以才会点透，touchend可绑在dom上，用even.preventDefault()可以阻止冒泡，防止点透。</p>\n</li>\n</ol>\n","site":{"data":{}},"length":805,"excerpt":"<h3 id=\"移动前端tap事件问题解决或替代方案\"><a href=\"#移动前端tap事件问题解决或替代方案\" class=\"headerlink\" title=\"移动前端tap事件问题解决或替代方案\"></a>移动前端tap事件问题解决或替代方案</h3><p>tap轻触事件，对于做移动前端的同学们大多来说都不陌生了，但zepto在封装tap的时候有点小瑕疵，以至于产生了tap点透，那什么是tap点透呢？</p>","more":"<hr>\n<h2 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h2><p>tap事件的出现是为了解决移动click延迟300ms响应问题，而点透问题的产生是因为zepto把touch事件绑定在document上，所以冒泡就等于阻止不了，因为document已经在最上层了，所以tap事件在触发时有可能触发到非当前层级，以至出现点透。</p>\n<h2 id=\"解决：\"><a href=\"#解决：\" class=\"headerlink\" title=\"解决：\"></a>解决：</h2><ol>\n<li><p>使用替代方案，github有个fastclick.js，这个库能替代click事件，解决了click延迟响应。</p>\n<blockquote>\n<p>因为他事件是绑定到document上，先touchstart然后touchend，根据touchstart的event参数判断该dom是否注册了tap事件，有就触发，于是问题来了，zepto的touchend这里有个event参数，我们event.preventDefault()，这里本来都是最上层了，这就代码压根没什么用，但是fastclick处理办法不可谓不巧妙，这个库直接在touchend的时候就触发了dom上的click事件而替换了本来的触发时间，意思是原来要350-400ms执行的代码突然就移到了50-100ms，然后这里虽然使用了touch事件但是touch事件是绑定到了具体dom而不是document上，所以e.preventDefault是有效的，我们可以阻止冒泡，也可以阻止浏览器默认事件，这个才是fastclick的精华部分，不可谓不高啊！！！<br>github地址:<a href=\"https://github.com/ftlabs/fastclick\">https://github.com/ftlabs/fastclick</a></p>\n</blockquote>\n</li>\n<li><p>touchend事件替代tap事件<br>因为tap是绑在document上，所以才会点透，touchend可绑在dom上，用even.preventDefault()可以阻止冒泡，防止点透。</p>\n</li>\n</ol>"},{"title":"websocket之即时通讯","date":"2017-06-21T16:00:00.000Z","description":"html5新增websocket协议研究。。","_content":"# websocket学习研究记录\n1. 什么是websocket\n2. websocket出现前的即时通讯技术\n3. websocket即时通讯，socket.io\n4. mqtt了解\n5. 简单实践一 - 在线聊天室\n<!-- more -->\n\n---\n## 什么是websocket？\n>WebSocket是HTML5开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。\nWebSocket协议支持（在受控环境中运行不受信任的代码的）客户端与（选择加入该代码的通信的）远程主机之间进行全双工通信。用于此的安全模型是Web浏览器常用的基于原始的安全模式。 协议包括一个开放的握手以及随后的TCP层上的消息帧。 该技术的目标是为基于浏览器和服务器进行双向通信的（服务器不能依赖于打开多个HTTP连接（例如，使用XMLHttpRequest或iframe和长轮询））应用程序提供一种通信机制。\n\n\n 从引用看来websokcet是一种网络通讯协议，它实现了浏览器与服务器全双工(full-duplex)通信——允许服务器主动发送信息给客户端。\n 既然是网络通讯协议，那它跟http有啥关系呢？\n 按我的理解吧，它们基本没多大关系，要有关系也只能说都基于tcp协议来建立连接的。\n 也有些人把它看做是对于http协议的完善，仁者见仁智者见智吧。\n\n---\n## websocket出现前的即时通讯方案\n websocket出现前的即时通讯方案：ajax短轮询，comet\n 两个名词，<code>ajax短轮询</code>、<code>comet</code>\n 1.\tajax短轮询\n \tajax 定时（可以使用JS的 setTimeout 函数）去服务器查询是否有新消息，从而进行增量式的更新。这种方式间隔多长时间再查询是个问题，因为性能和即时性是反比关系。间隔太短，海量的请求会拖垮服务器，间隔太长，服务器上的新数据就需要更长的时间才能到达客户机。\n\t优点：逻辑简单；\n\t缺点：大多数请求是无效请求，在轮询很频繁的情况下对服务器的压力很大；\n 2. comet - 一种hack技术\n > 以即时通信为代表的web应用程序对数据的Low Latency要求，传统的基于轮询的方式已经无法满足，而且也会带来不好的用户体验。于是一种基于<code>http长连接</code>的“服务器推”技术便被hack出来。这种技术被命名为Comet，这个术语由Dojo Toolkit 的项目主管Alex Russell在博文Comet: Low Latency Data for the Browser首次提出，并沿用下来。\n\n <b>原理</b>：http长连接。客户端与服务器端保持一个长连接，只有客户端需要的数据更新时，服务器才主动将数据推送给客户端。\n comet实现又有两种方式：一种是基于ajax的长轮询，一种是基于隐藏的iframe流技术。\n\n \t- ajax的长轮询(long polling)\n \t浏览器发出XMLHttpRequest 请求，服务器端接收到请求后，会阻塞请求直到有数据或者超时才返回，浏览器JS在处理请求返回信息（超时或有效数据）后再次发出请求，重新建立连接。在此期间服务器端可能已经有新的数据到达，服务器会选择把数据保存，直到重新建立连接，浏览器会把所有数据一次性取回。\n\t![ajax长轮询图解](http://www.52im.net/data/attachment/forum/201605/26/145816g98sb33ceq2669my.jpg)\n \t  - 优点：任意浏览器都可用，实时性好，无消息的情况下不会进行频繁的请求\n\t  - 缺点：连接创建销毁操作还是比较频繁，服务器维持着连接比较消耗资源\n\t  - 案例：微信网页版（设置了25s超时时间）\n \t- 流技术\n \t在页面中放一个隐藏的iframe，iframe的src 属性设为对一个长连接的请求，服务器端则可以不停地返回数据，相对于第一种方式，这种方式跟传统的服务器推则更接近。在第一种方式中，浏览器在收到数据后会直接调用JS回调函数，但是这种方式该如何响应数据呢？可以通过在返回数据中嵌入JS脚本的方式，如“<code>&lt;script type=\"text/javascript\"&gt; js_func(“data from server ”) &lt;/script></code>”，服务器端将返回的数据作为回调函数的参数，浏览器在收到数据后就会执行这段JS脚本。每次数据传送不会关闭连接，连接只会在通信出现错误时，或是连接重建时关闭（一些防火墙常被设置为丢弃过长的连接， 服务器端可以设置一个超时时间， 超时后通知客户端重新建立连接，并关闭原来的连接）。\n\t![流技术图解](http://www.52im.net/data/attachment/forum/201605/26/145819wllzzlwr5ee5oq0v.jpg)\n \t  - 优点：消息能够实时到达；\n\t  - 缺点：使用 iframe 请求一个长连接有一个很明显的不足之处：IE、Morzilla Firefox 下端的进度栏都会显示加载没有完成，而且 IE 上方的图标会不停的转动，表示加载正在进行；\n\t  - 案例：Google公司在一些产品中使用了iframe流，如Google Talk。\n---\n## websocket即时通讯，socket.io\n ** 首先我们看下ws通用方案架构：**\n ![ws架构](http://www.52im.net/data/attachment/forum/201605/25/172320ln46d76hnzz9dht9.png)\n 然后再是ws技术原理：\n ![ws技术原理](http://www.52im.net/data/attachment/forum/201605/25/172321pg747a7ru4lghzwu.png)\n 客户端发起ws请求：\n ```javascript\n // javacsript\n  var ws = new WebSocket(\"ws://127.0.0.1:4000\");\n  ws.onopen = function(){ //连接建立成功回调\n    console.log(\"succeed\");\n  };\n  ws.onerror = function(){ //失败回调\n    console.log(“error”);\n  };\n  ws.onmessage = function(e){ //接受到消息回调\n  //处理消息等逻辑\n  console.log(e); \n  }\n  ```\n 向浏览器发送ws请求\n ```javascript\n // Connection必须为：Upgrade，表示client希望升级连接；\n // Upgrade必须为：websocket，表示client希望升级到Websocket协议；\n // Sec-WebSocket-Key：是随机字符串，服务端会将其做一定运算，最后在Response中返回“Sec-WebSocket-Accept”头的值。用于避免普通http请求被当做WebSocket协议。\n // Sec-WebSocket-Version：表示支持的Websocket版本。RFC6455要求使用的版本是13，之前草案的版本均应当被弃用。\n ```\n ![ws请求](http://www.52im.net/data/attachment/forum/201605/25/172456rjjj5efocmkrhcmr.png)\n\n 然后问题来了。。\n 切换后的websocket 协议中的 数据传输帧的格式(此时不再使用html协议) 官方文档给出的说明：（完全看不懂啊，一脸懵逼呀）\n ![ws数据传输帧](http://www.52im.net/data/attachment/forum/201605/25/172735e5ht85cz5ti7hl5m.png)\n 找了一张大神图解解释下\n ![ws数据传输帧](http://www.52im.net/data/attachment/forum/201605/25/172824yh64cwi5gdoovhj2.png)\n\n 这边我在实践中见到的只有Payload data字段，就是传输的数据主体。 \n 对于具体数据帧frame的解释，以后再深入了解。\n\n ** socket.io - 支持WebSocket、用于WEB端的即时通讯的框架**\n\n socket.IO是一个完全由JavaScript实现、基于Node.js、支持WebSocket的协议用于实时通信、跨平台的开源框架，它包括了客户端的JavaScript和服务器端的Node.js。socket.io除了支持WebSocket通讯协议外，还支持许多种轮询（Polling）机制以及其它实时通信方式，并封装成了通用的接口，并且在服务端实现了这些实时机制的相应代码。socket.io实现的Polling通信机制包括Adobe Flash Socket、AJAX长轮询、AJAX multipart streaming、持久Iframe、JSONP轮询等。socket.io能够根据浏览器对通讯机制的支持情况自动地选择最佳的方式来实现网络实时应用。当前，socket.io最新版本是于2015年1月19日发布的1.3.0版本，该版本增强了稳定性和提高了性能，并修复了大量Bug。\n\n socket.io设计的目标是构建能够在不同浏览器和移动设备上良好运行的实时应用，如实时分析系统、二进制流数据处理应用、在线聊天室、在线客服系统、评论系统、WebIM等。目前，socket.io已经支持主流PC浏览器(如IE、Safari、Chrome、Firefox、Opera等)和移动平台上的浏览器（iOS平台下的Safari、Android平台下的基于Webkit的浏览器等）。\n\n socket.io已经具有众多强大功能的模块和扩展API，如（session.socket.io)（http session中间件，进行session相关操作）、socket.io-cookie（cookie解析中间件）、session-web-sockets（以安全的方式传递Session）、socket-logger（JSON格式的记录日志工具）、websocket.MQ（可靠的消息队列）、socket.io-mongo（使用MongoDB的适配器）、socket.io-redis（Redis的适配器）、socket.io-parser（服务端和客户端通讯的默认协议实现模块）等。\n\n socket.io实现了实时、双向、基于事件的通讯机制,它解决了实时的通信问题，并统一了服务端与客户端的编程方式。启动了Socket以后，就像建立了一条客户端与服务端的管道，两边可以互通有无。它还能够和Express.js提供的传统请求方式很好的结合，即可以在同一个域名，同一个端口提供两种连接方式：\n\n request/response, websocket(flashsocket,ajax…).\n\n demo代码\n```javascript\n// Setup basic express server\nvar express = require('express');\nvar app = express();\nvar path = require('path');\nvar server = require('http').createServer(app);\nvar io = require('../..')(server);\nvar port = process.env.PORT || 3000;\n\nserver.listen(port, function () {\n  console.log('Server listening at port %d', port);\n});\n\n// Routing\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Chatroom\n\nvar numUsers = 0;\n\nio.on('connection', function (socket) {\n  var addedUser = false;\n\n  // when the client emits 'new message', this listens and executes\n  socket.on('new message', function (data) {\n    // we tell the client to execute 'new message'\n    socket.broadcast.emit('new message', {\n      username: socket.username,\n      message: data\n    });\n  });\n\n  // when the client emits 'add user', this listens and executes\n  socket.on('add user', function (username) {\n    if (addedUser) return;\n\n    // we store the username in the socket session for this client\n    socket.username = username;\n    ++numUsers;\n    addedUser = true;\n    socket.emit('login', {\n      numUsers: numUsers\n    });\n    // echo globally (all clients) that a person has connected\n    socket.broadcast.emit('user joined', {\n      username: socket.username,\n      numUsers: numUsers\n    });\n  });\n\n  // when the client emits 'typing', we broadcast it to others\n  socket.on('typing', function () {\n    socket.broadcast.emit('typing', {\n      username: socket.username\n    });\n  });\n\n  // when the client emits 'stop typing', we broadcast it to others\n  socket.on('stop typing', function () {\n    socket.broadcast.emit('stop typing', {\n      username: socket.username\n    });\n  });\n\n  // when the user disconnects.. perform this\n  socket.on('disconnect', function () {\n    if (addedUser) {\n      --numUsers;\n\n      // echo globally that this client has left\n      socket.broadcast.emit('user left', {\n        username: socket.username,\n        numUsers: numUsers\n      });\n    }\n  });\n});\n``` \n [socket.io官网](https://socket.io/)\n\n---\n## mqtt了解\n> MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和制动器（比如通过Twitter让房屋联网）的通信协议。\n\tMQTT协议是为大量计算能力有限，且工作在低带宽、不可靠的网络的远程传感器和控制设备通讯而设计的协议，它具有以下主要的几项特性：\n\t1、** 使用发布/订阅消息模式，提供一对多的消息发布，解除应用程序耦合 **；\n\t2、对负载内容屏蔽的消息传输；\n\t3、 ** 使用 TCP/IP 提供网络连接  **；\n\t4、有三种消息发布服务质量：\n\t“至多一次”，消息发布完全依赖底层 TCP/IP 网络。会发生消息丢失或重复。这一级别可用于如下情况，环境传感器数据，丢失一次读记录无所谓，因为不久后还会有第二次发送。\n\t“至少一次”，确保消息到达，但消息重复可能会发生。\n\t“只有一次”，确保消息到达一次。这一级别可用于如下情况，在计费系统中，消息重复或丢失会导致不正确的结果。\n\t5、小型传输，开销很小（固定长度的头部是 2 字节），协议交换最小化，以降低网络流量；\n\t6、使用 Last Will 和 Testament 特性通知有关各方客户端异常中断的机制；\n\n mqtt是未来lot通讯的技术支持，我在业务中用到的只是它支持ws连接的即时通讯，我感觉是大财小用了，用socket.io也能解决即时通讯问题。\n 说说学到的东西吧，mqtt ws模块的相关api，发布订阅模式，话题层级规范。\n mqtt ws相关api代码基本跟socket.io里面类似，这边不再赘述了。\n 发布订阅模式\n 了解过设计模式的同学应该也知道，这种模式与http请求响应不同，它解耦了发布者与订阅者之间的关系，这就表示，发布者和订阅者不用直接建立联系，可以通过一个中间模块来处理发布和订阅之间的关系。\n  - 发布者与订阅者不比了解彼此，只要认识同一个消息代理即可。\n  - 发布者和订阅者不需要交互，发布者无需等待订阅者确认而导致锁定。\n  - 发布者和订阅者不需要同时在线，可以自由选择时间来消费消息。\n\n\n 话题层级规范\n MQTT是通过主题对消息进行分类的，本质上就是一个UTF-8的字符串，不过可以通过反斜杠表示多个层级关系。主题并不需要创建，直接使用就是了。\n 主题还可以通过通配符进行过滤。其中，+可以过滤一个层级，而*只能出现在主题最后表示过滤任意级别的层级。举个例子：\n - building-b/floor-5：代表B楼5层的设备。\n - +/floor-5：代表任何一个楼的5层的设备。\n - building-b/*：代表B楼所有的设备。\n 注意，MQTT允许使用通配符订阅主题，但是并不允许使用通配符广播。\n\n---\n## 简单实践一 - 在线聊天室\n用了node express搭的服务器，还有socket.io，简单的搭了个im在线聊天demo。\n[github - demo](https://github.com/Tanelmer/node-chat)\n\n---\n# 相关文章\n [im开发者社区](http://www.52im.net/thread-336-1-1.html)\n [http长连接 短连接](https://www.cnblogs.com/cswuyg/p/3653263.html)\n [web即时通讯](http://blog.csdn.net/u010297957/article/details/60878821)\n [mqtt入门 - 知乎专栏](https://zhuanlan.zhihu.com/p/20888181)\n [mqtt协议中文版](https://www.gitbook.com/book/mcxiaoke/mqtt-cn/details)\n","source":"_posts/websocket实践研究.md","raw":"---\ntitle: websocket之即时通讯\ndate: 2017-06-22\ncategories: 前端\ntags: [HTTP,javascript,前端]\ndescription: html5新增websocket协议研究。。\n---\n# websocket学习研究记录\n1. 什么是websocket\n2. websocket出现前的即时通讯技术\n3. websocket即时通讯，socket.io\n4. mqtt了解\n5. 简单实践一 - 在线聊天室\n<!-- more -->\n\n---\n## 什么是websocket？\n>WebSocket是HTML5开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。\nWebSocket协议支持（在受控环境中运行不受信任的代码的）客户端与（选择加入该代码的通信的）远程主机之间进行全双工通信。用于此的安全模型是Web浏览器常用的基于原始的安全模式。 协议包括一个开放的握手以及随后的TCP层上的消息帧。 该技术的目标是为基于浏览器和服务器进行双向通信的（服务器不能依赖于打开多个HTTP连接（例如，使用XMLHttpRequest或iframe和长轮询））应用程序提供一种通信机制。\n\n\n 从引用看来websokcet是一种网络通讯协议，它实现了浏览器与服务器全双工(full-duplex)通信——允许服务器主动发送信息给客户端。\n 既然是网络通讯协议，那它跟http有啥关系呢？\n 按我的理解吧，它们基本没多大关系，要有关系也只能说都基于tcp协议来建立连接的。\n 也有些人把它看做是对于http协议的完善，仁者见仁智者见智吧。\n\n---\n## websocket出现前的即时通讯方案\n websocket出现前的即时通讯方案：ajax短轮询，comet\n 两个名词，<code>ajax短轮询</code>、<code>comet</code>\n 1.\tajax短轮询\n \tajax 定时（可以使用JS的 setTimeout 函数）去服务器查询是否有新消息，从而进行增量式的更新。这种方式间隔多长时间再查询是个问题，因为性能和即时性是反比关系。间隔太短，海量的请求会拖垮服务器，间隔太长，服务器上的新数据就需要更长的时间才能到达客户机。\n\t优点：逻辑简单；\n\t缺点：大多数请求是无效请求，在轮询很频繁的情况下对服务器的压力很大；\n 2. comet - 一种hack技术\n > 以即时通信为代表的web应用程序对数据的Low Latency要求，传统的基于轮询的方式已经无法满足，而且也会带来不好的用户体验。于是一种基于<code>http长连接</code>的“服务器推”技术便被hack出来。这种技术被命名为Comet，这个术语由Dojo Toolkit 的项目主管Alex Russell在博文Comet: Low Latency Data for the Browser首次提出，并沿用下来。\n\n <b>原理</b>：http长连接。客户端与服务器端保持一个长连接，只有客户端需要的数据更新时，服务器才主动将数据推送给客户端。\n comet实现又有两种方式：一种是基于ajax的长轮询，一种是基于隐藏的iframe流技术。\n\n \t- ajax的长轮询(long polling)\n \t浏览器发出XMLHttpRequest 请求，服务器端接收到请求后，会阻塞请求直到有数据或者超时才返回，浏览器JS在处理请求返回信息（超时或有效数据）后再次发出请求，重新建立连接。在此期间服务器端可能已经有新的数据到达，服务器会选择把数据保存，直到重新建立连接，浏览器会把所有数据一次性取回。\n\t![ajax长轮询图解](http://www.52im.net/data/attachment/forum/201605/26/145816g98sb33ceq2669my.jpg)\n \t  - 优点：任意浏览器都可用，实时性好，无消息的情况下不会进行频繁的请求\n\t  - 缺点：连接创建销毁操作还是比较频繁，服务器维持着连接比较消耗资源\n\t  - 案例：微信网页版（设置了25s超时时间）\n \t- 流技术\n \t在页面中放一个隐藏的iframe，iframe的src 属性设为对一个长连接的请求，服务器端则可以不停地返回数据，相对于第一种方式，这种方式跟传统的服务器推则更接近。在第一种方式中，浏览器在收到数据后会直接调用JS回调函数，但是这种方式该如何响应数据呢？可以通过在返回数据中嵌入JS脚本的方式，如“<code>&lt;script type=\"text/javascript\"&gt; js_func(“data from server ”) &lt;/script></code>”，服务器端将返回的数据作为回调函数的参数，浏览器在收到数据后就会执行这段JS脚本。每次数据传送不会关闭连接，连接只会在通信出现错误时，或是连接重建时关闭（一些防火墙常被设置为丢弃过长的连接， 服务器端可以设置一个超时时间， 超时后通知客户端重新建立连接，并关闭原来的连接）。\n\t![流技术图解](http://www.52im.net/data/attachment/forum/201605/26/145819wllzzlwr5ee5oq0v.jpg)\n \t  - 优点：消息能够实时到达；\n\t  - 缺点：使用 iframe 请求一个长连接有一个很明显的不足之处：IE、Morzilla Firefox 下端的进度栏都会显示加载没有完成，而且 IE 上方的图标会不停的转动，表示加载正在进行；\n\t  - 案例：Google公司在一些产品中使用了iframe流，如Google Talk。\n---\n## websocket即时通讯，socket.io\n ** 首先我们看下ws通用方案架构：**\n ![ws架构](http://www.52im.net/data/attachment/forum/201605/25/172320ln46d76hnzz9dht9.png)\n 然后再是ws技术原理：\n ![ws技术原理](http://www.52im.net/data/attachment/forum/201605/25/172321pg747a7ru4lghzwu.png)\n 客户端发起ws请求：\n ```javascript\n // javacsript\n  var ws = new WebSocket(\"ws://127.0.0.1:4000\");\n  ws.onopen = function(){ //连接建立成功回调\n    console.log(\"succeed\");\n  };\n  ws.onerror = function(){ //失败回调\n    console.log(“error”);\n  };\n  ws.onmessage = function(e){ //接受到消息回调\n  //处理消息等逻辑\n  console.log(e); \n  }\n  ```\n 向浏览器发送ws请求\n ```javascript\n // Connection必须为：Upgrade，表示client希望升级连接；\n // Upgrade必须为：websocket，表示client希望升级到Websocket协议；\n // Sec-WebSocket-Key：是随机字符串，服务端会将其做一定运算，最后在Response中返回“Sec-WebSocket-Accept”头的值。用于避免普通http请求被当做WebSocket协议。\n // Sec-WebSocket-Version：表示支持的Websocket版本。RFC6455要求使用的版本是13，之前草案的版本均应当被弃用。\n ```\n ![ws请求](http://www.52im.net/data/attachment/forum/201605/25/172456rjjj5efocmkrhcmr.png)\n\n 然后问题来了。。\n 切换后的websocket 协议中的 数据传输帧的格式(此时不再使用html协议) 官方文档给出的说明：（完全看不懂啊，一脸懵逼呀）\n ![ws数据传输帧](http://www.52im.net/data/attachment/forum/201605/25/172735e5ht85cz5ti7hl5m.png)\n 找了一张大神图解解释下\n ![ws数据传输帧](http://www.52im.net/data/attachment/forum/201605/25/172824yh64cwi5gdoovhj2.png)\n\n 这边我在实践中见到的只有Payload data字段，就是传输的数据主体。 \n 对于具体数据帧frame的解释，以后再深入了解。\n\n ** socket.io - 支持WebSocket、用于WEB端的即时通讯的框架**\n\n socket.IO是一个完全由JavaScript实现、基于Node.js、支持WebSocket的协议用于实时通信、跨平台的开源框架，它包括了客户端的JavaScript和服务器端的Node.js。socket.io除了支持WebSocket通讯协议外，还支持许多种轮询（Polling）机制以及其它实时通信方式，并封装成了通用的接口，并且在服务端实现了这些实时机制的相应代码。socket.io实现的Polling通信机制包括Adobe Flash Socket、AJAX长轮询、AJAX multipart streaming、持久Iframe、JSONP轮询等。socket.io能够根据浏览器对通讯机制的支持情况自动地选择最佳的方式来实现网络实时应用。当前，socket.io最新版本是于2015年1月19日发布的1.3.0版本，该版本增强了稳定性和提高了性能，并修复了大量Bug。\n\n socket.io设计的目标是构建能够在不同浏览器和移动设备上良好运行的实时应用，如实时分析系统、二进制流数据处理应用、在线聊天室、在线客服系统、评论系统、WebIM等。目前，socket.io已经支持主流PC浏览器(如IE、Safari、Chrome、Firefox、Opera等)和移动平台上的浏览器（iOS平台下的Safari、Android平台下的基于Webkit的浏览器等）。\n\n socket.io已经具有众多强大功能的模块和扩展API，如（session.socket.io)（http session中间件，进行session相关操作）、socket.io-cookie（cookie解析中间件）、session-web-sockets（以安全的方式传递Session）、socket-logger（JSON格式的记录日志工具）、websocket.MQ（可靠的消息队列）、socket.io-mongo（使用MongoDB的适配器）、socket.io-redis（Redis的适配器）、socket.io-parser（服务端和客户端通讯的默认协议实现模块）等。\n\n socket.io实现了实时、双向、基于事件的通讯机制,它解决了实时的通信问题，并统一了服务端与客户端的编程方式。启动了Socket以后，就像建立了一条客户端与服务端的管道，两边可以互通有无。它还能够和Express.js提供的传统请求方式很好的结合，即可以在同一个域名，同一个端口提供两种连接方式：\n\n request/response, websocket(flashsocket,ajax…).\n\n demo代码\n```javascript\n// Setup basic express server\nvar express = require('express');\nvar app = express();\nvar path = require('path');\nvar server = require('http').createServer(app);\nvar io = require('../..')(server);\nvar port = process.env.PORT || 3000;\n\nserver.listen(port, function () {\n  console.log('Server listening at port %d', port);\n});\n\n// Routing\napp.use(express.static(path.join(__dirname, 'public')));\n\n// Chatroom\n\nvar numUsers = 0;\n\nio.on('connection', function (socket) {\n  var addedUser = false;\n\n  // when the client emits 'new message', this listens and executes\n  socket.on('new message', function (data) {\n    // we tell the client to execute 'new message'\n    socket.broadcast.emit('new message', {\n      username: socket.username,\n      message: data\n    });\n  });\n\n  // when the client emits 'add user', this listens and executes\n  socket.on('add user', function (username) {\n    if (addedUser) return;\n\n    // we store the username in the socket session for this client\n    socket.username = username;\n    ++numUsers;\n    addedUser = true;\n    socket.emit('login', {\n      numUsers: numUsers\n    });\n    // echo globally (all clients) that a person has connected\n    socket.broadcast.emit('user joined', {\n      username: socket.username,\n      numUsers: numUsers\n    });\n  });\n\n  // when the client emits 'typing', we broadcast it to others\n  socket.on('typing', function () {\n    socket.broadcast.emit('typing', {\n      username: socket.username\n    });\n  });\n\n  // when the client emits 'stop typing', we broadcast it to others\n  socket.on('stop typing', function () {\n    socket.broadcast.emit('stop typing', {\n      username: socket.username\n    });\n  });\n\n  // when the user disconnects.. perform this\n  socket.on('disconnect', function () {\n    if (addedUser) {\n      --numUsers;\n\n      // echo globally that this client has left\n      socket.broadcast.emit('user left', {\n        username: socket.username,\n        numUsers: numUsers\n      });\n    }\n  });\n});\n``` \n [socket.io官网](https://socket.io/)\n\n---\n## mqtt了解\n> MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和制动器（比如通过Twitter让房屋联网）的通信协议。\n\tMQTT协议是为大量计算能力有限，且工作在低带宽、不可靠的网络的远程传感器和控制设备通讯而设计的协议，它具有以下主要的几项特性：\n\t1、** 使用发布/订阅消息模式，提供一对多的消息发布，解除应用程序耦合 **；\n\t2、对负载内容屏蔽的消息传输；\n\t3、 ** 使用 TCP/IP 提供网络连接  **；\n\t4、有三种消息发布服务质量：\n\t“至多一次”，消息发布完全依赖底层 TCP/IP 网络。会发生消息丢失或重复。这一级别可用于如下情况，环境传感器数据，丢失一次读记录无所谓，因为不久后还会有第二次发送。\n\t“至少一次”，确保消息到达，但消息重复可能会发生。\n\t“只有一次”，确保消息到达一次。这一级别可用于如下情况，在计费系统中，消息重复或丢失会导致不正确的结果。\n\t5、小型传输，开销很小（固定长度的头部是 2 字节），协议交换最小化，以降低网络流量；\n\t6、使用 Last Will 和 Testament 特性通知有关各方客户端异常中断的机制；\n\n mqtt是未来lot通讯的技术支持，我在业务中用到的只是它支持ws连接的即时通讯，我感觉是大财小用了，用socket.io也能解决即时通讯问题。\n 说说学到的东西吧，mqtt ws模块的相关api，发布订阅模式，话题层级规范。\n mqtt ws相关api代码基本跟socket.io里面类似，这边不再赘述了。\n 发布订阅模式\n 了解过设计模式的同学应该也知道，这种模式与http请求响应不同，它解耦了发布者与订阅者之间的关系，这就表示，发布者和订阅者不用直接建立联系，可以通过一个中间模块来处理发布和订阅之间的关系。\n  - 发布者与订阅者不比了解彼此，只要认识同一个消息代理即可。\n  - 发布者和订阅者不需要交互，发布者无需等待订阅者确认而导致锁定。\n  - 发布者和订阅者不需要同时在线，可以自由选择时间来消费消息。\n\n\n 话题层级规范\n MQTT是通过主题对消息进行分类的，本质上就是一个UTF-8的字符串，不过可以通过反斜杠表示多个层级关系。主题并不需要创建，直接使用就是了。\n 主题还可以通过通配符进行过滤。其中，+可以过滤一个层级，而*只能出现在主题最后表示过滤任意级别的层级。举个例子：\n - building-b/floor-5：代表B楼5层的设备。\n - +/floor-5：代表任何一个楼的5层的设备。\n - building-b/*：代表B楼所有的设备。\n 注意，MQTT允许使用通配符订阅主题，但是并不允许使用通配符广播。\n\n---\n## 简单实践一 - 在线聊天室\n用了node express搭的服务器，还有socket.io，简单的搭了个im在线聊天demo。\n[github - demo](https://github.com/Tanelmer/node-chat)\n\n---\n# 相关文章\n [im开发者社区](http://www.52im.net/thread-336-1-1.html)\n [http长连接 短连接](https://www.cnblogs.com/cswuyg/p/3653263.html)\n [web即时通讯](http://blog.csdn.net/u010297957/article/details/60878821)\n [mqtt入门 - 知乎专栏](https://zhuanlan.zhihu.com/p/20888181)\n [mqtt协议中文版](https://www.gitbook.com/book/mcxiaoke/mqtt-cn/details)\n","slug":"websocket实践研究","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wu002xr2ufauwyhf8l","content":"<h1 id=\"websocket学习研究记录\"><a href=\"#websocket学习研究记录\" class=\"headerlink\" title=\"websocket学习研究记录\"></a>websocket学习研究记录</h1><ol>\n<li>什么是websocket</li>\n<li>websocket出现前的即时通讯技术</li>\n<li>websocket即时通讯，socket.io</li>\n<li>mqtt了解</li>\n<li>简单实践一 - 在线聊天室<span id=\"more\"></span></li>\n</ol>\n<hr>\n<h2 id=\"什么是websocket？\"><a href=\"#什么是websocket？\" class=\"headerlink\" title=\"什么是websocket？\"></a>什么是websocket？</h2><blockquote>\n<p>WebSocket是HTML5开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。<br>WebSocket协议支持（在受控环境中运行不受信任的代码的）客户端与（选择加入该代码的通信的）远程主机之间进行全双工通信。用于此的安全模型是Web浏览器常用的基于原始的安全模式。 协议包括一个开放的握手以及随后的TCP层上的消息帧。 该技术的目标是为基于浏览器和服务器进行双向通信的（服务器不能依赖于打开多个HTTP连接（例如，使用XMLHttpRequest或iframe和长轮询））应用程序提供一种通信机制。</p>\n</blockquote>\n<p> 从引用看来websokcet是一种网络通讯协议，它实现了浏览器与服务器全双工(full-duplex)通信——允许服务器主动发送信息给客户端。<br> 既然是网络通讯协议，那它跟http有啥关系呢？<br> 按我的理解吧，它们基本没多大关系，要有关系也只能说都基于tcp协议来建立连接的。<br> 也有些人把它看做是对于http协议的完善，仁者见仁智者见智吧。</p>\n<hr>\n<h2 id=\"websocket出现前的即时通讯方案\"><a href=\"#websocket出现前的即时通讯方案\" class=\"headerlink\" title=\"websocket出现前的即时通讯方案\"></a>websocket出现前的即时通讯方案</h2><p> websocket出现前的即时通讯方案：ajax短轮询，comet<br> 两个名词，<code>ajax短轮询</code>、<code>comet</code></p>\n<ol>\n<li>ajax短轮询<br> ajax 定时（可以使用JS的 setTimeout 函数）去服务器查询是否有新消息，从而进行增量式的更新。这种方式间隔多长时间再查询是个问题，因为性能和即时性是反比关系。间隔太短，海量的请求会拖垮服务器，间隔太长，服务器上的新数据就需要更长的时间才能到达客户机。<br>优点：逻辑简单；<br>缺点：大多数请求是无效请求，在轮询很频繁的情况下对服务器的压力很大；</li>\n<li>comet - 一种hack技术<blockquote>\n<p>以即时通信为代表的web应用程序对数据的Low Latency要求，传统的基于轮询的方式已经无法满足，而且也会带来不好的用户体验。于是一种基于<code>http长连接</code>的“服务器推”技术便被hack出来。这种技术被命名为Comet，这个术语由Dojo Toolkit 的项目主管Alex Russell在博文Comet: Low Latency Data for the Browser首次提出，并沿用下来。</p>\n</blockquote>\n</li>\n</ol>\n<p> <b>原理</b>：http长连接。客户端与服务器端保持一个长连接，只有客户端需要的数据更新时，服务器才主动将数据推送给客户端。<br> comet实现又有两种方式：一种是基于ajax的长轮询，一种是基于隐藏的iframe流技术。</p>\n<pre><code> - ajax的长轮询(long polling)\n 浏览器发出XMLHttpRequest 请求，服务器端接收到请求后，会阻塞请求直到有数据或者超时才返回，浏览器JS在处理请求返回信息（超时或有效数据）后再次发出请求，重新建立连接。在此期间服务器端可能已经有新的数据到达，服务器会选择把数据保存，直到重新建立连接，浏览器会把所有数据一次性取回。\n![ajax长轮询图解](http://www.52im.net/data/attachment/forum/201605/26/145816g98sb33ceq2669my.jpg)\n   - 优点：任意浏览器都可用，实时性好，无消息的情况下不会进行频繁的请求\n  - 缺点：连接创建销毁操作还是比较频繁，服务器维持着连接比较消耗资源\n  - 案例：微信网页版（设置了25s超时时间）\n - 流技术\n 在页面中放一个隐藏的iframe，iframe的src 属性设为对一个长连接的请求，服务器端则可以不停地返回数据，相对于第一种方式，这种方式跟传统的服务器推则更接近。在第一种方式中，浏览器在收到数据后会直接调用JS回调函数，但是这种方式该如何响应数据呢？可以通过在返回数据中嵌入JS脚本的方式，如“&lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; js_func(“data from server ”) &amp;lt;/script&gt;&lt;/code&gt;”，服务器端将返回的数据作为回调函数的参数，浏览器在收到数据后就会执行这段JS脚本。每次数据传送不会关闭连接，连接只会在通信出现错误时，或是连接重建时关闭（一些防火墙常被设置为丢弃过长的连接， 服务器端可以设置一个超时时间， 超时后通知客户端重新建立连接，并关闭原来的连接）。\n![流技术图解](http://www.52im.net/data/attachment/forum/201605/26/145819wllzzlwr5ee5oq0v.jpg)\n   - 优点：消息能够实时到达；\n  - 缺点：使用 iframe 请求一个长连接有一个很明显的不足之处：IE、Morzilla Firefox 下端的进度栏都会显示加载没有完成，而且 IE 上方的图标会不停的转动，表示加载正在进行；\n  - 案例：Google公司在一些产品中使用了iframe流，如Google Talk。\n</code></pre>\n<hr>\n<h2 id=\"websocket即时通讯，socket-io\"><a href=\"#websocket即时通讯，socket-io\" class=\"headerlink\" title=\"websocket即时通讯，socket.io\"></a>websocket即时通讯，socket.io</h2><p> ** 首先我们看下ws通用方案架构：**<br> <img src=\"http://www.52im.net/data/attachment/forum/201605/25/172320ln46d76hnzz9dht9.png\" alt=\"ws架构\"><br> 然后再是ws技术原理：<br> <img src=\"http://www.52im.net/data/attachment/forum/201605/25/172321pg747a7ru4lghzwu.png\" alt=\"ws技术原理\"><br> 客户端发起ws请求：<br> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// javacsript</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> ws = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>(<span class=\"string\">&quot;ws://127.0.0.1:4000&quot;</span>);</span><br><span class=\"line\"> ws.<span class=\"property\">onopen</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; <span class=\"comment\">//连接建立成功回调</span></span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;succeed&quot;</span>);</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> ws.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; <span class=\"comment\">//失败回调</span></span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(“error”);</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> ws.<span class=\"property\">onmessage</span> = <span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123; <span class=\"comment\">//接受到消息回调</span></span><br><span class=\"line\"> <span class=\"comment\">//处理消息等逻辑</span></span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e); </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure><br> 向浏览器发送ws请求<br> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Connection必须为：Upgrade，表示client希望升级连接；</span></span><br><span class=\"line\"><span class=\"comment\">// Upgrade必须为：websocket，表示client希望升级到Websocket协议；</span></span><br><span class=\"line\"><span class=\"comment\">// Sec-WebSocket-Key：是随机字符串，服务端会将其做一定运算，最后在Response中返回“Sec-WebSocket-Accept”头的值。用于避免普通http请求被当做WebSocket协议。</span></span><br><span class=\"line\"><span class=\"comment\">// Sec-WebSocket-Version：表示支持的Websocket版本。RFC6455要求使用的版本是13，之前草案的版本均应当被弃用。</span></span><br></pre></td></tr></table></figure><br> <img src=\"http://www.52im.net/data/attachment/forum/201605/25/172456rjjj5efocmkrhcmr.png\" alt=\"ws请求\"></p>\n<p> 然后问题来了。。<br> 切换后的websocket 协议中的 数据传输帧的格式(此时不再使用html协议) 官方文档给出的说明：（完全看不懂啊，一脸懵逼呀）<br> <img src=\"http://www.52im.net/data/attachment/forum/201605/25/172735e5ht85cz5ti7hl5m.png\" alt=\"ws数据传输帧\"><br> 找了一张大神图解解释下<br> <img src=\"http://www.52im.net/data/attachment/forum/201605/25/172824yh64cwi5gdoovhj2.png\" alt=\"ws数据传输帧\"></p>\n<p> 这边我在实践中见到的只有Payload data字段，就是传输的数据主体。<br> 对于具体数据帧frame的解释，以后再深入了解。</p>\n<p> ** socket.io - 支持WebSocket、用于WEB端的即时通讯的框架**</p>\n<p> socket.IO是一个完全由JavaScript实现、基于Node.js、支持WebSocket的协议用于实时通信、跨平台的开源框架，它包括了客户端的JavaScript和服务器端的Node.js。socket.io除了支持WebSocket通讯协议外，还支持许多种轮询（Polling）机制以及其它实时通信方式，并封装成了通用的接口，并且在服务端实现了这些实时机制的相应代码。socket.io实现的Polling通信机制包括Adobe Flash Socket、AJAX长轮询、AJAX multipart streaming、持久Iframe、JSONP轮询等。socket.io能够根据浏览器对通讯机制的支持情况自动地选择最佳的方式来实现网络实时应用。当前，socket.io最新版本是于2015年1月19日发布的1.3.0版本，该版本增强了稳定性和提高了性能，并修复了大量Bug。</p>\n<p> socket.io设计的目标是构建能够在不同浏览器和移动设备上良好运行的实时应用，如实时分析系统、二进制流数据处理应用、在线聊天室、在线客服系统、评论系统、WebIM等。目前，socket.io已经支持主流PC浏览器(如IE、Safari、Chrome、Firefox、Opera等)和移动平台上的浏览器（iOS平台下的Safari、Android平台下的基于Webkit的浏览器等）。</p>\n<p> socket.io已经具有众多强大功能的模块和扩展API，如（session.socket.io)（http session中间件，进行session相关操作）、socket.io-cookie（cookie解析中间件）、session-web-sockets（以安全的方式传递Session）、socket-logger（JSON格式的记录日志工具）、websocket.MQ（可靠的消息队列）、socket.io-mongo（使用MongoDB的适配器）、socket.io-redis（Redis的适配器）、socket.io-parser（服务端和客户端通讯的默认协议实现模块）等。</p>\n<p> socket.io实现了实时、双向、基于事件的通讯机制,它解决了实时的通信问题，并统一了服务端与客户端的编程方式。启动了Socket以后，就像建立了一条客户端与服务端的管道，两边可以互通有无。它还能够和Express.js提供的传统请求方式很好的结合，即可以在同一个域名，同一个端口提供两种连接方式：</p>\n<p> request&#x2F;response, websocket(flashsocket,ajax…).</p>\n<p> demo代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Setup basic express server</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> server = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>).<span class=\"title function_\">createServer</span>(app);</span><br><span class=\"line\"><span class=\"keyword\">var</span> io = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../..&#x27;</span>)(server);</span><br><span class=\"line\"><span class=\"keyword\">var</span> port = process.<span class=\"property\">env</span>.<span class=\"property\">PORT</span> || <span class=\"number\">3000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">server.<span class=\"title function_\">listen</span>(port, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Server listening at port %d&#x27;</span>, port);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Routing</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(express.<span class=\"title function_\">static</span>(path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;public&#x27;</span>)));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Chatroom</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> numUsers = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">io.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connection&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">socket</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> addedUser = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// when the client emits &#x27;new message&#x27;, this listens and executes</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;new message&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// we tell the client to execute &#x27;new message&#x27;</span></span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;new message&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>: socket.<span class=\"property\">username</span>,</span><br><span class=\"line\">      <span class=\"attr\">message</span>: data</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// when the client emits &#x27;add user&#x27;, this listens and executes</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;add user&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">username</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (addedUser) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// we store the username in the socket session for this client</span></span><br><span class=\"line\">    socket.<span class=\"property\">username</span> = username;</span><br><span class=\"line\">    ++numUsers;</span><br><span class=\"line\">    addedUser = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;login&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">numUsers</span>: numUsers</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// echo globally (all clients) that a person has connected</span></span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;user joined&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>: socket.<span class=\"property\">username</span>,</span><br><span class=\"line\">      <span class=\"attr\">numUsers</span>: numUsers</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// when the client emits &#x27;typing&#x27;, we broadcast it to others</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;typing&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;typing&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>: socket.<span class=\"property\">username</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// when the client emits &#x27;stop typing&#x27;, we broadcast it to others</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;stop typing&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;stop typing&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>: socket.<span class=\"property\">username</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// when the user disconnects.. perform this</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;disconnect&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (addedUser) &#123;</span><br><span class=\"line\">      --numUsers;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// echo globally that this client has left</span></span><br><span class=\"line\">      socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;user left&#x27;</span>, &#123;</span><br><span class=\"line\">        <span class=\"attr\">username</span>: socket.<span class=\"property\">username</span>,</span><br><span class=\"line\">        <span class=\"attr\">numUsers</span>: numUsers</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> <a href=\"https://socket.io/\">socket.io官网</a></p>\n<hr>\n<h2 id=\"mqtt了解\"><a href=\"#mqtt了解\" class=\"headerlink\" title=\"mqtt了解\"></a>mqtt了解</h2><blockquote>\n<p>MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和制动器（比如通过Twitter让房屋联网）的通信协议。<br>    MQTT协议是为大量计算能力有限，且工作在低带宽、不可靠的网络的远程传感器和控制设备通讯而设计的协议，它具有以下主要的几项特性：<br>    1、** 使用发布&#x2F;订阅消息模式，提供一对多的消息发布，解除应用程序耦合 **；<br>    2、对负载内容屏蔽的消息传输；<br>    3、 ** 使用 TCP&#x2F;IP 提供网络连接  **；<br>    4、有三种消息发布服务质量：<br>    “至多一次”，消息发布完全依赖底层 TCP&#x2F;IP 网络。会发生消息丢失或重复。这一级别可用于如下情况，环境传感器数据，丢失一次读记录无所谓，因为不久后还会有第二次发送。<br>    “至少一次”，确保消息到达，但消息重复可能会发生。<br>    “只有一次”，确保消息到达一次。这一级别可用于如下情况，在计费系统中，消息重复或丢失会导致不正确的结果。<br>    5、小型传输，开销很小（固定长度的头部是 2 字节），协议交换最小化，以降低网络流量；<br>    6、使用 Last Will 和 Testament 特性通知有关各方客户端异常中断的机制；</p>\n</blockquote>\n<p> mqtt是未来lot通讯的技术支持，我在业务中用到的只是它支持ws连接的即时通讯，我感觉是大财小用了，用socket.io也能解决即时通讯问题。<br> 说说学到的东西吧，mqtt ws模块的相关api，发布订阅模式，话题层级规范。<br> mqtt ws相关api代码基本跟socket.io里面类似，这边不再赘述了。<br> 发布订阅模式<br> 了解过设计模式的同学应该也知道，这种模式与http请求响应不同，它解耦了发布者与订阅者之间的关系，这就表示，发布者和订阅者不用直接建立联系，可以通过一个中间模块来处理发布和订阅之间的关系。</p>\n<ul>\n<li>发布者与订阅者不比了解彼此，只要认识同一个消息代理即可。</li>\n<li>发布者和订阅者不需要交互，发布者无需等待订阅者确认而导致锁定。</li>\n<li>发布者和订阅者不需要同时在线，可以自由选择时间来消费消息。</li>\n</ul>\n<p> 话题层级规范<br> MQTT是通过主题对消息进行分类的，本质上就是一个UTF-8的字符串，不过可以通过反斜杠表示多个层级关系。主题并不需要创建，直接使用就是了。<br> 主题还可以通过通配符进行过滤。其中，+可以过滤一个层级，而*只能出现在主题最后表示过滤任意级别的层级。举个例子：</p>\n<ul>\n<li>building-b&#x2F;floor-5：代表B楼5层的设备。</li>\n<li>+&#x2F;floor-5：代表任何一个楼的5层的设备。</li>\n<li>building-b&#x2F;*：代表B楼所有的设备。<br> 注意，MQTT允许使用通配符订阅主题，但是并不允许使用通配符广播。</li>\n</ul>\n<hr>\n<h2 id=\"简单实践一-在线聊天室\"><a href=\"#简单实践一-在线聊天室\" class=\"headerlink\" title=\"简单实践一 - 在线聊天室\"></a>简单实践一 - 在线聊天室</h2><p>用了node express搭的服务器，还有socket.io，简单的搭了个im在线聊天demo。<br><a href=\"https://github.com/Tanelmer/node-chat\">github - demo</a></p>\n<hr>\n<h1 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h1><p> <a href=\"http://www.52im.net/thread-336-1-1.html\">im开发者社区</a><br> <a href=\"https://www.cnblogs.com/cswuyg/p/3653263.html\">http长连接 短连接</a><br> <a href=\"http://blog.csdn.net/u010297957/article/details/60878821\">web即时通讯</a><br> <a href=\"https://zhuanlan.zhihu.com/p/20888181\">mqtt入门 - 知乎专栏</a><br> <a href=\"https://www.gitbook.com/book/mcxiaoke/mqtt-cn/details\">mqtt协议中文版</a></p>\n","site":{"data":{}},"length":7275,"excerpt":"<h1 id=\"websocket学习研究记录\"><a href=\"#websocket学习研究记录\" class=\"headerlink\" title=\"websocket学习研究记录\"></a>websocket学习研究记录</h1><ol>\n<li>什么是websocket</li>\n<li>websocket出现前的即时通讯技术</li>\n<li>websocket即时通讯，socket.io</li>\n<li>mqtt了解</li>\n<li>简单实践一 - 在线聊天室","more":"</li>\n</ol>\n<hr>\n<h2 id=\"什么是websocket？\"><a href=\"#什么是websocket？\" class=\"headerlink\" title=\"什么是websocket？\"></a>什么是websocket？</h2><blockquote>\n<p>WebSocket是HTML5开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。<br>WebSocket协议支持（在受控环境中运行不受信任的代码的）客户端与（选择加入该代码的通信的）远程主机之间进行全双工通信。用于此的安全模型是Web浏览器常用的基于原始的安全模式。 协议包括一个开放的握手以及随后的TCP层上的消息帧。 该技术的目标是为基于浏览器和服务器进行双向通信的（服务器不能依赖于打开多个HTTP连接（例如，使用XMLHttpRequest或iframe和长轮询））应用程序提供一种通信机制。</p>\n</blockquote>\n<p> 从引用看来websokcet是一种网络通讯协议，它实现了浏览器与服务器全双工(full-duplex)通信——允许服务器主动发送信息给客户端。<br> 既然是网络通讯协议，那它跟http有啥关系呢？<br> 按我的理解吧，它们基本没多大关系，要有关系也只能说都基于tcp协议来建立连接的。<br> 也有些人把它看做是对于http协议的完善，仁者见仁智者见智吧。</p>\n<hr>\n<h2 id=\"websocket出现前的即时通讯方案\"><a href=\"#websocket出现前的即时通讯方案\" class=\"headerlink\" title=\"websocket出现前的即时通讯方案\"></a>websocket出现前的即时通讯方案</h2><p> websocket出现前的即时通讯方案：ajax短轮询，comet<br> 两个名词，<code>ajax短轮询</code>、<code>comet</code></p>\n<ol>\n<li>ajax短轮询<br> ajax 定时（可以使用JS的 setTimeout 函数）去服务器查询是否有新消息，从而进行增量式的更新。这种方式间隔多长时间再查询是个问题，因为性能和即时性是反比关系。间隔太短，海量的请求会拖垮服务器，间隔太长，服务器上的新数据就需要更长的时间才能到达客户机。<br>优点：逻辑简单；<br>缺点：大多数请求是无效请求，在轮询很频繁的情况下对服务器的压力很大；</li>\n<li>comet - 一种hack技术<blockquote>\n<p>以即时通信为代表的web应用程序对数据的Low Latency要求，传统的基于轮询的方式已经无法满足，而且也会带来不好的用户体验。于是一种基于<code>http长连接</code>的“服务器推”技术便被hack出来。这种技术被命名为Comet，这个术语由Dojo Toolkit 的项目主管Alex Russell在博文Comet: Low Latency Data for the Browser首次提出，并沿用下来。</p>\n</blockquote>\n</li>\n</ol>\n<p> <b>原理</b>：http长连接。客户端与服务器端保持一个长连接，只有客户端需要的数据更新时，服务器才主动将数据推送给客户端。<br> comet实现又有两种方式：一种是基于ajax的长轮询，一种是基于隐藏的iframe流技术。</p>\n<pre><code> - ajax的长轮询(long polling)\n 浏览器发出XMLHttpRequest 请求，服务器端接收到请求后，会阻塞请求直到有数据或者超时才返回，浏览器JS在处理请求返回信息（超时或有效数据）后再次发出请求，重新建立连接。在此期间服务器端可能已经有新的数据到达，服务器会选择把数据保存，直到重新建立连接，浏览器会把所有数据一次性取回。\n![ajax长轮询图解](http://www.52im.net/data/attachment/forum/201605/26/145816g98sb33ceq2669my.jpg)\n   - 优点：任意浏览器都可用，实时性好，无消息的情况下不会进行频繁的请求\n  - 缺点：连接创建销毁操作还是比较频繁，服务器维持着连接比较消耗资源\n  - 案例：微信网页版（设置了25s超时时间）\n - 流技术\n 在页面中放一个隐藏的iframe，iframe的src 属性设为对一个长连接的请求，服务器端则可以不停地返回数据，相对于第一种方式，这种方式跟传统的服务器推则更接近。在第一种方式中，浏览器在收到数据后会直接调用JS回调函数，但是这种方式该如何响应数据呢？可以通过在返回数据中嵌入JS脚本的方式，如“&lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; js_func(“data from server ”) &amp;lt;/script&gt;&lt;/code&gt;”，服务器端将返回的数据作为回调函数的参数，浏览器在收到数据后就会执行这段JS脚本。每次数据传送不会关闭连接，连接只会在通信出现错误时，或是连接重建时关闭（一些防火墙常被设置为丢弃过长的连接， 服务器端可以设置一个超时时间， 超时后通知客户端重新建立连接，并关闭原来的连接）。\n![流技术图解](http://www.52im.net/data/attachment/forum/201605/26/145819wllzzlwr5ee5oq0v.jpg)\n   - 优点：消息能够实时到达；\n  - 缺点：使用 iframe 请求一个长连接有一个很明显的不足之处：IE、Morzilla Firefox 下端的进度栏都会显示加载没有完成，而且 IE 上方的图标会不停的转动，表示加载正在进行；\n  - 案例：Google公司在一些产品中使用了iframe流，如Google Talk。\n</code></pre>\n<hr>\n<h2 id=\"websocket即时通讯，socket-io\"><a href=\"#websocket即时通讯，socket-io\" class=\"headerlink\" title=\"websocket即时通讯，socket.io\"></a>websocket即时通讯，socket.io</h2><p> ** 首先我们看下ws通用方案架构：**<br> <img src=\"http://www.52im.net/data/attachment/forum/201605/25/172320ln46d76hnzz9dht9.png\" alt=\"ws架构\"><br> 然后再是ws技术原理：<br> <img src=\"http://www.52im.net/data/attachment/forum/201605/25/172321pg747a7ru4lghzwu.png\" alt=\"ws技术原理\"><br> 客户端发起ws请求：<br> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// javacsript</span></span><br><span class=\"line\"> <span class=\"keyword\">var</span> ws = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>(<span class=\"string\">&quot;ws://127.0.0.1:4000&quot;</span>);</span><br><span class=\"line\"> ws.<span class=\"property\">onopen</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; <span class=\"comment\">//连接建立成功回调</span></span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;succeed&quot;</span>);</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> ws.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123; <span class=\"comment\">//失败回调</span></span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(“error”);</span><br><span class=\"line\"> &#125;;</span><br><span class=\"line\"> ws.<span class=\"property\">onmessage</span> = <span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123; <span class=\"comment\">//接受到消息回调</span></span><br><span class=\"line\"> <span class=\"comment\">//处理消息等逻辑</span></span><br><span class=\"line\"> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e); </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure><br> 向浏览器发送ws请求<br> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Connection必须为：Upgrade，表示client希望升级连接；</span></span><br><span class=\"line\"><span class=\"comment\">// Upgrade必须为：websocket，表示client希望升级到Websocket协议；</span></span><br><span class=\"line\"><span class=\"comment\">// Sec-WebSocket-Key：是随机字符串，服务端会将其做一定运算，最后在Response中返回“Sec-WebSocket-Accept”头的值。用于避免普通http请求被当做WebSocket协议。</span></span><br><span class=\"line\"><span class=\"comment\">// Sec-WebSocket-Version：表示支持的Websocket版本。RFC6455要求使用的版本是13，之前草案的版本均应当被弃用。</span></span><br></pre></td></tr></table></figure><br> <img src=\"http://www.52im.net/data/attachment/forum/201605/25/172456rjjj5efocmkrhcmr.png\" alt=\"ws请求\"></p>\n<p> 然后问题来了。。<br> 切换后的websocket 协议中的 数据传输帧的格式(此时不再使用html协议) 官方文档给出的说明：（完全看不懂啊，一脸懵逼呀）<br> <img src=\"http://www.52im.net/data/attachment/forum/201605/25/172735e5ht85cz5ti7hl5m.png\" alt=\"ws数据传输帧\"><br> 找了一张大神图解解释下<br> <img src=\"http://www.52im.net/data/attachment/forum/201605/25/172824yh64cwi5gdoovhj2.png\" alt=\"ws数据传输帧\"></p>\n<p> 这边我在实践中见到的只有Payload data字段，就是传输的数据主体。<br> 对于具体数据帧frame的解释，以后再深入了解。</p>\n<p> ** socket.io - 支持WebSocket、用于WEB端的即时通讯的框架**</p>\n<p> socket.IO是一个完全由JavaScript实现、基于Node.js、支持WebSocket的协议用于实时通信、跨平台的开源框架，它包括了客户端的JavaScript和服务器端的Node.js。socket.io除了支持WebSocket通讯协议外，还支持许多种轮询（Polling）机制以及其它实时通信方式，并封装成了通用的接口，并且在服务端实现了这些实时机制的相应代码。socket.io实现的Polling通信机制包括Adobe Flash Socket、AJAX长轮询、AJAX multipart streaming、持久Iframe、JSONP轮询等。socket.io能够根据浏览器对通讯机制的支持情况自动地选择最佳的方式来实现网络实时应用。当前，socket.io最新版本是于2015年1月19日发布的1.3.0版本，该版本增强了稳定性和提高了性能，并修复了大量Bug。</p>\n<p> socket.io设计的目标是构建能够在不同浏览器和移动设备上良好运行的实时应用，如实时分析系统、二进制流数据处理应用、在线聊天室、在线客服系统、评论系统、WebIM等。目前，socket.io已经支持主流PC浏览器(如IE、Safari、Chrome、Firefox、Opera等)和移动平台上的浏览器（iOS平台下的Safari、Android平台下的基于Webkit的浏览器等）。</p>\n<p> socket.io已经具有众多强大功能的模块和扩展API，如（session.socket.io)（http session中间件，进行session相关操作）、socket.io-cookie（cookie解析中间件）、session-web-sockets（以安全的方式传递Session）、socket-logger（JSON格式的记录日志工具）、websocket.MQ（可靠的消息队列）、socket.io-mongo（使用MongoDB的适配器）、socket.io-redis（Redis的适配器）、socket.io-parser（服务端和客户端通讯的默认协议实现模块）等。</p>\n<p> socket.io实现了实时、双向、基于事件的通讯机制,它解决了实时的通信问题，并统一了服务端与客户端的编程方式。启动了Socket以后，就像建立了一条客户端与服务端的管道，两边可以互通有无。它还能够和Express.js提供的传统请求方式很好的结合，即可以在同一个域名，同一个端口提供两种连接方式：</p>\n<p> request&#x2F;response, websocket(flashsocket,ajax…).</p>\n<p> demo代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Setup basic express server</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> server = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>).<span class=\"title function_\">createServer</span>(app);</span><br><span class=\"line\"><span class=\"keyword\">var</span> io = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../..&#x27;</span>)(server);</span><br><span class=\"line\"><span class=\"keyword\">var</span> port = process.<span class=\"property\">env</span>.<span class=\"property\">PORT</span> || <span class=\"number\">3000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">server.<span class=\"title function_\">listen</span>(port, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;Server listening at port %d&#x27;</span>, port);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Routing</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(express.<span class=\"title function_\">static</span>(path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;public&#x27;</span>)));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Chatroom</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> numUsers = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">io.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;connection&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">socket</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> addedUser = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// when the client emits &#x27;new message&#x27;, this listens and executes</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;new message&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// we tell the client to execute &#x27;new message&#x27;</span></span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;new message&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>: socket.<span class=\"property\">username</span>,</span><br><span class=\"line\">      <span class=\"attr\">message</span>: data</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// when the client emits &#x27;add user&#x27;, this listens and executes</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;add user&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">username</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (addedUser) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// we store the username in the socket session for this client</span></span><br><span class=\"line\">    socket.<span class=\"property\">username</span> = username;</span><br><span class=\"line\">    ++numUsers;</span><br><span class=\"line\">    addedUser = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    socket.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;login&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">numUsers</span>: numUsers</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// echo globally (all clients) that a person has connected</span></span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;user joined&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>: socket.<span class=\"property\">username</span>,</span><br><span class=\"line\">      <span class=\"attr\">numUsers</span>: numUsers</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// when the client emits &#x27;typing&#x27;, we broadcast it to others</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;typing&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;typing&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>: socket.<span class=\"property\">username</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// when the client emits &#x27;stop typing&#x27;, we broadcast it to others</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;stop typing&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;stop typing&#x27;</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">username</span>: socket.<span class=\"property\">username</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// when the user disconnects.. perform this</span></span><br><span class=\"line\">  socket.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;disconnect&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (addedUser) &#123;</span><br><span class=\"line\">      --numUsers;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// echo globally that this client has left</span></span><br><span class=\"line\">      socket.<span class=\"property\">broadcast</span>.<span class=\"title function_\">emit</span>(<span class=\"string\">&#x27;user left&#x27;</span>, &#123;</span><br><span class=\"line\">        <span class=\"attr\">username</span>: socket.<span class=\"property\">username</span>,</span><br><span class=\"line\">        <span class=\"attr\">numUsers</span>: numUsers</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p> <a href=\"https://socket.io/\">socket.io官网</a></p>\n<hr>\n<h2 id=\"mqtt了解\"><a href=\"#mqtt了解\" class=\"headerlink\" title=\"mqtt了解\"></a>mqtt了解</h2><blockquote>\n<p>MQTT（Message Queuing Telemetry Transport，消息队列遥测传输）是IBM开发的一个即时通讯协议，有可能成为物联网的重要组成部分。该协议支持所有平台，几乎可以把所有联网物品和外部连接起来，被用来当做传感器和制动器（比如通过Twitter让房屋联网）的通信协议。<br>    MQTT协议是为大量计算能力有限，且工作在低带宽、不可靠的网络的远程传感器和控制设备通讯而设计的协议，它具有以下主要的几项特性：<br>    1、** 使用发布&#x2F;订阅消息模式，提供一对多的消息发布，解除应用程序耦合 **；<br>    2、对负载内容屏蔽的消息传输；<br>    3、 ** 使用 TCP&#x2F;IP 提供网络连接  **；<br>    4、有三种消息发布服务质量：<br>    “至多一次”，消息发布完全依赖底层 TCP&#x2F;IP 网络。会发生消息丢失或重复。这一级别可用于如下情况，环境传感器数据，丢失一次读记录无所谓，因为不久后还会有第二次发送。<br>    “至少一次”，确保消息到达，但消息重复可能会发生。<br>    “只有一次”，确保消息到达一次。这一级别可用于如下情况，在计费系统中，消息重复或丢失会导致不正确的结果。<br>    5、小型传输，开销很小（固定长度的头部是 2 字节），协议交换最小化，以降低网络流量；<br>    6、使用 Last Will 和 Testament 特性通知有关各方客户端异常中断的机制；</p>\n</blockquote>\n<p> mqtt是未来lot通讯的技术支持，我在业务中用到的只是它支持ws连接的即时通讯，我感觉是大财小用了，用socket.io也能解决即时通讯问题。<br> 说说学到的东西吧，mqtt ws模块的相关api，发布订阅模式，话题层级规范。<br> mqtt ws相关api代码基本跟socket.io里面类似，这边不再赘述了。<br> 发布订阅模式<br> 了解过设计模式的同学应该也知道，这种模式与http请求响应不同，它解耦了发布者与订阅者之间的关系，这就表示，发布者和订阅者不用直接建立联系，可以通过一个中间模块来处理发布和订阅之间的关系。</p>\n<ul>\n<li>发布者与订阅者不比了解彼此，只要认识同一个消息代理即可。</li>\n<li>发布者和订阅者不需要交互，发布者无需等待订阅者确认而导致锁定。</li>\n<li>发布者和订阅者不需要同时在线，可以自由选择时间来消费消息。</li>\n</ul>\n<p> 话题层级规范<br> MQTT是通过主题对消息进行分类的，本质上就是一个UTF-8的字符串，不过可以通过反斜杠表示多个层级关系。主题并不需要创建，直接使用就是了。<br> 主题还可以通过通配符进行过滤。其中，+可以过滤一个层级，而*只能出现在主题最后表示过滤任意级别的层级。举个例子：</p>\n<ul>\n<li>building-b&#x2F;floor-5：代表B楼5层的设备。</li>\n<li>+&#x2F;floor-5：代表任何一个楼的5层的设备。</li>\n<li>building-b&#x2F;*：代表B楼所有的设备。<br> 注意，MQTT允许使用通配符订阅主题，但是并不允许使用通配符广播。</li>\n</ul>\n<hr>\n<h2 id=\"简单实践一-在线聊天室\"><a href=\"#简单实践一-在线聊天室\" class=\"headerlink\" title=\"简单实践一 - 在线聊天室\"></a>简单实践一 - 在线聊天室</h2><p>用了node express搭的服务器，还有socket.io，简单的搭了个im在线聊天demo。<br><a href=\"https://github.com/Tanelmer/node-chat\">github - demo</a></p>\n<hr>\n<h1 id=\"相关文章\"><a href=\"#相关文章\" class=\"headerlink\" title=\"相关文章\"></a>相关文章</h1><p> <a href=\"http://www.52im.net/thread-336-1-1.html\">im开发者社区</a><br> <a href=\"https://www.cnblogs.com/cswuyg/p/3653263.html\">http长连接 短连接</a><br> <a href=\"http://blog.csdn.net/u010297957/article/details/60878821\">web即时通讯</a><br> <a href=\"https://zhuanlan.zhihu.com/p/20888181\">mqtt入门 - 知乎专栏</a><br> <a href=\"https://www.gitbook.com/book/mcxiaoke/mqtt-cn/details\">mqtt协议中文版</a></p>"},{"title":"分享 - 网站绿锁怎么免费加（转）","date":"2017-10-12T16:00:00.000Z","description":"http如何变为https协议","_content":"## Let's Encrypt 给网站加 HTTPS 完全指南\n昨天有幸瞄到朋友分享的http加锁方案分享文章，现在在这做下记录，以便以后之用。\n<!--more-->\n***\n之前对于http加锁也有一点了解，只不过那时暂时还未用到，而且证书还需要付费，所以就没深入了，但现在看来，这个https在之后会越来越普遍，用的站点也会越来越多，所以还是有必要熟悉熟悉。\n详细了解  -> [Let's Encrypt 给网站加 HTTPS 完全指南](https://ksmx.me/letsencrypt-ssl-https/?nsukey=GHytaE15ZYZCdvQ0mOBQWkM3OD5Hs%2F5RKY6iHEOBL6rWLrgm2rmaSJV%2F9Pyh9E3fYzWE1itGbPY7Ykga1nlwwB4%2BYCRXZq0LeUxZjRClK0m9MBBOeAL2%2FFArB7Aq5uCbFPkfzb%2FHkRT3TW7Jiunm%2B8ikV7HdGto0TMSqWaYq1sF1jJnA%2FJAaY8JCckmng8oe)\n","source":"_posts/分享 - 网站绿锁怎么加.md","raw":"---\ntitle: 分享 - 网站绿锁怎么免费加（转）\ndate: 2017-10-13\ncategories: http\ntags: [HTTP]\ndescription: http如何变为https协议\n---\n## Let's Encrypt 给网站加 HTTPS 完全指南\n昨天有幸瞄到朋友分享的http加锁方案分享文章，现在在这做下记录，以便以后之用。\n<!--more-->\n***\n之前对于http加锁也有一点了解，只不过那时暂时还未用到，而且证书还需要付费，所以就没深入了，但现在看来，这个https在之后会越来越普遍，用的站点也会越来越多，所以还是有必要熟悉熟悉。\n详细了解  -> [Let's Encrypt 给网站加 HTTPS 完全指南](https://ksmx.me/letsencrypt-ssl-https/?nsukey=GHytaE15ZYZCdvQ0mOBQWkM3OD5Hs%2F5RKY6iHEOBL6rWLrgm2rmaSJV%2F9Pyh9E3fYzWE1itGbPY7Ykga1nlwwB4%2BYCRXZq0LeUxZjRClK0m9MBBOeAL2%2FFArB7Aq5uCbFPkfzb%2FHkRT3TW7Jiunm%2B8ikV7HdGto0TMSqWaYq1sF1jJnA%2FJAaY8JCckmng8oe)\n","slug":"分享 - 网站绿锁怎么加","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wv0031r2ufgvz5gke8","content":"<h2 id=\"Let’s-Encrypt-给网站加-HTTPS-完全指南\"><a href=\"#Let’s-Encrypt-给网站加-HTTPS-完全指南\" class=\"headerlink\" title=\"Let’s Encrypt 给网站加 HTTPS 完全指南\"></a>Let’s Encrypt 给网站加 HTTPS 完全指南</h2><p>昨天有幸瞄到朋友分享的http加锁方案分享文章，现在在这做下记录，以便以后之用。</p>\n<span id=\"more\"></span>\n<hr>\n<p>之前对于http加锁也有一点了解，只不过那时暂时还未用到，而且证书还需要付费，所以就没深入了，但现在看来，这个https在之后会越来越普遍，用的站点也会越来越多，所以还是有必要熟悉熟悉。<br>详细了解  -&gt; <a href=\"https://ksmx.me/letsencrypt-ssl-https/?nsukey=GHytaE15ZYZCdvQ0mOBQWkM3OD5Hs/5RKY6iHEOBL6rWLrgm2rmaSJV/9Pyh9E3fYzWE1itGbPY7Ykga1nlwwB4+YCRXZq0LeUxZjRClK0m9MBBOeAL2/FArB7Aq5uCbFPkfzb/HkRT3TW7Jiunm+8ikV7HdGto0TMSqWaYq1sF1jJnA/JAaY8JCckmng8oe\">Let’s Encrypt 给网站加 HTTPS 完全指南</a></p>\n","site":{"data":{}},"length":192,"excerpt":"<h2 id=\"Let’s-Encrypt-给网站加-HTTPS-完全指南\"><a href=\"#Let’s-Encrypt-给网站加-HTTPS-完全指南\" class=\"headerlink\" title=\"Let’s Encrypt 给网站加 HTTPS 完全指南\"></a>Let’s Encrypt 给网站加 HTTPS 完全指南</h2><p>昨天有幸瞄到朋友分享的http加锁方案分享文章，现在在这做下记录，以便以后之用。</p>","more":"<hr>\n<p>之前对于http加锁也有一点了解，只不过那时暂时还未用到，而且证书还需要付费，所以就没深入了，但现在看来，这个https在之后会越来越普遍，用的站点也会越来越多，所以还是有必要熟悉熟悉。<br>详细了解  -&gt; <a href=\"https://ksmx.me/letsencrypt-ssl-https/?nsukey=GHytaE15ZYZCdvQ0mOBQWkM3OD5Hs/5RKY6iHEOBL6rWLrgm2rmaSJV/9Pyh9E3fYzWE1itGbPY7Ykga1nlwwB4+YCRXZq0LeUxZjRClK0m9MBBOeAL2/FArB7Aq5uCbFPkfzb/HkRT3TW7Jiunm+8ikV7HdGto0TMSqWaYq1sF1jJnA/JAaY8JCckmng8oe\">Let’s Encrypt 给网站加 HTTPS 完全指南</a></p>"},{"title":"webpack-vue-cli配置详解","date":"2018-09-11T16:00:00.000Z","description":"vue-cli脚手架工具的熟悉与配置","_content":"## vue-cli脚手架工具的熟悉与配置\n\n这里主要看几个配置文件里面是干了一些什么事情，基本上分析完之后就知道了。\n<!-- more -->\n***\n#### bulid文件夹\n  1. build.js\n  2. webpack.base.conf.js\n  3. webpack.dev.conf.js\n  4. webpack.prod.conf.js\n  5. dev-server.js\n  6. utils.js\n***\n#### config文件夹\n  1. index.js\n***\n然后我们具体看下文件里的代码\nbluid.js\n```javascript\n/**\n 1. loading动画\n 2. 删除创建目标文件夹\n 3. webpack编译\n 4. 输出信息\n */\nrequire('./check-versions')()\n\nprocess.env.NODE_ENV = 'production'\n\nvar ora = require('ora')\nvar rm = require('rimraf')\nvar path = require('path')\n// 用于在控制台输出带颜色字体的插件\nvar chalk = require('chalk')\nvar webpack = require('webpack')\nvar config = require('../config')\nvar webpackConfig = require('./webpack.prod.conf')\n\nvar spinner = ora('building for production...')\nspinner.start() //开启loading动画\n\n// 递归删除旧的目标文件夹\nrm(path.join(config.build.assetsRoot, config.build.assetsSubDirectory), err => {\n  if (err) throw err\n  // webpack编译\n  webpack(webpackConfig, function (err, stats) {\n    spinner.stop()\n    if (err) throw err\n    process.stdout.write(stats.toString({\n      colors: true,\n      modules: false,\n      children: false,\n      chunks: false,\n      chunkModules: false\n    }) + '\\n\\n')\n\n    console.log(chalk.cyan('  Build complete.\\n'))\n    console.log(chalk.yellow(\n      '  Tip: built files are meant to be served over an HTTP server.\\n' +\n      '  Opening index.html over file:// won\\'t work.\\n'\n    ))\n  })\n})\n\n```  \nwebpack.base.conf.js\n```javascript\n//引入依赖包\nvar path = require('path')\nvar utils = require('./utils')\nvar config = require('../config')\nvar vueLoaderConfig = require('./vue-loader.conf')\n\nfunction resolve (dir) {\n  return path.join(__dirname, '..', dir)\n}\n\nmodule.exports = {\n  // 入口文件，路径相对于本文件所在的位置，可以写成字符串、数组、对象\n  entry: {\n    // path.resolve([from ...], to) 将to参数解析为绝对路径\n    app: './src/main.js'\n  },\n  // 输出配置\n  output: {\n    // 输出文件，路径相对于本文件所在的位置\n    path: config.build.assetsRoot,\n    filename: '[name].js',\n    // publicPath\n    // 1.该属性的好处在于当你配置了图片CDN的地址，本地开发时引用本地的图片资源，上线打包时就将资源全部指向正式了，\n    // 如果没有确定的发布地址不建议配置该属性，特别是在打包图片时，路径很容易出现混乱，如果没有设置，则默认从站点根目录加载\n    publicPath: process.env.NODE_ENV === 'production'\n      ? config.build.assetsPublicPath\n      : config.dev.assetsPublicPath\n  },\n  resolve: {\n    // require时省略的扩展名，遇到.js、.vue、.json结尾的也要去加载\n    extensions: ['.js', '.vue', '.json'],\n\n    //模块别名地址，方便后续直接引用别名，无须写长长的地址，注意如果后续不能识别该别名，需要先设置root\n    //设置别名 是为了使用独立构建 npm默认是使用运行时构建 vue官网有两种构建方式的区别\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src')\n    }\n  },\n  //模块加载器\n  module: {\n    rules: [\n      // loader相当于gulp里的task，用来处理在入口文件中require的和其他方式引用进来的文件，\n      // test是正则表达式，匹配要处理的文件；\n      // loader匹配要使用的loader，\"-loader\"可以省略；\n      // include把要处理的目录包括进来，exclude排除不处理的目录\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: vueLoaderConfig\n      },\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        include: [resolve('src'), resolve('test')]\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n        loader: 'url-loader',\n        // 把较小的图片转换成base64的字符串内嵌在生成的js文件里 name指明了输出的命名规则\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('img/[name].[hash:7].[ext]')\n        }\n      },\n      {\n        test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n        loader: 'url-loader',\n        // 把较小的图标转换成base64的字符串内嵌在生成的js文件里 name指明了输出的命名规则\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('fonts/[name].[hash:7].[ext]')\n        }\n      }\n    ]\n  }\n}\n\n```\nwebpack.dev.conf.js\n```javascript\n// webpack.dev.conf.js在webpack.base.conf的基础上增加完善了开发环境下面的配置\n/**\n 1.将hot-reload相关的代码添加到entry chunks\n 2.合并基础的webpack配置\n 3.使用styleLoaders\n 4.配置Source Maps\n 5.配置webpack插件\n */\n// 引入相关依赖\nvar utils = require('./utils')\nvar webpack = require('webpack')\nvar config = require('../config')\n// 一个可以合并数组和对象的插件\nvar merge = require('webpack-merge')\nvar baseWebpackConfig = require('./webpack.base.conf')\n// 一个用于生成HTML文件并自动注入依赖文件（link/script）的webpack插件\nvar HtmlWebpackPlugin = require('html-webpack-plugin')\n// 用于更友好地输出webpack的警告、错误等信息\nvar FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin')\n\n// add hot-reload related code to entry chunks\n// 这是上面的第一点 热重载与entry相关联\nObject.keys(baseWebpackConfig.entry).forEach(function (name) {\n  baseWebpackConfig.entry[name] = ['./build/dev-client'].concat(baseWebpackConfig.entry[name])\n})\n\n// 合并基础的webpack配置\nmodule.exports = merge(baseWebpackConfig, {\n  // 配置样式文件的处理规则，使用styleLoaders\n  module: {\n    rules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap })\n  },\n  // cheap-module-eval-source-map is faster for development\n  // 配置Source Maps。在开发中使用cheap-module-eval-source-map更快 这是纯翻译~~~ 晚点去找找这个玩意干啥的\n  devtool: '#cheap-module-eval-source-map',\n  // webpack插件配置\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': config.dev.env\n    }),\n    // https://github.com/glenjamin/webpack-hot-middleware#installation--usage\n    new webpack.HotModuleReplacementPlugin(),\n    // 报错不会阻塞，但是会在编译结束后报错\n    new webpack.NoEmitOnErrorsPlugin(),\n    // https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: 'index.html',\n      template: 'index.html',\n      inject: true\n    }),\n    new FriendlyErrorsPlugin()\n  ]\n})\n\n```\nwebpack.prod.conf.js\n```javascript\n// 构建的时候用到的webpack配置来自webpack.prod.conf.js，该配置同样是在webpack.base.conf基础上的进一步完善。\n/**\n 1. 合并基础的webpack配置\n 2. 使用styleLoaders\n 3. 配置webpack的输出\n 4. 配置webpack插件\n 5. gzip模式下的webpack插件配置\n 6. webpack-bundle分析\n */\nvar path = require('path')\nvar utils = require('./utils')\nvar webpack = require('webpack')\nvar config = require('../config')\nvar merge = require('webpack-merge')\nvar baseWebpackConfig = require('./webpack.base.conf')\nvar CopyWebpackPlugin = require('copy-webpack-plugin')\nvar HtmlWebpackPlugin = require('html-webpack-plugin')\n// 用于从webpack生成的bundle中提取文本到特定文件中的插件\n// 可以抽取出css，js文件将其与webpack输出的bundle分离\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\nvar OptimizeCSSPlugin = require('optimize-css-assets-webpack-plugin')\n\nvar env = config.build.env\n\n// 合并基础的webpack配置\nvar webpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({\n      sourceMap: config.build.productionSourceMap,\n      extract: true\n    })\n  },\n  devtool: config.build.productionSourceMap ? '#source-map' : false,\n  // 配置webpack的输出\n  output: {\n    path: config.build.assetsRoot,\n    filename: utils.assetsPath('js/[name].[chunkhash].js'),\n    chunkFilename: utils.assetsPath('js/[id].[chunkhash].js')\n  },\n  plugins: [\n    // http://vuejs.github.io/vue-loader/en/workflow/production.html\n    new webpack.DefinePlugin({\n      'process.env': env\n    }),\n    // 丑化压缩代码\n    new webpack.optimize.UglifyJsPlugin({\n      compress: {\n        warnings: false\n      },\n      sourceMap: true\n    }),\n    // extract css into its own file\n    // 抽离css文件\n    new ExtractTextPlugin({\n      filename: utils.assetsPath('css/[name].[contenthash].css')\n    }),\n    // Compress extracted CSS. We are using this plugin so that possible\n    // duplicated CSS from different components can be deduped.\n    new OptimizeCSSPlugin({\n      cssProcessorOptions: {\n        safe: true\n      }\n    }),\n    // generate dist index.html with correct asset hash for caching.\n    // you can customize output by editing /index.html\n    // see https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: config.build.index,\n      template: 'index.html',\n      inject: true,\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: true\n        // more options:\n        // https://github.com/kangax/html-minifier#options-quick-reference\n      },\n      // necessary to consistently work with multiple chunks via CommonsChunkPlugin\n      chunksSortMode: 'dependency'\n    }),\n    // split vendor js into its own file\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor',\n      minChunks: function (module, count) {\n        // any required modules inside node_modules are extracted to vendor\n        return (\n          module.resource &&\n          /\\.js$/.test(module.resource) &&\n          module.resource.indexOf(\n            path.join(__dirname, '../node_modules')\n          ) === 0\n        )\n      }\n    }),\n    // extract webpack runtime and module manifest to its own file in order to\n    // prevent vendor hash from being updated whenever app bundle is updated\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'manifest',\n      chunks: ['vendor']\n    }),\n    // copy custom static assets\n    new CopyWebpackPlugin([\n      {\n        from: path.resolve(__dirname, '../static'),\n        to: config.build.assetsSubDirectory,\n        ignore: ['.*']\n      }\n    ])\n  ]\n})\n\n// gzip模式下需要引入compression插件进行压缩\nif (config.build.productionGzip) {\n  var CompressionWebpackPlugin = require('compression-webpack-plugin')\n\n  webpackConfig.plugins.push(\n    new CompressionWebpackPlugin({\n      asset: '[path].gz[query]',\n      algorithm: 'gzip',\n      test: new RegExp(\n        '\\\\.(' +\n        config.build.productionGzipExtensions.join('|') +\n        ')$'\n      ),\n      threshold: 10240,\n      minRatio: 0.8\n    })\n  )\n}\n\nif (config.build.bundleAnalyzerReport) {\n  var BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin\n  webpackConfig.plugins.push(new BundleAnalyzerPlugin())\n}\n\nmodule.exports = webpackConfig\n\n```\ndev-server.js\n首先来看执行”npm run dev”时候最先执行的build/dev-server.js文件。该文件主要完成下面几件事情：\n\n1. 检查node和npm的版本\n2. 引入相关插件和配置\n3. 创建express服务器和webpack编译器\n4. 配置开发中间件（webpack-dev-middleware）和热重载中间件（webpack-hot-middleware）\n5. 挂载代理服务和中间件\n6. 配置静态资源\n7. 启动服务器监听特定端口（8080）\n8. 自动打开浏览器并打开特定网址（localhost:8080）\n说明： express服务器提供静态文件服务，不过它还使用了http-proxy-middleware，一个http请求代理的中间件。前端开发过程中需要使用到后台的API的话，可以通过配置proxyTable来将相应的后台请求代理到专用的API服务器\n```javascript\n// 检查NodeJS和npm的版本\nrequire('./check-versions')()\n\nvar config = require('../config')\n// 如果Node的环境变量中没有设置当前的环境（NODE_ENV），则使用config中的配置作为当前的环境\nif (!process.env.NODE_ENV) {\n  process.env.NODE_ENV = JSON.parse(config.dev.env.NODE_ENV)\n}\n\n// 一个可以调用默认软件打开网址、图片、文件等内容的插件\n// 这里用它来调用默认浏览器打开dev-server监听的端口，例如：localhost:8080\nvar opn = require('opn')\nvar path = require('path')\nvar express = require('express')\nvar webpack = require('webpack')\n\n// 一个express中间件，用于将http请求代理到其他服务器\n// 例：localhost:8080/api/xxx  -->  localhost:3000/api/xxx\n// 这里使用该插件可以将前端开发中涉及到的请求代理到API服务器上，方便与服务器对接\nvar proxyMiddleware = require('http-proxy-middleware')\nvar webpackConfig = require('./webpack.dev.conf')\n\n// default port where dev server listens for incoming traffic\n// dev-server 监听的端口，默认为config.dev.port设置的端口，即8080\nvar port = process.env.PORT || config.dev.port\n// automatically open browser, if not set will be false\n// 用于判断是否要自动打开浏览器的布尔变量，当配置文件中没有设置自动打开浏览器的时候其值为 false\nvar autoOpenBrowser = !!config.dev.autoOpenBrowser\n// Define HTTP proxies to your custom API backend\n// https://github.com/chimurai/http-proxy-middleware\n// 定义 HTTP 代理表，代理到 API 服务器\nvar proxyTable = config.dev.proxyTable\n\nvar app = express()\n// 根据webpack配置文件创建Compiler对象\nvar compiler = webpack(webpackConfig)\n\n// webpack-dev-middleware使用compiler对象来对相应的文件进行编译和绑定\n// 编译绑定后将得到的产物存放在内存中而没有写进磁盘\n// 将这个中间件交给express使用之后即可访问这些编译后的产品文件\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\n  publicPath: webpackConfig.output.publicPath,\n  quiet: true\n})\n\n// webpack-hot-middleware，用于实现热重载功能的中间件\nvar hotMiddleware = require('webpack-hot-middleware')(compiler, {\n  log: () => {}\n})\n\n// force page reload when html-webpack-plugin template changes\n// 当html-webpack-plugin提交之后通过热重载中间件发布重载动作使得页面重载\ncompiler.plugin('compilation', function (compilation) {\n  compilation.plugin('html-webpack-plugin-after-emit', function (data, cb) {\n    hotMiddleware.publish({ action: 'reload' })\n    cb()\n  })\n})\n\n// proxy api requests\n// 将 proxyTable 中的代理请求配置挂在到express服务器上\nObject.keys(proxyTable).forEach(function (context) {\n  var options = proxyTable[context]\n  if (typeof options === 'string') {\n    options = { target: options }\n  }\n  app.use(proxyMiddleware(options.filter || context, options))\n})\n\n// handle fallback for HTML5 history API\n// 重定向不存在的URL，常用于SPA\napp.use(require('connect-history-api-fallback')())\n\n// serve webpack bundle output\n// 使用webpack开发中间件\n// 即将webpack编译后输出到内存中的文件资源挂到express服务器上\napp.use(devMiddleware)\n\n// enable hot-reload and state-preserving\n// compilation error display\n// 将热重载中间件挂在到express服务器上\napp.use(hotMiddleware)\n\n// serve pure static assets\n// 将静态资源挂到express服务器上\nvar staticPath = path.posix.join(config.dev.assetsPublicPath, config.dev.assetsSubDirectory)\napp.use(staticPath, express.static('./static'))\n\nvar uri = 'http://localhost:' + port\n\nvar _resolve\nvar readyPromise = new Promise(resolve => {\n  _resolve = resolve\n})\n\n// 控制台输入启动信息\nconsole.log('> Starting dev server...')\ndevMiddleware.waitUntilValid(() => {\n  console.log('> Listening at ' + uri + '\\n')\n  // when env is testing, don't need open it\n  if (autoOpenBrowser && process.env.NODE_ENV !== 'testing') {\n    opn(uri)\n  }\n  _resolve()\n})\n\n// 监听端口\nvar server = app.listen(port)\n\nmodule.exports = {\n  ready: readyPromise,\n  close: () => {\n    server.close()\n  }\n}\n\n```\nutils.js\n```javascript\n/**\n 1. 配置静态资源路径\n 2. 生成cssLoaders用于加载.vue文件中的样式\n 3. 生成styleLoaders用于加载不在.vue文件中的单独存在的样式文件\n */\nvar path = require('path')\nvar config = require('../config')\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\n\nexports.assetsPath = function (_path) {\n  var assetsSubDirectory = process.env.NODE_ENV === 'production'\n    ? config.build.assetsSubDirectory\n    : config.dev.assetsSubDirectory\n  return path.posix.join(assetsSubDirectory, _path)\n}\n\nexports.cssLoaders = function (options) {\n  options = options || {}\n\n  var cssLoader = {\n    loader: 'css-loader',\n    options: {\n      minimize: process.env.NODE_ENV === 'production',\n      sourceMap: options.sourceMap\n    }\n  }\n\n  // generate loader string to be used with extract text plugin\n  function generateLoaders (loader, loaderOptions) {\n    var loaders = [cssLoader]\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: Object.assign({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      })\n    }\n\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n  }\n\n  // https://vue-loader.vuejs.org/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(),\n    postcss: generateLoaders(),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass', { indentedSyntax: true }),\n    scss: generateLoaders('sass'),\n    stylus: generateLoaders('stylus'),\n    styl: generateLoaders('stylus')\n  }\n}\n\n// Generate loaders for standalone style files (outside of .vue)\nexports.styleLoaders = function (options) {\n  var output = []\n  var loaders = exports.cssLoaders(options)\n  for (var extension in loaders) {\n    var loader = loaders[extension]\n    output.push({\n      test: new RegExp('\\\\.' + extension + '$'),\n      use: loader\n    })\n  }\n  return output\n}\n\n```\n***\nconfig文件夹下的index.js\n在这里面描述了开发和构建两种环境下的配置，前面的build文件夹下也有不少文件引用了index.js里面的配置\n```javascript\n// see http://vuejs-templates.github.io/webpack for documentation.\nvar path = require('path')\n\nmodule.exports = {\n  build: {\n    env: require('./prod.env'),\n    index: path.resolve(__dirname, '../dist/index.html'),\n    assetsRoot: path.resolve(__dirname, '../dist'),\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/',\n    productionSourceMap: true,\n    // Gzip off by default as many popular static hosts such as\n    // Surge or Netlify already gzip all static assets for you.\n    // Before setting to `true`, make sure to:\n    // npm install --save-dev compression-webpack-plugin\n    productionGzip: false,\n    productionGzipExtensions: ['js', 'css'],\n    // Run the build command with an extra argument to\n    // View the bundle analyzer report after build finishes:\n    // `npm run build --report`\n    // Set to `true` or `false` to always turn it on or off\n    bundleAnalyzerReport: process.env.npm_config_report\n  },\n  dev: {\n    env: require('./dev.env'),\n    port: 8080,\n    autoOpenBrowser: true,\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/',\n    proxyTable: {},\n    // CSS Sourcemaps off by default because relative paths are \"buggy\"\n    // with this option, according to the CSS-Loader README\n    // (https://github.com/webpack/css-loader#sourcemaps)\n    // In our experience, they generally work as expected,\n    // just be aware of this issue when enabling this option.\n    cssSourceMap: false\n  }\n}\n```\n还有就是build文件夹下面两个比较简单的文件\ndev-client.js似乎没有使用到，代码也比较简单，这里不多讲。\ncheck-version.js完成对node和npm的版本检测\n*** \n之前没学webpack&vue的时候用这个cli工具用的比较蛋疼，然后刚好有时间去看下这里面的配置。\n还是熟悉了很多，至少知道了这些代码的意义，做的事情的哪些。算是对webpack这个打包工具的初识吧。\n> 本文多处源于：[vue-cli的webpack模板项目配置文件分析](http://blog.csdn.net/hongchh/article/details/55113751)\n感谢大佬的分享，此处仅做笔记。\n\n\n  \n","source":"_posts/webpack-vue-cli配置详解.md","raw":"---\ntitle: webpack-vue-cli配置详解\ndate: 2018-09-12\ncategories: 前端\ntags: [Vue]\ndescription: vue-cli脚手架工具的熟悉与配置\n---\n## vue-cli脚手架工具的熟悉与配置\n\n这里主要看几个配置文件里面是干了一些什么事情，基本上分析完之后就知道了。\n<!-- more -->\n***\n#### bulid文件夹\n  1. build.js\n  2. webpack.base.conf.js\n  3. webpack.dev.conf.js\n  4. webpack.prod.conf.js\n  5. dev-server.js\n  6. utils.js\n***\n#### config文件夹\n  1. index.js\n***\n然后我们具体看下文件里的代码\nbluid.js\n```javascript\n/**\n 1. loading动画\n 2. 删除创建目标文件夹\n 3. webpack编译\n 4. 输出信息\n */\nrequire('./check-versions')()\n\nprocess.env.NODE_ENV = 'production'\n\nvar ora = require('ora')\nvar rm = require('rimraf')\nvar path = require('path')\n// 用于在控制台输出带颜色字体的插件\nvar chalk = require('chalk')\nvar webpack = require('webpack')\nvar config = require('../config')\nvar webpackConfig = require('./webpack.prod.conf')\n\nvar spinner = ora('building for production...')\nspinner.start() //开启loading动画\n\n// 递归删除旧的目标文件夹\nrm(path.join(config.build.assetsRoot, config.build.assetsSubDirectory), err => {\n  if (err) throw err\n  // webpack编译\n  webpack(webpackConfig, function (err, stats) {\n    spinner.stop()\n    if (err) throw err\n    process.stdout.write(stats.toString({\n      colors: true,\n      modules: false,\n      children: false,\n      chunks: false,\n      chunkModules: false\n    }) + '\\n\\n')\n\n    console.log(chalk.cyan('  Build complete.\\n'))\n    console.log(chalk.yellow(\n      '  Tip: built files are meant to be served over an HTTP server.\\n' +\n      '  Opening index.html over file:// won\\'t work.\\n'\n    ))\n  })\n})\n\n```  \nwebpack.base.conf.js\n```javascript\n//引入依赖包\nvar path = require('path')\nvar utils = require('./utils')\nvar config = require('../config')\nvar vueLoaderConfig = require('./vue-loader.conf')\n\nfunction resolve (dir) {\n  return path.join(__dirname, '..', dir)\n}\n\nmodule.exports = {\n  // 入口文件，路径相对于本文件所在的位置，可以写成字符串、数组、对象\n  entry: {\n    // path.resolve([from ...], to) 将to参数解析为绝对路径\n    app: './src/main.js'\n  },\n  // 输出配置\n  output: {\n    // 输出文件，路径相对于本文件所在的位置\n    path: config.build.assetsRoot,\n    filename: '[name].js',\n    // publicPath\n    // 1.该属性的好处在于当你配置了图片CDN的地址，本地开发时引用本地的图片资源，上线打包时就将资源全部指向正式了，\n    // 如果没有确定的发布地址不建议配置该属性，特别是在打包图片时，路径很容易出现混乱，如果没有设置，则默认从站点根目录加载\n    publicPath: process.env.NODE_ENV === 'production'\n      ? config.build.assetsPublicPath\n      : config.dev.assetsPublicPath\n  },\n  resolve: {\n    // require时省略的扩展名，遇到.js、.vue、.json结尾的也要去加载\n    extensions: ['.js', '.vue', '.json'],\n\n    //模块别名地址，方便后续直接引用别名，无须写长长的地址，注意如果后续不能识别该别名，需要先设置root\n    //设置别名 是为了使用独立构建 npm默认是使用运行时构建 vue官网有两种构建方式的区别\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src')\n    }\n  },\n  //模块加载器\n  module: {\n    rules: [\n      // loader相当于gulp里的task，用来处理在入口文件中require的和其他方式引用进来的文件，\n      // test是正则表达式，匹配要处理的文件；\n      // loader匹配要使用的loader，\"-loader\"可以省略；\n      // include把要处理的目录包括进来，exclude排除不处理的目录\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: vueLoaderConfig\n      },\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        include: [resolve('src'), resolve('test')]\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n        loader: 'url-loader',\n        // 把较小的图片转换成base64的字符串内嵌在生成的js文件里 name指明了输出的命名规则\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('img/[name].[hash:7].[ext]')\n        }\n      },\n      {\n        test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n        loader: 'url-loader',\n        // 把较小的图标转换成base64的字符串内嵌在生成的js文件里 name指明了输出的命名规则\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('fonts/[name].[hash:7].[ext]')\n        }\n      }\n    ]\n  }\n}\n\n```\nwebpack.dev.conf.js\n```javascript\n// webpack.dev.conf.js在webpack.base.conf的基础上增加完善了开发环境下面的配置\n/**\n 1.将hot-reload相关的代码添加到entry chunks\n 2.合并基础的webpack配置\n 3.使用styleLoaders\n 4.配置Source Maps\n 5.配置webpack插件\n */\n// 引入相关依赖\nvar utils = require('./utils')\nvar webpack = require('webpack')\nvar config = require('../config')\n// 一个可以合并数组和对象的插件\nvar merge = require('webpack-merge')\nvar baseWebpackConfig = require('./webpack.base.conf')\n// 一个用于生成HTML文件并自动注入依赖文件（link/script）的webpack插件\nvar HtmlWebpackPlugin = require('html-webpack-plugin')\n// 用于更友好地输出webpack的警告、错误等信息\nvar FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin')\n\n// add hot-reload related code to entry chunks\n// 这是上面的第一点 热重载与entry相关联\nObject.keys(baseWebpackConfig.entry).forEach(function (name) {\n  baseWebpackConfig.entry[name] = ['./build/dev-client'].concat(baseWebpackConfig.entry[name])\n})\n\n// 合并基础的webpack配置\nmodule.exports = merge(baseWebpackConfig, {\n  // 配置样式文件的处理规则，使用styleLoaders\n  module: {\n    rules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap })\n  },\n  // cheap-module-eval-source-map is faster for development\n  // 配置Source Maps。在开发中使用cheap-module-eval-source-map更快 这是纯翻译~~~ 晚点去找找这个玩意干啥的\n  devtool: '#cheap-module-eval-source-map',\n  // webpack插件配置\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': config.dev.env\n    }),\n    // https://github.com/glenjamin/webpack-hot-middleware#installation--usage\n    new webpack.HotModuleReplacementPlugin(),\n    // 报错不会阻塞，但是会在编译结束后报错\n    new webpack.NoEmitOnErrorsPlugin(),\n    // https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: 'index.html',\n      template: 'index.html',\n      inject: true\n    }),\n    new FriendlyErrorsPlugin()\n  ]\n})\n\n```\nwebpack.prod.conf.js\n```javascript\n// 构建的时候用到的webpack配置来自webpack.prod.conf.js，该配置同样是在webpack.base.conf基础上的进一步完善。\n/**\n 1. 合并基础的webpack配置\n 2. 使用styleLoaders\n 3. 配置webpack的输出\n 4. 配置webpack插件\n 5. gzip模式下的webpack插件配置\n 6. webpack-bundle分析\n */\nvar path = require('path')\nvar utils = require('./utils')\nvar webpack = require('webpack')\nvar config = require('../config')\nvar merge = require('webpack-merge')\nvar baseWebpackConfig = require('./webpack.base.conf')\nvar CopyWebpackPlugin = require('copy-webpack-plugin')\nvar HtmlWebpackPlugin = require('html-webpack-plugin')\n// 用于从webpack生成的bundle中提取文本到特定文件中的插件\n// 可以抽取出css，js文件将其与webpack输出的bundle分离\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\nvar OptimizeCSSPlugin = require('optimize-css-assets-webpack-plugin')\n\nvar env = config.build.env\n\n// 合并基础的webpack配置\nvar webpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({\n      sourceMap: config.build.productionSourceMap,\n      extract: true\n    })\n  },\n  devtool: config.build.productionSourceMap ? '#source-map' : false,\n  // 配置webpack的输出\n  output: {\n    path: config.build.assetsRoot,\n    filename: utils.assetsPath('js/[name].[chunkhash].js'),\n    chunkFilename: utils.assetsPath('js/[id].[chunkhash].js')\n  },\n  plugins: [\n    // http://vuejs.github.io/vue-loader/en/workflow/production.html\n    new webpack.DefinePlugin({\n      'process.env': env\n    }),\n    // 丑化压缩代码\n    new webpack.optimize.UglifyJsPlugin({\n      compress: {\n        warnings: false\n      },\n      sourceMap: true\n    }),\n    // extract css into its own file\n    // 抽离css文件\n    new ExtractTextPlugin({\n      filename: utils.assetsPath('css/[name].[contenthash].css')\n    }),\n    // Compress extracted CSS. We are using this plugin so that possible\n    // duplicated CSS from different components can be deduped.\n    new OptimizeCSSPlugin({\n      cssProcessorOptions: {\n        safe: true\n      }\n    }),\n    // generate dist index.html with correct asset hash for caching.\n    // you can customize output by editing /index.html\n    // see https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: config.build.index,\n      template: 'index.html',\n      inject: true,\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: true\n        // more options:\n        // https://github.com/kangax/html-minifier#options-quick-reference\n      },\n      // necessary to consistently work with multiple chunks via CommonsChunkPlugin\n      chunksSortMode: 'dependency'\n    }),\n    // split vendor js into its own file\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor',\n      minChunks: function (module, count) {\n        // any required modules inside node_modules are extracted to vendor\n        return (\n          module.resource &&\n          /\\.js$/.test(module.resource) &&\n          module.resource.indexOf(\n            path.join(__dirname, '../node_modules')\n          ) === 0\n        )\n      }\n    }),\n    // extract webpack runtime and module manifest to its own file in order to\n    // prevent vendor hash from being updated whenever app bundle is updated\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'manifest',\n      chunks: ['vendor']\n    }),\n    // copy custom static assets\n    new CopyWebpackPlugin([\n      {\n        from: path.resolve(__dirname, '../static'),\n        to: config.build.assetsSubDirectory,\n        ignore: ['.*']\n      }\n    ])\n  ]\n})\n\n// gzip模式下需要引入compression插件进行压缩\nif (config.build.productionGzip) {\n  var CompressionWebpackPlugin = require('compression-webpack-plugin')\n\n  webpackConfig.plugins.push(\n    new CompressionWebpackPlugin({\n      asset: '[path].gz[query]',\n      algorithm: 'gzip',\n      test: new RegExp(\n        '\\\\.(' +\n        config.build.productionGzipExtensions.join('|') +\n        ')$'\n      ),\n      threshold: 10240,\n      minRatio: 0.8\n    })\n  )\n}\n\nif (config.build.bundleAnalyzerReport) {\n  var BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin\n  webpackConfig.plugins.push(new BundleAnalyzerPlugin())\n}\n\nmodule.exports = webpackConfig\n\n```\ndev-server.js\n首先来看执行”npm run dev”时候最先执行的build/dev-server.js文件。该文件主要完成下面几件事情：\n\n1. 检查node和npm的版本\n2. 引入相关插件和配置\n3. 创建express服务器和webpack编译器\n4. 配置开发中间件（webpack-dev-middleware）和热重载中间件（webpack-hot-middleware）\n5. 挂载代理服务和中间件\n6. 配置静态资源\n7. 启动服务器监听特定端口（8080）\n8. 自动打开浏览器并打开特定网址（localhost:8080）\n说明： express服务器提供静态文件服务，不过它还使用了http-proxy-middleware，一个http请求代理的中间件。前端开发过程中需要使用到后台的API的话，可以通过配置proxyTable来将相应的后台请求代理到专用的API服务器\n```javascript\n// 检查NodeJS和npm的版本\nrequire('./check-versions')()\n\nvar config = require('../config')\n// 如果Node的环境变量中没有设置当前的环境（NODE_ENV），则使用config中的配置作为当前的环境\nif (!process.env.NODE_ENV) {\n  process.env.NODE_ENV = JSON.parse(config.dev.env.NODE_ENV)\n}\n\n// 一个可以调用默认软件打开网址、图片、文件等内容的插件\n// 这里用它来调用默认浏览器打开dev-server监听的端口，例如：localhost:8080\nvar opn = require('opn')\nvar path = require('path')\nvar express = require('express')\nvar webpack = require('webpack')\n\n// 一个express中间件，用于将http请求代理到其他服务器\n// 例：localhost:8080/api/xxx  -->  localhost:3000/api/xxx\n// 这里使用该插件可以将前端开发中涉及到的请求代理到API服务器上，方便与服务器对接\nvar proxyMiddleware = require('http-proxy-middleware')\nvar webpackConfig = require('./webpack.dev.conf')\n\n// default port where dev server listens for incoming traffic\n// dev-server 监听的端口，默认为config.dev.port设置的端口，即8080\nvar port = process.env.PORT || config.dev.port\n// automatically open browser, if not set will be false\n// 用于判断是否要自动打开浏览器的布尔变量，当配置文件中没有设置自动打开浏览器的时候其值为 false\nvar autoOpenBrowser = !!config.dev.autoOpenBrowser\n// Define HTTP proxies to your custom API backend\n// https://github.com/chimurai/http-proxy-middleware\n// 定义 HTTP 代理表，代理到 API 服务器\nvar proxyTable = config.dev.proxyTable\n\nvar app = express()\n// 根据webpack配置文件创建Compiler对象\nvar compiler = webpack(webpackConfig)\n\n// webpack-dev-middleware使用compiler对象来对相应的文件进行编译和绑定\n// 编译绑定后将得到的产物存放在内存中而没有写进磁盘\n// 将这个中间件交给express使用之后即可访问这些编译后的产品文件\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\n  publicPath: webpackConfig.output.publicPath,\n  quiet: true\n})\n\n// webpack-hot-middleware，用于实现热重载功能的中间件\nvar hotMiddleware = require('webpack-hot-middleware')(compiler, {\n  log: () => {}\n})\n\n// force page reload when html-webpack-plugin template changes\n// 当html-webpack-plugin提交之后通过热重载中间件发布重载动作使得页面重载\ncompiler.plugin('compilation', function (compilation) {\n  compilation.plugin('html-webpack-plugin-after-emit', function (data, cb) {\n    hotMiddleware.publish({ action: 'reload' })\n    cb()\n  })\n})\n\n// proxy api requests\n// 将 proxyTable 中的代理请求配置挂在到express服务器上\nObject.keys(proxyTable).forEach(function (context) {\n  var options = proxyTable[context]\n  if (typeof options === 'string') {\n    options = { target: options }\n  }\n  app.use(proxyMiddleware(options.filter || context, options))\n})\n\n// handle fallback for HTML5 history API\n// 重定向不存在的URL，常用于SPA\napp.use(require('connect-history-api-fallback')())\n\n// serve webpack bundle output\n// 使用webpack开发中间件\n// 即将webpack编译后输出到内存中的文件资源挂到express服务器上\napp.use(devMiddleware)\n\n// enable hot-reload and state-preserving\n// compilation error display\n// 将热重载中间件挂在到express服务器上\napp.use(hotMiddleware)\n\n// serve pure static assets\n// 将静态资源挂到express服务器上\nvar staticPath = path.posix.join(config.dev.assetsPublicPath, config.dev.assetsSubDirectory)\napp.use(staticPath, express.static('./static'))\n\nvar uri = 'http://localhost:' + port\n\nvar _resolve\nvar readyPromise = new Promise(resolve => {\n  _resolve = resolve\n})\n\n// 控制台输入启动信息\nconsole.log('> Starting dev server...')\ndevMiddleware.waitUntilValid(() => {\n  console.log('> Listening at ' + uri + '\\n')\n  // when env is testing, don't need open it\n  if (autoOpenBrowser && process.env.NODE_ENV !== 'testing') {\n    opn(uri)\n  }\n  _resolve()\n})\n\n// 监听端口\nvar server = app.listen(port)\n\nmodule.exports = {\n  ready: readyPromise,\n  close: () => {\n    server.close()\n  }\n}\n\n```\nutils.js\n```javascript\n/**\n 1. 配置静态资源路径\n 2. 生成cssLoaders用于加载.vue文件中的样式\n 3. 生成styleLoaders用于加载不在.vue文件中的单独存在的样式文件\n */\nvar path = require('path')\nvar config = require('../config')\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\n\nexports.assetsPath = function (_path) {\n  var assetsSubDirectory = process.env.NODE_ENV === 'production'\n    ? config.build.assetsSubDirectory\n    : config.dev.assetsSubDirectory\n  return path.posix.join(assetsSubDirectory, _path)\n}\n\nexports.cssLoaders = function (options) {\n  options = options || {}\n\n  var cssLoader = {\n    loader: 'css-loader',\n    options: {\n      minimize: process.env.NODE_ENV === 'production',\n      sourceMap: options.sourceMap\n    }\n  }\n\n  // generate loader string to be used with extract text plugin\n  function generateLoaders (loader, loaderOptions) {\n    var loaders = [cssLoader]\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: Object.assign({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      })\n    }\n\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n  }\n\n  // https://vue-loader.vuejs.org/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(),\n    postcss: generateLoaders(),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass', { indentedSyntax: true }),\n    scss: generateLoaders('sass'),\n    stylus: generateLoaders('stylus'),\n    styl: generateLoaders('stylus')\n  }\n}\n\n// Generate loaders for standalone style files (outside of .vue)\nexports.styleLoaders = function (options) {\n  var output = []\n  var loaders = exports.cssLoaders(options)\n  for (var extension in loaders) {\n    var loader = loaders[extension]\n    output.push({\n      test: new RegExp('\\\\.' + extension + '$'),\n      use: loader\n    })\n  }\n  return output\n}\n\n```\n***\nconfig文件夹下的index.js\n在这里面描述了开发和构建两种环境下的配置，前面的build文件夹下也有不少文件引用了index.js里面的配置\n```javascript\n// see http://vuejs-templates.github.io/webpack for documentation.\nvar path = require('path')\n\nmodule.exports = {\n  build: {\n    env: require('./prod.env'),\n    index: path.resolve(__dirname, '../dist/index.html'),\n    assetsRoot: path.resolve(__dirname, '../dist'),\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/',\n    productionSourceMap: true,\n    // Gzip off by default as many popular static hosts such as\n    // Surge or Netlify already gzip all static assets for you.\n    // Before setting to `true`, make sure to:\n    // npm install --save-dev compression-webpack-plugin\n    productionGzip: false,\n    productionGzipExtensions: ['js', 'css'],\n    // Run the build command with an extra argument to\n    // View the bundle analyzer report after build finishes:\n    // `npm run build --report`\n    // Set to `true` or `false` to always turn it on or off\n    bundleAnalyzerReport: process.env.npm_config_report\n  },\n  dev: {\n    env: require('./dev.env'),\n    port: 8080,\n    autoOpenBrowser: true,\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/',\n    proxyTable: {},\n    // CSS Sourcemaps off by default because relative paths are \"buggy\"\n    // with this option, according to the CSS-Loader README\n    // (https://github.com/webpack/css-loader#sourcemaps)\n    // In our experience, they generally work as expected,\n    // just be aware of this issue when enabling this option.\n    cssSourceMap: false\n  }\n}\n```\n还有就是build文件夹下面两个比较简单的文件\ndev-client.js似乎没有使用到，代码也比较简单，这里不多讲。\ncheck-version.js完成对node和npm的版本检测\n*** \n之前没学webpack&vue的时候用这个cli工具用的比较蛋疼，然后刚好有时间去看下这里面的配置。\n还是熟悉了很多，至少知道了这些代码的意义，做的事情的哪些。算是对webpack这个打包工具的初识吧。\n> 本文多处源于：[vue-cli的webpack模板项目配置文件分析](http://blog.csdn.net/hongchh/article/details/55113751)\n感谢大佬的分享，此处仅做笔记。\n\n\n  \n","slug":"webpack-vue-cli配置详解","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wv0035r2uf7z221685","content":"<h2 id=\"vue-cli脚手架工具的熟悉与配置\"><a href=\"#vue-cli脚手架工具的熟悉与配置\" class=\"headerlink\" title=\"vue-cli脚手架工具的熟悉与配置\"></a>vue-cli脚手架工具的熟悉与配置</h2><p>这里主要看几个配置文件里面是干了一些什么事情，基本上分析完之后就知道了。</p>\n<span id=\"more\"></span>\n<hr>\n<h4 id=\"bulid文件夹\"><a href=\"#bulid文件夹\" class=\"headerlink\" title=\"bulid文件夹\"></a>bulid文件夹</h4><ol>\n<li>build.js</li>\n<li>webpack.base.conf.js</li>\n<li>webpack.dev.conf.js</li>\n<li>webpack.prod.conf.js</li>\n<li>dev-server.js</li>\n<li>utils.js</li>\n</ol>\n<hr>\n<h4 id=\"config文件夹\"><a href=\"#config文件夹\" class=\"headerlink\" title=\"config文件夹\"></a>config文件夹</h4><ol>\n<li>index.js</li>\n</ol>\n<hr>\n<p>然后我们具体看下文件里的代码<br>bluid.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> 1. loading动画</span></span><br><span class=\"line\"><span class=\"comment\"> 2. 删除创建目标文件夹</span></span><br><span class=\"line\"><span class=\"comment\"> 3. webpack编译</span></span><br><span class=\"line\"><span class=\"comment\"> 4. 输出信息</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./check-versions&#x27;</span>)()</span><br><span class=\"line\"></span><br><span class=\"line\">process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> = <span class=\"string\">&#x27;production&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ora = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;ora&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> rm = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;rimraf&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 用于在控制台输出带颜色字体的插件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> chalk = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;chalk&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.prod.conf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> spinner = <span class=\"title function_\">ora</span>(<span class=\"string\">&#x27;building for production...&#x27;</span>)</span><br><span class=\"line\">spinner.<span class=\"title function_\">start</span>() <span class=\"comment\">//开启loading动画</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 递归删除旧的目标文件夹</span></span><br><span class=\"line\"><span class=\"title function_\">rm</span>(path.<span class=\"title function_\">join</span>(config.<span class=\"property\">build</span>.<span class=\"property\">assetsRoot</span>, config.<span class=\"property\">build</span>.<span class=\"property\">assetsSubDirectory</span>), <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">  <span class=\"comment\">// webpack编译</span></span><br><span class=\"line\">  <span class=\"title function_\">webpack</span>(webpackConfig, <span class=\"keyword\">function</span> (<span class=\"params\">err, stats</span>) &#123;</span><br><span class=\"line\">    spinner.<span class=\"title function_\">stop</span>()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    process.<span class=\"property\">stdout</span>.<span class=\"title function_\">write</span>(stats.<span class=\"title function_\">toString</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">colors</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">modules</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"attr\">children</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"attr\">chunks</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"attr\">chunkModules</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;) + <span class=\"string\">&#x27;\\n\\n&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(chalk.<span class=\"title function_\">cyan</span>(<span class=\"string\">&#x27;  Build complete.\\n&#x27;</span>))</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(chalk.<span class=\"title function_\">yellow</span>(</span><br><span class=\"line\">      <span class=\"string\">&#x27;  Tip: built files are meant to be served over an HTTP server.\\n&#x27;</span> +</span><br><span class=\"line\">      <span class=\"string\">&#x27;  Opening index.html over file:// won\\&#x27;t work.\\n&#x27;</span></span><br><span class=\"line\">    ))</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">`  </span></span><br><span class=\"line\"><span class=\"string\">webpack.base.conf.js</span></span><br><span class=\"line\"><span class=\"string\">`</span><span class=\"string\">``</span>javascript</span><br><span class=\"line\"><span class=\"comment\">//引入依赖包</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./utils&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> vueLoaderConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./vue-loader.conf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">resolve</span> (dir) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;..&#x27;</span>, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 入口文件，路径相对于本文件所在的位置，可以写成字符串、数组、对象</span></span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// path.resolve([from ...], to) 将to参数解析为绝对路径</span></span><br><span class=\"line\">    <span class=\"attr\">app</span>: <span class=\"string\">&#x27;./src/main.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 输出配置</span></span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 输出文件，路径相对于本文件所在的位置</span></span><br><span class=\"line\">    <span class=\"attr\">path</span>: config.<span class=\"property\">build</span>.<span class=\"property\">assetsRoot</span>,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// publicPath</span></span><br><span class=\"line\">    <span class=\"comment\">// 1.该属性的好处在于当你配置了图片CDN的地址，本地开发时引用本地的图片资源，上线打包时就将资源全部指向正式了，</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果没有确定的发布地址不建议配置该属性，特别是在打包图片时，路径很容易出现混乱，如果没有设置，则默认从站点根目录加载</span></span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span></span><br><span class=\"line\">      ? config.<span class=\"property\">build</span>.<span class=\"property\">assetsPublicPath</span></span><br><span class=\"line\">      : config.<span class=\"property\">dev</span>.<span class=\"property\">assetsPublicPath</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// require时省略的扩展名，遇到.js、.vue、.json结尾的也要去加载</span></span><br><span class=\"line\">    <span class=\"attr\">extensions</span>: [<span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;.vue&#x27;</span>, <span class=\"string\">&#x27;.json&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//模块别名地址，方便后续直接引用别名，无须写长长的地址，注意如果后续不能识别该别名，需要先设置root</span></span><br><span class=\"line\">    <span class=\"comment\">//设置别名 是为了使用独立构建 npm默认是使用运行时构建 vue官网有两种构建方式的区别</span></span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;vue$&#x27;</span>: <span class=\"string\">&#x27;vue/dist/vue.esm.js&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;@&#x27;</span>: <span class=\"title function_\">resolve</span>(<span class=\"string\">&#x27;src&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//模块加载器</span></span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">      <span class=\"comment\">// loader相当于gulp里的task，用来处理在入口文件中require的和其他方式引用进来的文件，</span></span><br><span class=\"line\">      <span class=\"comment\">// test是正则表达式，匹配要处理的文件；</span></span><br><span class=\"line\">      <span class=\"comment\">// loader匹配要使用的loader，&quot;-loader&quot;可以省略；</span></span><br><span class=\"line\">      <span class=\"comment\">// include把要处理的目录包括进来，exclude排除不处理的目录</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;vue-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">options</span>: vueLoaderConfig</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">include</span>: [<span class=\"title function_\">resolve</span>(<span class=\"string\">&#x27;src&#x27;</span>), <span class=\"title function_\">resolve</span>(<span class=\"string\">&#x27;test&#x27;</span>)]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(png|jpe?g|gif|svg)(\\?.*)?$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;url-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 把较小的图片转换成base64的字符串内嵌在生成的js文件里 name指明了输出的命名规则</span></span><br><span class=\"line\">        <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">limit</span>: <span class=\"number\">10000</span>,</span><br><span class=\"line\">          <span class=\"attr\">name</span>: utils.<span class=\"title function_\">assetsPath</span>(<span class=\"string\">&#x27;img/[name].[hash:7].[ext]&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(woff2?|eot|ttf|otf)(\\?.*)?$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;url-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 把较小的图标转换成base64的字符串内嵌在生成的js文件里 name指明了输出的命名规则</span></span><br><span class=\"line\">        <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">limit</span>: <span class=\"number\">10000</span>,</span><br><span class=\"line\">          <span class=\"attr\">name</span>: utils.<span class=\"title function_\">assetsPath</span>(<span class=\"string\">&#x27;fonts/[name].[hash:7].[ext]&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>webpack.dev.conf.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// webpack.dev.conf.js在webpack.base.conf的基础上增加完善了开发环境下面的配置</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> 1.将hot-reload相关的代码添加到entry chunks</span></span><br><span class=\"line\"><span class=\"comment\"> 2.合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"comment\"> 3.使用styleLoaders</span></span><br><span class=\"line\"><span class=\"comment\"> 4.配置Source Maps</span></span><br><span class=\"line\"><span class=\"comment\"> 5.配置webpack插件</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// 引入相关依赖</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./utils&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 一个可以合并数组和对象的插件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 一个用于生成HTML文件并自动注入依赖文件（link/script）的webpack插件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">HtmlWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 用于更友好地输出webpack的警告、错误等信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">FriendlyErrorsPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;friendly-errors-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// add hot-reload related code to entry chunks</span></span><br><span class=\"line\"><span class=\"comment\">// 这是上面的第一点 热重载与entry相关联</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(baseWebpackConfig.<span class=\"property\">entry</span>).<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">  baseWebpackConfig.<span class=\"property\">entry</span>[name] = [<span class=\"string\">&#x27;./build/dev-client&#x27;</span>].<span class=\"title function_\">concat</span>(baseWebpackConfig.<span class=\"property\">entry</span>[name])</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">merge</span>(baseWebpackConfig, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 配置样式文件的处理规则，使用styleLoaders</span></span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: utils.<span class=\"title function_\">styleLoaders</span>(&#123; <span class=\"attr\">sourceMap</span>: config.<span class=\"property\">dev</span>.<span class=\"property\">cssSourceMap</span> &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// cheap-module-eval-source-map is faster for development</span></span><br><span class=\"line\">  <span class=\"comment\">// 配置Source Maps。在开发中使用cheap-module-eval-source-map更快 这是纯翻译~~~ 晚点去找找这个玩意干啥的</span></span><br><span class=\"line\">  <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;#cheap-module-eval-source-map&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// webpack插件配置</span></span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"title class_\">DefinePlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;process.env&#x27;</span>: config.<span class=\"property\">dev</span>.<span class=\"property\">env</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// https://github.com/glenjamin/webpack-hot-middleware#installation--usage</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"title class_\">HotModuleReplacementPlugin</span>(),</span><br><span class=\"line\">    <span class=\"comment\">// 报错不会阻塞，但是会在编译结束后报错</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"title class_\">NoEmitOnErrorsPlugin</span>(),</span><br><span class=\"line\">    <span class=\"comment\">// https://github.com/ampedandwired/html-webpack-plugin</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">template</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">inject</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">FriendlyErrorsPlugin</span>()</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>webpack.prod.conf.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 构建的时候用到的webpack配置来自webpack.prod.conf.js，该配置同样是在webpack.base.conf基础上的进一步完善。</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> 1. 合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"comment\"> 2. 使用styleLoaders</span></span><br><span class=\"line\"><span class=\"comment\"> 3. 配置webpack的输出</span></span><br><span class=\"line\"><span class=\"comment\"> 4. 配置webpack插件</span></span><br><span class=\"line\"><span class=\"comment\"> 5. gzip模式下的webpack插件配置</span></span><br><span class=\"line\"><span class=\"comment\"> 6. webpack-bundle分析</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./utils&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">CopyWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;copy-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">HtmlWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 用于从webpack生成的bundle中提取文本到特定文件中的插件</span></span><br><span class=\"line\"><span class=\"comment\">// 可以抽取出css，js文件将其与webpack输出的bundle分离</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ExtractTextPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;extract-text-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">OptimizeCSSPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;optimize-css-assets-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> env = config.<span class=\"property\">build</span>.<span class=\"property\">env</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> webpackConfig = <span class=\"title function_\">merge</span>(baseWebpackConfig, &#123;</span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: utils.<span class=\"title function_\">styleLoaders</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">sourceMap</span>: config.<span class=\"property\">build</span>.<span class=\"property\">productionSourceMap</span>,</span><br><span class=\"line\">      <span class=\"attr\">extract</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">devtool</span>: config.<span class=\"property\">build</span>.<span class=\"property\">productionSourceMap</span> ? <span class=\"string\">&#x27;#source-map&#x27;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack的输出</span></span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: config.<span class=\"property\">build</span>.<span class=\"property\">assetsRoot</span>,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: utils.<span class=\"title function_\">assetsPath</span>(<span class=\"string\">&#x27;js/[name].[chunkhash].js&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">chunkFilename</span>: utils.<span class=\"title function_\">assetsPath</span>(<span class=\"string\">&#x27;js/[id].[chunkhash].js&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// http://vuejs.github.io/vue-loader/en/workflow/production.html</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"title class_\">DefinePlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;process.env&#x27;</span>: env</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// 丑化压缩代码</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"property\">optimize</span>.<span class=\"title class_\">UglifyJsPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">compress</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">warnings</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">sourceMap</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// extract css into its own file</span></span><br><span class=\"line\">    <span class=\"comment\">// 抽离css文件</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">ExtractTextPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">filename</span>: utils.<span class=\"title function_\">assetsPath</span>(<span class=\"string\">&#x27;css/[name].[contenthash].css&#x27;</span>)</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// Compress extracted CSS. We are using this plugin so that possible</span></span><br><span class=\"line\">    <span class=\"comment\">// duplicated CSS from different components can be deduped.</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">OptimizeCSSPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">cssProcessorOptions</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">safe</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// generate dist index.html with correct asset hash for caching.</span></span><br><span class=\"line\">    <span class=\"comment\">// you can customize output by editing /index.html</span></span><br><span class=\"line\">    <span class=\"comment\">// see https://github.com/ampedandwired/html-webpack-plugin</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">filename</span>: config.<span class=\"property\">build</span>.<span class=\"property\">index</span>,</span><br><span class=\"line\">      <span class=\"attr\">template</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">inject</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">minify</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">removeComments</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">collapseWhitespace</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">removeAttributeQuotes</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"comment\">// more options:</span></span><br><span class=\"line\">        <span class=\"comment\">// https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// necessary to consistently work with multiple chunks via CommonsChunkPlugin</span></span><br><span class=\"line\">      <span class=\"attr\">chunksSortMode</span>: <span class=\"string\">&#x27;dependency&#x27;</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// split vendor js into its own file</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"property\">optimize</span>.<span class=\"title class_\">CommonsChunkPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;vendor&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">minChunks</span>: <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable language_\">module</span>, count</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// any required modules inside node_modules are extracted to vendor</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">          <span class=\"variable language_\">module</span>.<span class=\"property\">resource</span> &amp;&amp;</span><br><span class=\"line\">          <span class=\"regexp\">/\\.js$/</span>.<span class=\"title function_\">test</span>(<span class=\"variable language_\">module</span>.<span class=\"property\">resource</span>) &amp;&amp;</span><br><span class=\"line\">          <span class=\"variable language_\">module</span>.<span class=\"property\">resource</span>.<span class=\"title function_\">indexOf</span>(</span><br><span class=\"line\">            path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;../node_modules&#x27;</span>)</span><br><span class=\"line\">          ) === <span class=\"number\">0</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// extract webpack runtime and module manifest to its own file in order to</span></span><br><span class=\"line\">    <span class=\"comment\">// prevent vendor hash from being updated whenever app bundle is updated</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"property\">optimize</span>.<span class=\"title class_\">CommonsChunkPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;manifest&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">chunks</span>: [<span class=\"string\">&#x27;vendor&#x27;</span>]</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// copy custom static assets</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">CopyWebpackPlugin</span>([</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">from</span>: path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;../static&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">to</span>: config.<span class=\"property\">build</span>.<span class=\"property\">assetsSubDirectory</span>,</span><br><span class=\"line\">        <span class=\"attr\">ignore</span>: [<span class=\"string\">&#x27;.*&#x27;</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ])</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// gzip模式下需要引入compression插件进行压缩</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (config.<span class=\"property\">build</span>.<span class=\"property\">productionGzip</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"title class_\">CompressionWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;compression-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  webpackConfig.<span class=\"property\">plugins</span>.<span class=\"title function_\">push</span>(</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">CompressionWebpackPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">asset</span>: <span class=\"string\">&#x27;[path].gz[query]&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">algorithm</span>: <span class=\"string\">&#x27;gzip&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">test</span>: <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;\\\\.(&#x27;</span> +</span><br><span class=\"line\">        config.<span class=\"property\">build</span>.<span class=\"property\">productionGzipExtensions</span>.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;|&#x27;</span>) +</span><br><span class=\"line\">        <span class=\"string\">&#x27;)$&#x27;</span></span><br><span class=\"line\">      ),</span><br><span class=\"line\">      <span class=\"attr\">threshold</span>: <span class=\"number\">10240</span>,</span><br><span class=\"line\">      <span class=\"attr\">minRatio</span>: <span class=\"number\">0.8</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (config.<span class=\"property\">build</span>.<span class=\"property\">bundleAnalyzerReport</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"title class_\">BundleAnalyzerPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-bundle-analyzer&#x27;</span>).<span class=\"property\">BundleAnalyzerPlugin</span></span><br><span class=\"line\">  webpackConfig.<span class=\"property\">plugins</span>.<span class=\"title function_\">push</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">BundleAnalyzerPlugin</span>())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = webpackConfig</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>dev-server.js<br>首先来看执行”npm run dev”时候最先执行的build&#x2F;dev-server.js文件。该文件主要完成下面几件事情：</p>\n<ol>\n<li>检查node和npm的版本</li>\n<li>引入相关插件和配置</li>\n<li>创建express服务器和webpack编译器</li>\n<li>配置开发中间件（webpack-dev-middleware）和热重载中间件（webpack-hot-middleware）</li>\n<li>挂载代理服务和中间件</li>\n<li>配置静态资源</li>\n<li>启动服务器监听特定端口（8080）</li>\n<li>自动打开浏览器并打开特定网址（localhost:8080）<br>说明： express服务器提供静态文件服务，不过它还使用了http-proxy-middleware，一个http请求代理的中间件。前端开发过程中需要使用到后台的API的话，可以通过配置proxyTable来将相应的后台请求代理到专用的API服务器<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 检查NodeJS和npm的版本</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./check-versions&#x27;</span>)()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 如果Node的环境变量中没有设置当前的环境（NODE_ENV），则使用config中的配置作为当前的环境</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span>) &#123;</span><br><span class=\"line\">  process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(config.<span class=\"property\">dev</span>.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一个可以调用默认软件打开网址、图片、文件等内容的插件</span></span><br><span class=\"line\"><span class=\"comment\">// 这里用它来调用默认浏览器打开dev-server监听的端口，例如：localhost:8080</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> opn = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;opn&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一个express中间件，用于将http请求代理到其他服务器</span></span><br><span class=\"line\"><span class=\"comment\">// 例：localhost:8080/api/xxx  --&gt;  localhost:3000/api/xxx</span></span><br><span class=\"line\"><span class=\"comment\">// 这里使用该插件可以将前端开发中涉及到的请求代理到API服务器上，方便与服务器对接</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> proxyMiddleware = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http-proxy-middleware&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.dev.conf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// default port where dev server listens for incoming traffic</span></span><br><span class=\"line\"><span class=\"comment\">// dev-server 监听的端口，默认为config.dev.port设置的端口，即8080</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> port = process.<span class=\"property\">env</span>.<span class=\"property\">PORT</span> || config.<span class=\"property\">dev</span>.<span class=\"property\">port</span></span><br><span class=\"line\"><span class=\"comment\">// automatically open browser, if not set will be false</span></span><br><span class=\"line\"><span class=\"comment\">// 用于判断是否要自动打开浏览器的布尔变量，当配置文件中没有设置自动打开浏览器的时候其值为 false</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> autoOpenBrowser = !!config.<span class=\"property\">dev</span>.<span class=\"property\">autoOpenBrowser</span></span><br><span class=\"line\"><span class=\"comment\">// Define HTTP proxies to your custom API backend</span></span><br><span class=\"line\"><span class=\"comment\">// https://github.com/chimurai/http-proxy-middleware</span></span><br><span class=\"line\"><span class=\"comment\">// 定义 HTTP 代理表，代理到 API 服务器</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> proxyTable = config.<span class=\"property\">dev</span>.<span class=\"property\">proxyTable</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>()</span><br><span class=\"line\"><span class=\"comment\">// 根据webpack配置文件创建Compiler对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> compiler = <span class=\"title function_\">webpack</span>(webpackConfig)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// webpack-dev-middleware使用compiler对象来对相应的文件进行编译和绑定</span></span><br><span class=\"line\"><span class=\"comment\">// 编译绑定后将得到的产物存放在内存中而没有写进磁盘</span></span><br><span class=\"line\"><span class=\"comment\">// 将这个中间件交给express使用之后即可访问这些编译后的产品文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> devMiddleware = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-dev-middleware&#x27;</span>)(compiler, &#123;</span><br><span class=\"line\">  <span class=\"attr\">publicPath</span>: webpackConfig.<span class=\"property\">output</span>.<span class=\"property\">publicPath</span>,</span><br><span class=\"line\">  <span class=\"attr\">quiet</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// webpack-hot-middleware，用于实现热重载功能的中间件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hotMiddleware = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-hot-middleware&#x27;</span>)(compiler, &#123;</span><br><span class=\"line\">  <span class=\"attr\">log</span>: <span class=\"function\">() =&gt;</span> &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// force page reload when html-webpack-plugin template changes</span></span><br><span class=\"line\"><span class=\"comment\">// 当html-webpack-plugin提交之后通过热重载中间件发布重载动作使得页面重载</span></span><br><span class=\"line\">compiler.<span class=\"title function_\">plugin</span>(<span class=\"string\">&#x27;compilation&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">compilation</span>) &#123;</span><br><span class=\"line\">  compilation.<span class=\"title function_\">plugin</span>(<span class=\"string\">&#x27;html-webpack-plugin-after-emit&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">data, cb</span>) &#123;</span><br><span class=\"line\">    hotMiddleware.<span class=\"title function_\">publish</span>(&#123; <span class=\"attr\">action</span>: <span class=\"string\">&#x27;reload&#x27;</span> &#125;)</span><br><span class=\"line\">    <span class=\"title function_\">cb</span>()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// proxy api requests</span></span><br><span class=\"line\"><span class=\"comment\">// 将 proxyTable 中的代理请求配置挂在到express服务器上</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(proxyTable).<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> options = proxyTable[context]</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> options === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">    options = &#123; <span class=\"attr\">target</span>: options &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  app.<span class=\"title function_\">use</span>(<span class=\"title function_\">proxyMiddleware</span>(options.<span class=\"property\">filter</span> || context, options))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// handle fallback for HTML5 history API</span></span><br><span class=\"line\"><span class=\"comment\">// 重定向不存在的URL，常用于SPA</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;connect-history-api-fallback&#x27;</span>)())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// serve webpack bundle output</span></span><br><span class=\"line\"><span class=\"comment\">// 使用webpack开发中间件</span></span><br><span class=\"line\"><span class=\"comment\">// 即将webpack编译后输出到内存中的文件资源挂到express服务器上</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(devMiddleware)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// enable hot-reload and state-preserving</span></span><br><span class=\"line\"><span class=\"comment\">// compilation error display</span></span><br><span class=\"line\"><span class=\"comment\">// 将热重载中间件挂在到express服务器上</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(hotMiddleware)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// serve pure static assets</span></span><br><span class=\"line\"><span class=\"comment\">// 将静态资源挂到express服务器上</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> staticPath = path.<span class=\"property\">posix</span>.<span class=\"title function_\">join</span>(config.<span class=\"property\">dev</span>.<span class=\"property\">assetsPublicPath</span>, config.<span class=\"property\">dev</span>.<span class=\"property\">assetsSubDirectory</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(staticPath, express.<span class=\"title function_\">static</span>(<span class=\"string\">&#x27;./static&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> uri = <span class=\"string\">&#x27;http://localhost:&#x27;</span> + port</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> _resolve</span><br><span class=\"line\"><span class=\"keyword\">var</span> readyPromise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> &#123;</span><br><span class=\"line\">  _resolve = resolve</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 控制台输入启动信息</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;&gt; Starting dev server...&#x27;</span>)</span><br><span class=\"line\">devMiddleware.<span class=\"title function_\">waitUntilValid</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;&gt; Listening at &#x27;</span> + uri + <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">  <span class=\"comment\">// when env is testing, don&#x27;t need open it</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (autoOpenBrowser &amp;&amp; process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;testing&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">opn</span>(uri)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">_resolve</span>()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 监听端口</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> server = app.<span class=\"title function_\">listen</span>(port)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">ready</span>: readyPromise,</span><br><span class=\"line\">  <span class=\"attr\">close</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    server.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\nutils.js<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> 1. 配置静态资源路径</span></span><br><span class=\"line\"><span class=\"comment\"> 2. 生成cssLoaders用于加载.vue文件中的样式</span></span><br><span class=\"line\"><span class=\"comment\"> 3. 生成styleLoaders用于加载不在.vue文件中的单独存在的样式文件</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ExtractTextPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;extract-text-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">assetsPath</span> = <span class=\"keyword\">function</span> (<span class=\"params\">_path</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> assetsSubDirectory = process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span></span><br><span class=\"line\">    ? config.<span class=\"property\">build</span>.<span class=\"property\">assetsSubDirectory</span></span><br><span class=\"line\">    : config.<span class=\"property\">dev</span>.<span class=\"property\">assetsSubDirectory</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> path.<span class=\"property\">posix</span>.<span class=\"title function_\">join</span>(assetsSubDirectory, _path)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">cssLoaders</span> = <span class=\"keyword\">function</span> (<span class=\"params\">options</span>) &#123;</span><br><span class=\"line\">  options = options || &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> cssLoader = &#123;</span><br><span class=\"line\">    <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">minimize</span>: process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">sourceMap</span>: options.<span class=\"property\">sourceMap</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// generate loader string to be used with extract text plugin</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">generateLoaders</span> (loader, loaderOptions) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> loaders = [cssLoader]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (loader) &#123;</span><br><span class=\"line\">      loaders.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">loader</span>: loader + <span class=\"string\">&#x27;-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">options</span>: <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, loaderOptions, &#123;</span><br><span class=\"line\">          <span class=\"attr\">sourceMap</span>: options.<span class=\"property\">sourceMap</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Extract CSS when that option is specified</span></span><br><span class=\"line\">    <span class=\"comment\">// (which is the case during production build)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (options.<span class=\"property\">extract</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">ExtractTextPlugin</span>.<span class=\"title function_\">extract</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">use</span>: loaders,</span><br><span class=\"line\">        <span class=\"attr\">fallback</span>: <span class=\"string\">&#x27;vue-style-loader&#x27;</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> [<span class=\"string\">&#x27;vue-style-loader&#x27;</span>].<span class=\"title function_\">concat</span>(loaders)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// https://vue-loader.vuejs.org/en/configurations/extract-css.html</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">css</span>: <span class=\"title function_\">generateLoaders</span>(),</span><br><span class=\"line\">    <span class=\"attr\">postcss</span>: <span class=\"title function_\">generateLoaders</span>(),</span><br><span class=\"line\">    <span class=\"attr\">less</span>: <span class=\"title function_\">generateLoaders</span>(<span class=\"string\">&#x27;less&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">sass</span>: <span class=\"title function_\">generateLoaders</span>(<span class=\"string\">&#x27;sass&#x27;</span>, &#123; <span class=\"attr\">indentedSyntax</span>: <span class=\"literal\">true</span> &#125;),</span><br><span class=\"line\">    <span class=\"attr\">scss</span>: <span class=\"title function_\">generateLoaders</span>(<span class=\"string\">&#x27;sass&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">stylus</span>: <span class=\"title function_\">generateLoaders</span>(<span class=\"string\">&#x27;stylus&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">styl</span>: <span class=\"title function_\">generateLoaders</span>(<span class=\"string\">&#x27;stylus&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Generate loaders for standalone style files (outside of .vue)</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">styleLoaders</span> = <span class=\"keyword\">function</span> (<span class=\"params\">options</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> output = []</span><br><span class=\"line\">  <span class=\"keyword\">var</span> loaders = <span class=\"built_in\">exports</span>.<span class=\"title function_\">cssLoaders</span>(options)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> extension <span class=\"keyword\">in</span> loaders) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> loader = loaders[extension]</span><br><span class=\"line\">    output.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">test</span>: <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;\\\\.&#x27;</span> + extension + <span class=\"string\">&#x27;$&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">use</span>: loader</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> output</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n<hr>\n<p>config文件夹下的index.js<br>在这里面描述了开发和构建两种环境下的配置，前面的build文件夹下也有不少文件引用了index.js里面的配置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// see http://vuejs-templates.github.io/webpack for documentation.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">build</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">env</span>: <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./prod.env&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">index</span>: path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;../dist/index.html&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">assetsRoot</span>: path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;../dist&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">assetsSubDirectory</span>: <span class=\"string\">&#x27;static&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">assetsPublicPath</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">productionSourceMap</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// Gzip off by default as many popular static hosts such as</span></span><br><span class=\"line\">    <span class=\"comment\">// Surge or Netlify already gzip all static assets for you.</span></span><br><span class=\"line\">    <span class=\"comment\">// Before setting to `true`, make sure to:</span></span><br><span class=\"line\">    <span class=\"comment\">// npm install --save-dev compression-webpack-plugin</span></span><br><span class=\"line\">    <span class=\"attr\">productionGzip</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">productionGzipExtensions</span>: [<span class=\"string\">&#x27;js&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>],</span><br><span class=\"line\">    <span class=\"comment\">// Run the build command with an extra argument to</span></span><br><span class=\"line\">    <span class=\"comment\">// View the bundle analyzer report after build finishes:</span></span><br><span class=\"line\">    <span class=\"comment\">// `npm run build --report`</span></span><br><span class=\"line\">    <span class=\"comment\">// Set to `true` or `false` to always turn it on or off</span></span><br><span class=\"line\">    <span class=\"attr\">bundleAnalyzerReport</span>: process.<span class=\"property\">env</span>.<span class=\"property\">npm_config_report</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">dev</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">env</span>: <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./dev.env&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">8080</span>,</span><br><span class=\"line\">    <span class=\"attr\">autoOpenBrowser</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">assetsSubDirectory</span>: <span class=\"string\">&#x27;static&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">assetsPublicPath</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">proxyTable</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"comment\">// CSS Sourcemaps off by default because relative paths are &quot;buggy&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">// with this option, according to the CSS-Loader README</span></span><br><span class=\"line\">    <span class=\"comment\">// (https://github.com/webpack/css-loader#sourcemaps)</span></span><br><span class=\"line\">    <span class=\"comment\">// In our experience, they generally work as expected,</span></span><br><span class=\"line\">    <span class=\"comment\">// just be aware of this issue when enabling this option.</span></span><br><span class=\"line\">    <span class=\"attr\">cssSourceMap</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>还有就是build文件夹下面两个比较简单的文件<br>dev-client.js似乎没有使用到，代码也比较简单，这里不多讲。<br>check-version.js完成对node和npm的版本检测</p>\n<hr>\n<p>之前没学webpack&amp;vue的时候用这个cli工具用的比较蛋疼，然后刚好有时间去看下这里面的配置。<br>还是熟悉了很多，至少知道了这些代码的意义，做的事情的哪些。算是对webpack这个打包工具的初识吧。</p>\n<blockquote>\n<p>本文多处源于：<a href=\"http://blog.csdn.net/hongchh/article/details/55113751\">vue-cli的webpack模板项目配置文件分析</a><br>感谢大佬的分享，此处仅做笔记。</p>\n</blockquote>\n","site":{"data":{}},"length":16929,"excerpt":"<h2 id=\"vue-cli脚手架工具的熟悉与配置\"><a href=\"#vue-cli脚手架工具的熟悉与配置\" class=\"headerlink\" title=\"vue-cli脚手架工具的熟悉与配置\"></a>vue-cli脚手架工具的熟悉与配置</h2><p>这里主要看几个配置文件里面是干了一些什么事情，基本上分析完之后就知道了。</p>","more":"<hr>\n<h4 id=\"bulid文件夹\"><a href=\"#bulid文件夹\" class=\"headerlink\" title=\"bulid文件夹\"></a>bulid文件夹</h4><ol>\n<li>build.js</li>\n<li>webpack.base.conf.js</li>\n<li>webpack.dev.conf.js</li>\n<li>webpack.prod.conf.js</li>\n<li>dev-server.js</li>\n<li>utils.js</li>\n</ol>\n<hr>\n<h4 id=\"config文件夹\"><a href=\"#config文件夹\" class=\"headerlink\" title=\"config文件夹\"></a>config文件夹</h4><ol>\n<li>index.js</li>\n</ol>\n<hr>\n<p>然后我们具体看下文件里的代码<br>bluid.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> 1. loading动画</span></span><br><span class=\"line\"><span class=\"comment\"> 2. 删除创建目标文件夹</span></span><br><span class=\"line\"><span class=\"comment\"> 3. webpack编译</span></span><br><span class=\"line\"><span class=\"comment\"> 4. 输出信息</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./check-versions&#x27;</span>)()</span><br><span class=\"line\"></span><br><span class=\"line\">process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> = <span class=\"string\">&#x27;production&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> ora = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;ora&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> rm = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;rimraf&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 用于在控制台输出带颜色字体的插件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> chalk = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;chalk&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.prod.conf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> spinner = <span class=\"title function_\">ora</span>(<span class=\"string\">&#x27;building for production...&#x27;</span>)</span><br><span class=\"line\">spinner.<span class=\"title function_\">start</span>() <span class=\"comment\">//开启loading动画</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 递归删除旧的目标文件夹</span></span><br><span class=\"line\"><span class=\"title function_\">rm</span>(path.<span class=\"title function_\">join</span>(config.<span class=\"property\">build</span>.<span class=\"property\">assetsRoot</span>, config.<span class=\"property\">build</span>.<span class=\"property\">assetsSubDirectory</span>), <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">  <span class=\"comment\">// webpack编译</span></span><br><span class=\"line\">  <span class=\"title function_\">webpack</span>(webpackConfig, <span class=\"keyword\">function</span> (<span class=\"params\">err, stats</span>) &#123;</span><br><span class=\"line\">    spinner.<span class=\"title function_\">stop</span>()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">    process.<span class=\"property\">stdout</span>.<span class=\"title function_\">write</span>(stats.<span class=\"title function_\">toString</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">colors</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">modules</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"attr\">children</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"attr\">chunks</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"attr\">chunkModules</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;) + <span class=\"string\">&#x27;\\n\\n&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(chalk.<span class=\"title function_\">cyan</span>(<span class=\"string\">&#x27;  Build complete.\\n&#x27;</span>))</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(chalk.<span class=\"title function_\">yellow</span>(</span><br><span class=\"line\">      <span class=\"string\">&#x27;  Tip: built files are meant to be served over an HTTP server.\\n&#x27;</span> +</span><br><span class=\"line\">      <span class=\"string\">&#x27;  Opening index.html over file:// won\\&#x27;t work.\\n&#x27;</span></span><br><span class=\"line\">    ))</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">`  </span></span><br><span class=\"line\"><span class=\"string\">webpack.base.conf.js</span></span><br><span class=\"line\"><span class=\"string\">`</span><span class=\"string\">``</span>javascript</span><br><span class=\"line\"><span class=\"comment\">//引入依赖包</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./utils&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> vueLoaderConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./vue-loader.conf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">resolve</span> (dir) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;..&#x27;</span>, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 入口文件，路径相对于本文件所在的位置，可以写成字符串、数组、对象</span></span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// path.resolve([from ...], to) 将to参数解析为绝对路径</span></span><br><span class=\"line\">    <span class=\"attr\">app</span>: <span class=\"string\">&#x27;./src/main.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 输出配置</span></span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 输出文件，路径相对于本文件所在的位置</span></span><br><span class=\"line\">    <span class=\"attr\">path</span>: config.<span class=\"property\">build</span>.<span class=\"property\">assetsRoot</span>,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// publicPath</span></span><br><span class=\"line\">    <span class=\"comment\">// 1.该属性的好处在于当你配置了图片CDN的地址，本地开发时引用本地的图片资源，上线打包时就将资源全部指向正式了，</span></span><br><span class=\"line\">    <span class=\"comment\">// 如果没有确定的发布地址不建议配置该属性，特别是在打包图片时，路径很容易出现混乱，如果没有设置，则默认从站点根目录加载</span></span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span></span><br><span class=\"line\">      ? config.<span class=\"property\">build</span>.<span class=\"property\">assetsPublicPath</span></span><br><span class=\"line\">      : config.<span class=\"property\">dev</span>.<span class=\"property\">assetsPublicPath</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// require时省略的扩展名，遇到.js、.vue、.json结尾的也要去加载</span></span><br><span class=\"line\">    <span class=\"attr\">extensions</span>: [<span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;.vue&#x27;</span>, <span class=\"string\">&#x27;.json&#x27;</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//模块别名地址，方便后续直接引用别名，无须写长长的地址，注意如果后续不能识别该别名，需要先设置root</span></span><br><span class=\"line\">    <span class=\"comment\">//设置别名 是为了使用独立构建 npm默认是使用运行时构建 vue官网有两种构建方式的区别</span></span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;vue$&#x27;</span>: <span class=\"string\">&#x27;vue/dist/vue.esm.js&#x27;</span>,</span><br><span class=\"line\">      <span class=\"string\">&#x27;@&#x27;</span>: <span class=\"title function_\">resolve</span>(<span class=\"string\">&#x27;src&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">//模块加载器</span></span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">      <span class=\"comment\">// loader相当于gulp里的task，用来处理在入口文件中require的和其他方式引用进来的文件，</span></span><br><span class=\"line\">      <span class=\"comment\">// test是正则表达式，匹配要处理的文件；</span></span><br><span class=\"line\">      <span class=\"comment\">// loader匹配要使用的loader，&quot;-loader&quot;可以省略；</span></span><br><span class=\"line\">      <span class=\"comment\">// include把要处理的目录包括进来，exclude排除不处理的目录</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;vue-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">options</span>: vueLoaderConfig</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;babel-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">include</span>: [<span class=\"title function_\">resolve</span>(<span class=\"string\">&#x27;src&#x27;</span>), <span class=\"title function_\">resolve</span>(<span class=\"string\">&#x27;test&#x27;</span>)]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(png|jpe?g|gif|svg)(\\?.*)?$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;url-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 把较小的图片转换成base64的字符串内嵌在生成的js文件里 name指明了输出的命名规则</span></span><br><span class=\"line\">        <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">limit</span>: <span class=\"number\">10000</span>,</span><br><span class=\"line\">          <span class=\"attr\">name</span>: utils.<span class=\"title function_\">assetsPath</span>(<span class=\"string\">&#x27;img/[name].[hash:7].[ext]&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.(woff2?|eot|ttf|otf)(\\?.*)?$/</span>,</span><br><span class=\"line\">        <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;url-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 把较小的图标转换成base64的字符串内嵌在生成的js文件里 name指明了输出的命名规则</span></span><br><span class=\"line\">        <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">          <span class=\"attr\">limit</span>: <span class=\"number\">10000</span>,</span><br><span class=\"line\">          <span class=\"attr\">name</span>: utils.<span class=\"title function_\">assetsPath</span>(<span class=\"string\">&#x27;fonts/[name].[hash:7].[ext]&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>webpack.dev.conf.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// webpack.dev.conf.js在webpack.base.conf的基础上增加完善了开发环境下面的配置</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> 1.将hot-reload相关的代码添加到entry chunks</span></span><br><span class=\"line\"><span class=\"comment\"> 2.合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"comment\"> 3.使用styleLoaders</span></span><br><span class=\"line\"><span class=\"comment\"> 4.配置Source Maps</span></span><br><span class=\"line\"><span class=\"comment\"> 5.配置webpack插件</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// 引入相关依赖</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./utils&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 一个可以合并数组和对象的插件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 一个用于生成HTML文件并自动注入依赖文件（link/script）的webpack插件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">HtmlWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 用于更友好地输出webpack的警告、错误等信息</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">FriendlyErrorsPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;friendly-errors-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// add hot-reload related code to entry chunks</span></span><br><span class=\"line\"><span class=\"comment\">// 这是上面的第一点 热重载与entry相关联</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(baseWebpackConfig.<span class=\"property\">entry</span>).<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">  baseWebpackConfig.<span class=\"property\">entry</span>[name] = [<span class=\"string\">&#x27;./build/dev-client&#x27;</span>].<span class=\"title function_\">concat</span>(baseWebpackConfig.<span class=\"property\">entry</span>[name])</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"title function_\">merge</span>(baseWebpackConfig, &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 配置样式文件的处理规则，使用styleLoaders</span></span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: utils.<span class=\"title function_\">styleLoaders</span>(&#123; <span class=\"attr\">sourceMap</span>: config.<span class=\"property\">dev</span>.<span class=\"property\">cssSourceMap</span> &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// cheap-module-eval-source-map is faster for development</span></span><br><span class=\"line\">  <span class=\"comment\">// 配置Source Maps。在开发中使用cheap-module-eval-source-map更快 这是纯翻译~~~ 晚点去找找这个玩意干啥的</span></span><br><span class=\"line\">  <span class=\"attr\">devtool</span>: <span class=\"string\">&#x27;#cheap-module-eval-source-map&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// webpack插件配置</span></span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"title class_\">DefinePlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;process.env&#x27;</span>: config.<span class=\"property\">dev</span>.<span class=\"property\">env</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// https://github.com/glenjamin/webpack-hot-middleware#installation--usage</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"title class_\">HotModuleReplacementPlugin</span>(),</span><br><span class=\"line\">    <span class=\"comment\">// 报错不会阻塞，但是会在编译结束后报错</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"title class_\">NoEmitOnErrorsPlugin</span>(),</span><br><span class=\"line\">    <span class=\"comment\">// https://github.com/ampedandwired/html-webpack-plugin</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">template</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">inject</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">FriendlyErrorsPlugin</span>()</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>webpack.prod.conf.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 构建的时候用到的webpack配置来自webpack.prod.conf.js，该配置同样是在webpack.base.conf基础上的进一步完善。</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> 1. 合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"comment\"> 2. 使用styleLoaders</span></span><br><span class=\"line\"><span class=\"comment\"> 3. 配置webpack的输出</span></span><br><span class=\"line\"><span class=\"comment\"> 4. 配置webpack插件</span></span><br><span class=\"line\"><span class=\"comment\"> 5. gzip模式下的webpack插件配置</span></span><br><span class=\"line\"><span class=\"comment\"> 6. webpack-bundle分析</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./utils&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-merge&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.base.conf&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">CopyWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;copy-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">HtmlWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 用于从webpack生成的bundle中提取文本到特定文件中的插件</span></span><br><span class=\"line\"><span class=\"comment\">// 可以抽取出css，js文件将其与webpack输出的bundle分离</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ExtractTextPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;extract-text-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">OptimizeCSSPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;optimize-css-assets-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> env = config.<span class=\"property\">build</span>.<span class=\"property\">env</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> webpackConfig = <span class=\"title function_\">merge</span>(baseWebpackConfig, &#123;</span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: utils.<span class=\"title function_\">styleLoaders</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">sourceMap</span>: config.<span class=\"property\">build</span>.<span class=\"property\">productionSourceMap</span>,</span><br><span class=\"line\">      <span class=\"attr\">extract</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">devtool</span>: config.<span class=\"property\">build</span>.<span class=\"property\">productionSourceMap</span> ? <span class=\"string\">&#x27;#source-map&#x27;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack的输出</span></span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">path</span>: config.<span class=\"property\">build</span>.<span class=\"property\">assetsRoot</span>,</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: utils.<span class=\"title function_\">assetsPath</span>(<span class=\"string\">&#x27;js/[name].[chunkhash].js&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">chunkFilename</span>: utils.<span class=\"title function_\">assetsPath</span>(<span class=\"string\">&#x27;js/[id].[chunkhash].js&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    <span class=\"comment\">// http://vuejs.github.io/vue-loader/en/workflow/production.html</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"title class_\">DefinePlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;process.env&#x27;</span>: env</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// 丑化压缩代码</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"property\">optimize</span>.<span class=\"title class_\">UglifyJsPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">compress</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">warnings</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">sourceMap</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// extract css into its own file</span></span><br><span class=\"line\">    <span class=\"comment\">// 抽离css文件</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">ExtractTextPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">filename</span>: utils.<span class=\"title function_\">assetsPath</span>(<span class=\"string\">&#x27;css/[name].[contenthash].css&#x27;</span>)</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// Compress extracted CSS. We are using this plugin so that possible</span></span><br><span class=\"line\">    <span class=\"comment\">// duplicated CSS from different components can be deduped.</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">OptimizeCSSPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">cssProcessorOptions</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">safe</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// generate dist index.html with correct asset hash for caching.</span></span><br><span class=\"line\">    <span class=\"comment\">// you can customize output by editing /index.html</span></span><br><span class=\"line\">    <span class=\"comment\">// see https://github.com/ampedandwired/html-webpack-plugin</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">HtmlWebpackPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">filename</span>: config.<span class=\"property\">build</span>.<span class=\"property\">index</span>,</span><br><span class=\"line\">      <span class=\"attr\">template</span>: <span class=\"string\">&#x27;index.html&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">inject</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">minify</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">removeComments</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">collapseWhitespace</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">removeAttributeQuotes</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"comment\">// more options:</span></span><br><span class=\"line\">        <span class=\"comment\">// https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// necessary to consistently work with multiple chunks via CommonsChunkPlugin</span></span><br><span class=\"line\">      <span class=\"attr\">chunksSortMode</span>: <span class=\"string\">&#x27;dependency&#x27;</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// split vendor js into its own file</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"property\">optimize</span>.<span class=\"title class_\">CommonsChunkPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;vendor&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">minChunks</span>: <span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable language_\">module</span>, count</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// any required modules inside node_modules are extracted to vendor</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">          <span class=\"variable language_\">module</span>.<span class=\"property\">resource</span> &amp;&amp;</span><br><span class=\"line\">          <span class=\"regexp\">/\\.js$/</span>.<span class=\"title function_\">test</span>(<span class=\"variable language_\">module</span>.<span class=\"property\">resource</span>) &amp;&amp;</span><br><span class=\"line\">          <span class=\"variable language_\">module</span>.<span class=\"property\">resource</span>.<span class=\"title function_\">indexOf</span>(</span><br><span class=\"line\">            path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;../node_modules&#x27;</span>)</span><br><span class=\"line\">          ) === <span class=\"number\">0</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// extract webpack runtime and module manifest to its own file in order to</span></span><br><span class=\"line\">    <span class=\"comment\">// prevent vendor hash from being updated whenever app bundle is updated</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.<span class=\"property\">optimize</span>.<span class=\"title class_\">CommonsChunkPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"string\">&#x27;manifest&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">chunks</span>: [<span class=\"string\">&#x27;vendor&#x27;</span>]</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// copy custom static assets</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">CopyWebpackPlugin</span>([</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">from</span>: path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;../static&#x27;</span>),</span><br><span class=\"line\">        <span class=\"attr\">to</span>: config.<span class=\"property\">build</span>.<span class=\"property\">assetsSubDirectory</span>,</span><br><span class=\"line\">        <span class=\"attr\">ignore</span>: [<span class=\"string\">&#x27;.*&#x27;</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ])</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// gzip模式下需要引入compression插件进行压缩</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (config.<span class=\"property\">build</span>.<span class=\"property\">productionGzip</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"title class_\">CompressionWebpackPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;compression-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  webpackConfig.<span class=\"property\">plugins</span>.<span class=\"title function_\">push</span>(</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">CompressionWebpackPlugin</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">asset</span>: <span class=\"string\">&#x27;[path].gz[query]&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">algorithm</span>: <span class=\"string\">&#x27;gzip&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">test</span>: <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(</span><br><span class=\"line\">        <span class=\"string\">&#x27;\\\\.(&#x27;</span> +</span><br><span class=\"line\">        config.<span class=\"property\">build</span>.<span class=\"property\">productionGzipExtensions</span>.<span class=\"title function_\">join</span>(<span class=\"string\">&#x27;|&#x27;</span>) +</span><br><span class=\"line\">        <span class=\"string\">&#x27;)$&#x27;</span></span><br><span class=\"line\">      ),</span><br><span class=\"line\">      <span class=\"attr\">threshold</span>: <span class=\"number\">10240</span>,</span><br><span class=\"line\">      <span class=\"attr\">minRatio</span>: <span class=\"number\">0.8</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (config.<span class=\"property\">build</span>.<span class=\"property\">bundleAnalyzerReport</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> <span class=\"title class_\">BundleAnalyzerPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-bundle-analyzer&#x27;</span>).<span class=\"property\">BundleAnalyzerPlugin</span></span><br><span class=\"line\">  webpackConfig.<span class=\"property\">plugins</span>.<span class=\"title function_\">push</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">BundleAnalyzerPlugin</span>())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = webpackConfig</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>dev-server.js<br>首先来看执行”npm run dev”时候最先执行的build&#x2F;dev-server.js文件。该文件主要完成下面几件事情：</p>\n<ol>\n<li>检查node和npm的版本</li>\n<li>引入相关插件和配置</li>\n<li>创建express服务器和webpack编译器</li>\n<li>配置开发中间件（webpack-dev-middleware）和热重载中间件（webpack-hot-middleware）</li>\n<li>挂载代理服务和中间件</li>\n<li>配置静态资源</li>\n<li>启动服务器监听特定端口（8080）</li>\n<li>自动打开浏览器并打开特定网址（localhost:8080）<br>说明： express服务器提供静态文件服务，不过它还使用了http-proxy-middleware，一个http请求代理的中间件。前端开发过程中需要使用到后台的API的话，可以通过配置proxyTable来将相应的后台请求代理到专用的API服务器<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 检查NodeJS和npm的版本</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./check-versions&#x27;</span>)()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 如果Node的环境变量中没有设置当前的环境（NODE_ENV），则使用config中的配置作为当前的环境</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span>) &#123;</span><br><span class=\"line\">  process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(config.<span class=\"property\">dev</span>.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一个可以调用默认软件打开网址、图片、文件等内容的插件</span></span><br><span class=\"line\"><span class=\"comment\">// 这里用它来调用默认浏览器打开dev-server监听的端口，例如：localhost:8080</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> opn = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;opn&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一个express中间件，用于将http请求代理到其他服务器</span></span><br><span class=\"line\"><span class=\"comment\">// 例：localhost:8080/api/xxx  --&gt;  localhost:3000/api/xxx</span></span><br><span class=\"line\"><span class=\"comment\">// 这里使用该插件可以将前端开发中涉及到的请求代理到API服务器上，方便与服务器对接</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> proxyMiddleware = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http-proxy-middleware&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./webpack.dev.conf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// default port where dev server listens for incoming traffic</span></span><br><span class=\"line\"><span class=\"comment\">// dev-server 监听的端口，默认为config.dev.port设置的端口，即8080</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> port = process.<span class=\"property\">env</span>.<span class=\"property\">PORT</span> || config.<span class=\"property\">dev</span>.<span class=\"property\">port</span></span><br><span class=\"line\"><span class=\"comment\">// automatically open browser, if not set will be false</span></span><br><span class=\"line\"><span class=\"comment\">// 用于判断是否要自动打开浏览器的布尔变量，当配置文件中没有设置自动打开浏览器的时候其值为 false</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> autoOpenBrowser = !!config.<span class=\"property\">dev</span>.<span class=\"property\">autoOpenBrowser</span></span><br><span class=\"line\"><span class=\"comment\">// Define HTTP proxies to your custom API backend</span></span><br><span class=\"line\"><span class=\"comment\">// https://github.com/chimurai/http-proxy-middleware</span></span><br><span class=\"line\"><span class=\"comment\">// 定义 HTTP 代理表，代理到 API 服务器</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> proxyTable = config.<span class=\"property\">dev</span>.<span class=\"property\">proxyTable</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> app = <span class=\"title function_\">express</span>()</span><br><span class=\"line\"><span class=\"comment\">// 根据webpack配置文件创建Compiler对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> compiler = <span class=\"title function_\">webpack</span>(webpackConfig)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// webpack-dev-middleware使用compiler对象来对相应的文件进行编译和绑定</span></span><br><span class=\"line\"><span class=\"comment\">// 编译绑定后将得到的产物存放在内存中而没有写进磁盘</span></span><br><span class=\"line\"><span class=\"comment\">// 将这个中间件交给express使用之后即可访问这些编译后的产品文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> devMiddleware = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-dev-middleware&#x27;</span>)(compiler, &#123;</span><br><span class=\"line\">  <span class=\"attr\">publicPath</span>: webpackConfig.<span class=\"property\">output</span>.<span class=\"property\">publicPath</span>,</span><br><span class=\"line\">  <span class=\"attr\">quiet</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// webpack-hot-middleware，用于实现热重载功能的中间件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> hotMiddleware = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;webpack-hot-middleware&#x27;</span>)(compiler, &#123;</span><br><span class=\"line\">  <span class=\"attr\">log</span>: <span class=\"function\">() =&gt;</span> &#123;&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// force page reload when html-webpack-plugin template changes</span></span><br><span class=\"line\"><span class=\"comment\">// 当html-webpack-plugin提交之后通过热重载中间件发布重载动作使得页面重载</span></span><br><span class=\"line\">compiler.<span class=\"title function_\">plugin</span>(<span class=\"string\">&#x27;compilation&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">compilation</span>) &#123;</span><br><span class=\"line\">  compilation.<span class=\"title function_\">plugin</span>(<span class=\"string\">&#x27;html-webpack-plugin-after-emit&#x27;</span>, <span class=\"keyword\">function</span> (<span class=\"params\">data, cb</span>) &#123;</span><br><span class=\"line\">    hotMiddleware.<span class=\"title function_\">publish</span>(&#123; <span class=\"attr\">action</span>: <span class=\"string\">&#x27;reload&#x27;</span> &#125;)</span><br><span class=\"line\">    <span class=\"title function_\">cb</span>()</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// proxy api requests</span></span><br><span class=\"line\"><span class=\"comment\">// 将 proxyTable 中的代理请求配置挂在到express服务器上</span></span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(proxyTable).<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">context</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> options = proxyTable[context]</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> options === <span class=\"string\">&#x27;string&#x27;</span>) &#123;</span><br><span class=\"line\">    options = &#123; <span class=\"attr\">target</span>: options &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  app.<span class=\"title function_\">use</span>(<span class=\"title function_\">proxyMiddleware</span>(options.<span class=\"property\">filter</span> || context, options))</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// handle fallback for HTML5 history API</span></span><br><span class=\"line\"><span class=\"comment\">// 重定向不存在的URL，常用于SPA</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;connect-history-api-fallback&#x27;</span>)())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// serve webpack bundle output</span></span><br><span class=\"line\"><span class=\"comment\">// 使用webpack开发中间件</span></span><br><span class=\"line\"><span class=\"comment\">// 即将webpack编译后输出到内存中的文件资源挂到express服务器上</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(devMiddleware)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// enable hot-reload and state-preserving</span></span><br><span class=\"line\"><span class=\"comment\">// compilation error display</span></span><br><span class=\"line\"><span class=\"comment\">// 将热重载中间件挂在到express服务器上</span></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(hotMiddleware)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// serve pure static assets</span></span><br><span class=\"line\"><span class=\"comment\">// 将静态资源挂到express服务器上</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> staticPath = path.<span class=\"property\">posix</span>.<span class=\"title function_\">join</span>(config.<span class=\"property\">dev</span>.<span class=\"property\">assetsPublicPath</span>, config.<span class=\"property\">dev</span>.<span class=\"property\">assetsSubDirectory</span>)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(staticPath, express.<span class=\"title function_\">static</span>(<span class=\"string\">&#x27;./static&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> uri = <span class=\"string\">&#x27;http://localhost:&#x27;</span> + port</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> _resolve</span><br><span class=\"line\"><span class=\"keyword\">var</span> readyPromise = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\"><span class=\"params\">resolve</span> =&gt;</span> &#123;</span><br><span class=\"line\">  _resolve = resolve</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 控制台输入启动信息</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;&gt; Starting dev server...&#x27;</span>)</span><br><span class=\"line\">devMiddleware.<span class=\"title function_\">waitUntilValid</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;&gt; Listening at &#x27;</span> + uri + <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">  <span class=\"comment\">// when env is testing, don&#x27;t need open it</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (autoOpenBrowser &amp;&amp; process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> !== <span class=\"string\">&#x27;testing&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">opn</span>(uri)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"title function_\">_resolve</span>()</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 监听端口</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> server = app.<span class=\"title function_\">listen</span>(port)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">ready</span>: readyPromise,</span><br><span class=\"line\">  <span class=\"attr\">close</span>: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    server.<span class=\"title function_\">close</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\nutils.js<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> 1. 配置静态资源路径</span></span><br><span class=\"line\"><span class=\"comment\"> 2. 生成cssLoaders用于加载.vue文件中的样式</span></span><br><span class=\"line\"><span class=\"comment\"> 3. 生成styleLoaders用于加载不在.vue文件中的单独存在的样式文件</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../config&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">ExtractTextPlugin</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;extract-text-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">assetsPath</span> = <span class=\"keyword\">function</span> (<span class=\"params\">_path</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> assetsSubDirectory = process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span></span><br><span class=\"line\">    ? config.<span class=\"property\">build</span>.<span class=\"property\">assetsSubDirectory</span></span><br><span class=\"line\">    : config.<span class=\"property\">dev</span>.<span class=\"property\">assetsSubDirectory</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> path.<span class=\"property\">posix</span>.<span class=\"title function_\">join</span>(assetsSubDirectory, _path)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">cssLoaders</span> = <span class=\"keyword\">function</span> (<span class=\"params\">options</span>) &#123;</span><br><span class=\"line\">  options = options || &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> cssLoader = &#123;</span><br><span class=\"line\">    <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;css-loader&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">options</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">minimize</span>: process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span> === <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">sourceMap</span>: options.<span class=\"property\">sourceMap</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// generate loader string to be used with extract text plugin</span></span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">generateLoaders</span> (loader, loaderOptions) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> loaders = [cssLoader]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (loader) &#123;</span><br><span class=\"line\">      loaders.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">loader</span>: loader + <span class=\"string\">&#x27;-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">options</span>: <span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(&#123;&#125;, loaderOptions, &#123;</span><br><span class=\"line\">          <span class=\"attr\">sourceMap</span>: options.<span class=\"property\">sourceMap</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Extract CSS when that option is specified</span></span><br><span class=\"line\">    <span class=\"comment\">// (which is the case during production build)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (options.<span class=\"property\">extract</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title class_\">ExtractTextPlugin</span>.<span class=\"title function_\">extract</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">use</span>: loaders,</span><br><span class=\"line\">        <span class=\"attr\">fallback</span>: <span class=\"string\">&#x27;vue-style-loader&#x27;</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> [<span class=\"string\">&#x27;vue-style-loader&#x27;</span>].<span class=\"title function_\">concat</span>(loaders)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// https://vue-loader.vuejs.org/en/configurations/extract-css.html</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">css</span>: <span class=\"title function_\">generateLoaders</span>(),</span><br><span class=\"line\">    <span class=\"attr\">postcss</span>: <span class=\"title function_\">generateLoaders</span>(),</span><br><span class=\"line\">    <span class=\"attr\">less</span>: <span class=\"title function_\">generateLoaders</span>(<span class=\"string\">&#x27;less&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">sass</span>: <span class=\"title function_\">generateLoaders</span>(<span class=\"string\">&#x27;sass&#x27;</span>, &#123; <span class=\"attr\">indentedSyntax</span>: <span class=\"literal\">true</span> &#125;),</span><br><span class=\"line\">    <span class=\"attr\">scss</span>: <span class=\"title function_\">generateLoaders</span>(<span class=\"string\">&#x27;sass&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">stylus</span>: <span class=\"title function_\">generateLoaders</span>(<span class=\"string\">&#x27;stylus&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">styl</span>: <span class=\"title function_\">generateLoaders</span>(<span class=\"string\">&#x27;stylus&#x27;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Generate loaders for standalone style files (outside of .vue)</span></span><br><span class=\"line\"><span class=\"built_in\">exports</span>.<span class=\"property\">styleLoaders</span> = <span class=\"keyword\">function</span> (<span class=\"params\">options</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> output = []</span><br><span class=\"line\">  <span class=\"keyword\">var</span> loaders = <span class=\"built_in\">exports</span>.<span class=\"title function_\">cssLoaders</span>(options)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> extension <span class=\"keyword\">in</span> loaders) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> loader = loaders[extension]</span><br><span class=\"line\">    output.<span class=\"title function_\">push</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">test</span>: <span class=\"keyword\">new</span> <span class=\"title class_\">RegExp</span>(<span class=\"string\">&#x27;\\\\.&#x27;</span> + extension + <span class=\"string\">&#x27;$&#x27;</span>),</span><br><span class=\"line\">      <span class=\"attr\">use</span>: loader</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> output</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n<hr>\n<p>config文件夹下的index.js<br>在这里面描述了开发和构建两种环境下的配置，前面的build文件夹下也有不少文件引用了index.js里面的配置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// see http://vuejs-templates.github.io/webpack for documentation.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">build</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">env</span>: <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./prod.env&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">index</span>: path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;../dist/index.html&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">assetsRoot</span>: path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;../dist&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">assetsSubDirectory</span>: <span class=\"string\">&#x27;static&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">assetsPublicPath</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">productionSourceMap</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// Gzip off by default as many popular static hosts such as</span></span><br><span class=\"line\">    <span class=\"comment\">// Surge or Netlify already gzip all static assets for you.</span></span><br><span class=\"line\">    <span class=\"comment\">// Before setting to `true`, make sure to:</span></span><br><span class=\"line\">    <span class=\"comment\">// npm install --save-dev compression-webpack-plugin</span></span><br><span class=\"line\">    <span class=\"attr\">productionGzip</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">productionGzipExtensions</span>: [<span class=\"string\">&#x27;js&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>],</span><br><span class=\"line\">    <span class=\"comment\">// Run the build command with an extra argument to</span></span><br><span class=\"line\">    <span class=\"comment\">// View the bundle analyzer report after build finishes:</span></span><br><span class=\"line\">    <span class=\"comment\">// `npm run build --report`</span></span><br><span class=\"line\">    <span class=\"comment\">// Set to `true` or `false` to always turn it on or off</span></span><br><span class=\"line\">    <span class=\"attr\">bundleAnalyzerReport</span>: process.<span class=\"property\">env</span>.<span class=\"property\">npm_config_report</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">dev</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">env</span>: <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./dev.env&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">8080</span>,</span><br><span class=\"line\">    <span class=\"attr\">autoOpenBrowser</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">assetsSubDirectory</span>: <span class=\"string\">&#x27;static&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">assetsPublicPath</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">proxyTable</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"comment\">// CSS Sourcemaps off by default because relative paths are &quot;buggy&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">// with this option, according to the CSS-Loader README</span></span><br><span class=\"line\">    <span class=\"comment\">// (https://github.com/webpack/css-loader#sourcemaps)</span></span><br><span class=\"line\">    <span class=\"comment\">// In our experience, they generally work as expected,</span></span><br><span class=\"line\">    <span class=\"comment\">// just be aware of this issue when enabling this option.</span></span><br><span class=\"line\">    <span class=\"attr\">cssSourceMap</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>还有就是build文件夹下面两个比较简单的文件<br>dev-client.js似乎没有使用到，代码也比较简单，这里不多讲。<br>check-version.js完成对node和npm的版本检测</p>\n<hr>\n<p>之前没学webpack&amp;vue的时候用这个cli工具用的比较蛋疼，然后刚好有时间去看下这里面的配置。<br>还是熟悉了很多，至少知道了这些代码的意义，做的事情的哪些。算是对webpack这个打包工具的初识吧。</p>\n<blockquote>\n<p>本文多处源于：<a href=\"http://blog.csdn.net/hongchh/article/details/55113751\">vue-cli的webpack模板项目配置文件分析</a><br>感谢大佬的分享，此处仅做笔记。</p>\n</blockquote>"},{"title":"前端组件集合","date":"2016-08-02T16:00:00.000Z","description":"常用前端组件 - 从大神这码一发","_content":"> 搭建web app常用的样式/组件等收集列表(移动优先)\n\n<!-- more -->\n## 0. 前端自动化(Workflow)\n\n- 前端构建工具\n  - [Webpack - module bundler](https://github.com/webpack/webpack)\n  - [Yeoman - a set of tools for automating development workflow](https://github.com/yeoman/yeoman) \n  - [gulp - The streaming build system](http://gulpjs.com/) \n    - [use-gulp](https://github.com/Platform-CUF/use-gulp)\n  - [grunt - the JavaScript Task Runner](http://gruntjs.com/)\n  - [F.I.S - 前端集成解决方案](https://github.com/fex-team/fis)\n  - [Web Starter Kit - 一个Google 提供的帮助开发者快速设置项目的工具集](https://github.com/google/web-starter-kit)\n- 前端模块管理器\n  - [Bower - A package manager for the web](http://bower.io/)\n  - [Browserify](http://browserify.org/)\n  - [Component](https://github.com/componentjs/component)\n  - [Duo](http://duojs.org/)\n  - [RequireJS](http://requirejs.org/)\n  - [Sea.js](http://seajs.org/)\n  - [LABjs - 文件加载器](https://github.com/getify/LABjs)\n  - [css-modulesify - CSS模块加载器](https://github.com/css-modules/css-modulesify)\n- css预处理器\n  - [Less - Less is More , Than CSS](http://lesscss.org/) \n  - [Sass - Syntactically Awesome Style Sheets](http://sass-lang.com/)\n  - [Stylus - Expressive, dynamic, robust CSS](http://learnboost.github.io/stylus/)\n- 前端性能分析工具\n  - [analyze-css - CSS 选择器的复杂度和性能分析器](https://github.com/macbre/analyze-css)\n\n## 1. 前端框架(Frameworks)\n\n- [Bootstrap](https://github.com/twbs/bootstrap)\n- [Foundation](https://github.com/zurb/foundation)\n- [Amaze UI](http://amazeui.org/)\n- [Semantic UI](https://github.com/semantic-org/semantic-ui)\n- [Pure CSS](http://purecss.io/)\n- [topcoat](https://github.com/topcoat/topcoat)\n- [UIkit](https://github.com/uikit/uikit)\n- [Material UI](https://github.com/callemall/material-ui)\n- [Materialize - 一个基于 Material Design 的 CSS 框架](https://github.com/Dogfalo/materialize)\n- [Framework7](http://www.idangero.us/framework7)\n- [mui](https://github.com/dcloudio/mui)\n- [ionic framework](http://ionicframework.com/)\n- [Fries](https://github.com/jaunesarmiento/fries)\n- [jQuery Mobile](http://jquerymobile.com/)\n- [App.js](https://github.com/kikinteractive/app)\n- [Office UI Fabric - 微软 Office 前端团队的框架](https://github.com/OfficeDev/Office-UI-Fabric)\n- [Polymer - Google发布的Web组件构建框架](https://www.polymer-project.org)\n- [Layui - 经典模块化前端UI框架](https://github.com/sentsin/layui/)\n\n## 2. JavaScript 框架汇总\n\n- JavaScript 框架\n  - [react](https://github.com/facebook/react)\n  - [Angular](https://github.com/angular/angular)\n  - [jQuery](https://github.com/jquery/jquery)\n  - [Backbone.js](https://github.com/jashkenas/backbone)\n  - [ember.js](https://github.com/emberjs/ember.js)\n  - [Ractive.js](https://github.com/ractivejs/ractive)\n  - [KISSY](https://github.com/kissyteam/kissy)\n  - [Zepto.js](https://github.com/madrobby/zepto)\n  - [Vanilla JS](http://vanilla-js.com/)\n  - [Vue.js - 数据驱动的组件化MVVM库(用于创建web交互界面和数据双向绑定)](https://github.com/yyx990803/vue)\n    - [awesome-vue](https://github.com/vuejs/awesome-vue)\n    - [Element - 基于 Vue 2.0 构建了一套完整的桌面 UI 组件库](http://element.eleme.io/#/)\n    - [Vuex - 一个专门为 Vue.js 应用设计的状态管理架构](https://github.com/vuejs/vuex)\n    - [Mint UI：基于 Vue.js 的移动端组件库](https://github.com/ElemeFE/mint-ui)\n    - [Vux - 基于 Vue 和 WeUI 的 UI 组件库](https://github.com/airyland/vux)\n    - [vonic - 基于 Vue.js 和 Ionic 的移动 UI 组件库](https://github.com/wangdahoo/vonic)\n    - [vuetify - vue2.0组件库](https://github.com/vuetifyjs/vuetify)\n    - [iView - 一套基于 Vue.js 的高质量 UI 组件库](https://github.com/iview/iview)\n    - [vue-i18n](https://github.com/kazupon/vue-i18n)\n  - [Can.js](http://canjs.com/guides/Utilities.html)\n  - [Avalon](https://github.com/RubyLouvre/avalon)\n  - [T3 JavaScript Framework - 一个用于搭建大型Web应用的客户端JS框架](https://github.com/box/t3js/)\n  - [jsblocks - Better MV-ish Framework 从简单 UI 到复杂单页应用都适用](https://github.com/astoilkov/jsblocks)\n- 轻量级JavaScript框架\n  - [Min.js - Super minimal selector and event library](https://github.com/remy/min.js) \n  - [skel.js - A lightweight responsive framework](https://github.com/n33/skel)\n  - [Sprint.js - 一个高性能、小体积的 DOM 操作库](https://github.com/bendc/sprint)\n  - [knockout](https://github.com/knockout/knockout)\n  - [PhantomJS - 一个基于 WebKit 的服务器端 JavaScript API](https://github.com/ariya/phantomjs/)\n- 函数式反应型编程框架 FRP (Functional Reactive Programming) library\n  - [Bacon.js - A small functional reactive programming lib for JavaScript.](https://github.com/baconjs/bacon.js/) \n  - [Flapjax - 一个支持FRP的JavaScript框架](http://www.flapjax-lang.org/)\n- JavaScript 工具库\n  - [underscore.js](https://github.com/jashkenas/underscore)\n  - [Underscore.string.js字符串操作库](https://github.com/epeli/underscore.string)\n  - [functional.js](https://github.com/leecrossley/functional-js/)\n  - [Lo-Dash - A JavaScript utility library](https://github.com/lodash/lodash)\n  - [Lazy.js - a functional utility library for JavaScript](https://github.com/dtao/lazy.js)\n  - [Fn.js](https://github.com/eliperelman/fn.js)\n  - [Way.js - 双向数据绑定库](https://github.com/gwendall/way.js)\n  - [boiler - a utility library that makes tasks in JavaScript easier](https://github.com/Xaxis/boiler)\n  - 快捷键操作\n    - [Keys.js - 应用快捷键](https://github.com/bitwalker/keys.js)\n    - [simple-hotkeys](https://github.com/mycolorway/simple-hotkeys)\n    - [jquery.hotkeys](https://github.com/jeresig/jquery.hotkeys)\n    - [Mousetrap - 键盘快捷键操作](https://github.com/ccampbell/mousetrap)\n  - [vConsole - 一个针对手机网页的前端 console 调试面板](https://github.com/WechatFE/vConsole)\n  - [AlloyLever - 移动web开发者工具面板](https://github.com/AlloyTeam/AlloyLever)\n\n## 3. 前端游戏框架\n\n- [cocos2d-html5](https://github.com/cocos2d/cocos2d-html5)\n- [Egret Engine](http://www.egret-labs.org/)\n- [LimeJS](https://github.com/digitalfruit/limejs)\n- [EaselJS](https://github.com/CreateJS/EaselJS)\n- [three.js](https://github.com/mrdoob/three.js)\n- [AlloyStick](https://github.com/AlloyTeam/AlloyStick)\n- [The-Best-JS-Game-Framework](https://github.com/finscn/The-Best-JS-Game-Framework)\n- [CanvasEngine](https://github.com/RSamaium/CanvasEngine)\n- [Quintus](https://github.com/cykod/Quintus)\n- [Stage.js](https://github.com/piqnt/stage.js/)\n- [phaser - 一个快速、免费、开源的 HTML5 游戏框架](https://github.com/photonstorm/phaser/)\n\n## 4. ui组件库(CSS Framework)\n\n- [WeUI - 微信官方UI库](https://github.com/weui/weui)\n  - [jQuery WeUI - WeUI的jQuery版本](https://github.com/lihongxun945/jquery-weui)\n- [GMU - 基于zepto的ui组件库，适用于移动端](https://github.com/fex-team/GMU)\n- [FrozenUI - 腾讯移动端组件库](https://github.com/frozenui/frozenui)\n- [NEC - 更好的CSS方案 ](http://nec.netease.com/)\n- [NEJ - 更好的JS解决方案](http://nej.netease.com/)\n- [Pure CSS Components](https://github.com/LFeh/css-components/)\n- [magic-of-css](https://github.com/adamschwartz/magic-of-css)\n- [Primer - The CSS toolkit and guidelines that power GitHub](https://github.com/primer/primer)\n- [light7 - A Light and easy to use UI Lib](https://github.com/lihongxun945/light7)\n- [Spectre.css - 轻量、响应式的现代 CSS 框架](https://github.com/picturepan2/spectre)\n- [mobi.css - 一个轻量、灵活的移动端 CSS 框架](https://github.com/xcatliu/mobi.css)\n\n## 5. 基础模版\n- 浏览器统一(Cross Browser)\n  - [HTML5 BOILERPLATE](https://github.com/h5bp/html5-boilerplate)\n  - [Modernizr](https://github.com/Modernizr/Modernizr)\n  - [Normalize.css](https://github.com/necolas/normalize.css/)\n  - [HTML5 Shiv - 让ie浏览器成为支持html5的浏览器的解决方法](https://github.com/afarkas/html5shiv)\n  - [cssFx - 为CSS3自动生成浏览器前缀](https://github.com/imsky/cssFx)\n  - [-prefix-free - Break free from CSS prefix hell](https://github.com/LeaVerou/prefixfree)\n  - [ieBetter.js - make ie browser like a morden browser main for ie6~ie8](https://github.com/zhangxinxu/ieBetter.js)\n  - [es6-promise - Promise 对象的兼容](https://github.com/stefanpenner/es6-promise)\n- 响应式\n  - [Responsive - 响应式布局](https://github.com/ResponsiveBP/Responsive)\n  - [Enquire.js - Awesome Media Queries in JavaScript](https://github.com/WickyNilliams/enquire.js)\n  - [Free Wall - 创建桌面，移动和平板的动态网格布局](https://github.com/kombai/freewall)\n- 适配方案\n  - [MetaHandler.js：移动端适配各种屏幕无痛工具脚本](https://github.com/unbug/generator-webappstarter/blob/master/app/templates/app/src/util/MetaHandler.js)\n  - [lib-flexible: 移动端自适应方案](https://github.com/amfe/lib-flexible)\n    - [参考: 使用Flexible实现手淘H5页面的终端适配](https://github.com/amfe/article/issues/17?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n    - [flexible demo 1](http://ufologist.github.io/responsive-page/others-responsive/flexible.html)\n    - [flexible demo 2](http://huodong.m.taobao.com/act/yibo.html)\n  - [pageResponse](https://github.com/peunzhang/pageResponse)\n  - [responsive-page](https://github.com/ufologist/responsive-page)\n\n## 6. 排版\n\n- [yue.css](https://github.com/lepture/yue.css)\n- [typo.css](https://github.com/sofish/typo.css)\n- [chinese-copywriting-guidelines - 中文文案排版指南](https://github.com/sparanoid/chinese-copywriting-guidelines) \n\n## 7. 网格系统\n\n- [grid](https://github.com/aekaplan/grid)\n- [Flexbox Grid](https://github.com/kristoferjoseph/flexboxgrid)\n- [MasonJS - creating a perfect grid](https://github.com/DrewDahlman/Mason)\n\n\n## 8. 路由和链接(Routing And URLs)\n\n- [History.js - gracefully supports the HTML5 History/State APIs](https://github.com/browserstate/history.js)\n- [jquery-pjax - pushState+ajax](https://github.com/defunkt/jquery-pjax)\n- [jquery-address - Deep Linking](https://github.com/asual/jquery-address)\n- [page.js - Micro client-side router](https://github.com/visionmedia/page.js)\n- [crossroads.js](https://github.com/millermedeiros/crossroads.js)\n- [hash.js](https://github.com/javve/hash.js)  \n- [path.js](https://github.com/mtrpcic/pathjs)\n- [director.js - 前端路由库(通过#符号进行路径组织,结合vue的component可进行单页的局部模块刷新)](https://github.com/flatiron/director)\n- [URI.js](https://github.com/medialize/URI.js)\n- [Roadcrew.js](https://github.com/grobmeier/Roadcrew.js)\n- [SpeakingURL](https://github.com/pid/speakingurl)\n- [uparams - An URL params parser](https://github.com/YanagiEiichi/uparams)\n- [StateMan - 一个处理深层次单页系统的路由库](https://github.com/leeluolee/stateman)\n\n## 9. UA 识别\n\n- [detector](https://github.com/hotoo/detector)\n- [ua-parser-js](https://github.com/faisalman/ua-parser-js/)\n\n## 10. 表单处理\n\n### 10.1 表单验证(Form Validator)/表单提示\n\n- [Validator](https://github.com/niceue/validator)\n- [Parsley](https://github.com/guillaumepotier/Parsley.js)\n- [jquery.form.js - jQuery Form Plugin](https://github.com/malsup/form)\n- [Validform](https://github.com/haiercdboy/Validform)\n- [validator.js](https://github.com/sofish/validator.js)\n- [jquery-validation - jQuery Validation Plugin](https://github.com/jzaefferer/jquery-validation)\n- [formvalidator.js](https://github.com/victorjonsson/jQuery-Form-Validator)\n- [Fort.js – 表单填写进度提示](http://github.com/Colourity/Fort.js)\n- [mailcheck - 用于检测email地址的域名](https://github.com/mailcheck/mailcheck)\n- [Floatlable.js - 输入时显示placeholder文本](https://github.com/clubdesign/floatlabels.js)\n- [jQuery Label Better](https://github.com/peachananr/label_better)\n- [validator.js](https://github.com/ppoffice/validator.js)\n\n### 10.2 < input > 相关\n\n- [cleave.js - 格式化你的输入内容](https://github.com/nosir/cleave.js)\n\n### 10.3 < select > 相关\n\n- [Chosen](https://github.com/harvesthq/chosen)\n- [Select2](https://github.com/select2/select2)\n- [bootstrap-select](https://github.com/silviomoreto/bootstrap-select)\n\n### 10.4 单选框/复选框相关\n\n- [iCheck - 增强复选框和单选按钮](https://github.com/fronteed/iCheck)\n- [Switchery - iOS 7 style switches for your checkboxes](https://github.com/abpetkov/switchery)\n\n### 10.5 上传组件\n\n- [jQuery File Upload Plugin](https://github.com/blueimp/jQuery-File-Upload)\n- [百度 Web Uploader](http://fex-team.github.io/webuploader/)\n- [uploadify](http://www.uploadify.com/)\n- [Plupload](https://github.com/moxiecode/plupload)\n- [Fine Uploader](http://fineuploader.com/index.html)\n- [arale-upload - 轻量级 iframe and html5 file uploader](https://github.com/aralejs/upload)\n- [Dropzone.js - 文件上传库(可获取文件mime, 文件大小等; 针对图片可生成缩略图,获取图片宽度,高度)](https://github.com/enyo/dropzone)\n- [flow.js](https://github.com/flowjs/flow.js)\n- [localResizeIMG - 前端本地客户端压缩图片，兼容IOS，Android，PC](https://github.com/think2011/localResizeIMG)\n- [simple-uploader](https://github.com/mycolorway/simple-uploader)\n\n### 10.6 日期选择\n\n- [Both Date and Time picker widget based on twitter bootstrap](https://github.com/smalot/bootstrap-datetimepicker)\n- [GMU 日历组件](http://gmu.baidu.com/demo/widget/calendar/calendar.html)\n- [Mobiscroll](https://github.com/acidb/mobiscroll)\n- [Pikaday - 日期选择器](https://github.com/dbushell/Pikaday)\n- 价格日历\n  - [PriceCalendar - 酒店价格日历](https://github.com/fugm/PriceCalendar)\n    - [API文档](http://fgm.cc/learn/calendar/price-calendar/api.html)  \n    - [DEMO](http://fgm.cc/learn/calendar/price-calendar/)\n  - [price-calendar - 价格日历](https://github.com/wind-stone/price-calendar)\n  - [price_calendar - 含有商品价格的日历控件](https://github.com/zhangyi5628/price_calendar)\n\n### 10.7 取色\n\n- [Colorpicker plugin for Twitter Bootstrap](https://github.com/mjolnic/bootstrap-colorpicker)\n\n### 10.8 标签插件(Tag)\n\n- [TaggingJS – 可以灵活定制的 jQuery 标签系统插件](https://github.com/sniperwolf/taggingJS)\n- [selectize.js](https://github.com/brianreavis/selectize.js)\n- [Bootstrap Tags Input](https://github.com/timschlechter/bootstrap-tagsinput/)\n- [jQuery-Tags-Input](https://github.com/xoxco/jQuery-Tags-Input)\n\n### 10.9 自动完成插件\n\n- [At.js - 一个Twitter/微博样式的@自动完成插件](https://github.com/ichord/At.js)\n- [jquery-textcomplete - 智能搜索提示框/自动补全](https://github.com/yuku-t/jquery-textcomplete)\n- [typeahead.js - a fast and fully-featured autocomplete library](https://github.com/twitter/typeahead.js)\n\n### 10.10 样式修正\n\n- [autosize - 使文本框自动适应所输入的内容](https://github.com/jackmoore/autosize)\n\n## 11. 图表绘制/图形库(Graphics)\n\n- [Highcharts](https://github.com/highslide-software/highcharts.com)\n- [Chart.js - Simple HTML5 Charts using Canvas](https://github.com/nnnick/Chart.js)\n- [百度 ECharts](https://github.com/ecomfe/echarts)\n- [Chartist.js](https://github.com/gionkunz/chartist-js)\n- [D3.js - A JavaScript visualization library for HTML and SVG.](https://github.com/mbostock/d3)\n  - [intro-to-d3 - a D3.js tutorial](https://github.com/square/intro-to-d3) \n- [Bonsai - 一个功能强大的JavaScript图形库](https://github.com/uxebu/bonsai)\n- [epoch - 数据图表可视化](https://github.com/fastly/epoch/)\n- [Vis.js](https://github.com/almende/vis)\n- [Coutour.js](https://github.com/forio/contour)\n- [zrender - 一个轻量级的Canvas类库，MVC封装，数据驱动，提供类Dom事件模型，让canvas绘图大不同！](https://github.com/ecomfe/zrender)\n\n## 12. 日期格式化 & 时间轴\n\n- [Moment.js - 日期处理](http://momentjs.com/)\n- [Smart Time Ago - 显示相对时间](https://github.com/pragmaticly/smart-time-ago)\n- [timeline.js](https://github.com/vorg/timeline.js)\n- [timeago.js](https://github.com/hustcc/timeago.js)\n\n## 13. 页面交互\n\n### 13.1 Slider\n\n- [slick - the last carousel you'll ever need](https://github.com/kenwheeler/slick/)\n- [Swipe - the most accurate touch slider](https://github.com/thebird/Swipe)\n- [Swiper - Most modern mobile touch slider](https://github.com/nolimits4web/Swiper)\n- [iscroll - Smooth scrolling for the web](https://github.com/cubiq/iscroll)\n- [iSlider - 移动端滑动组件](https://github.com/BE-FE/iSlider)\n- [OwlCarousel - create beautiful responsive carousel slider](https://github.com/OwlFonk/OwlCarousel)\n- [jquery-mousewheel - jQuery鼠标滚轮滚动侦测插件](https://github.com/jquery/jquery-mousewheel/)\n- [Glide.js - 轻量级滑块组件](https://github.com/jedrzejchalubek/Glide.js)\n- [PhotoSwipe](https://github.com/dimsemenov/photoswipe)\n- [TouchSlide - 触屏滑动特效(焦点图,Tab切换)](http://www.superslide2.com/TouchSlide/)\n\n### 13.2 瀑布流\n\n- [Masonry](http://masonry.desandro.com/)\n- [Isotope - Filter & sort magical layouts](http://isotope.metafizzy.co/)\n- [Bricklayer](https://github.com/ademilter/bricklayer)\n\n### 13.3 懒加载/加载监听/预加载\n\n- [imagesLoaded](https://github.com/desandro/imagesloaded)\n- [Echo.js](https://github.com/toddmotto/echo)\n- [lazySizes](https://github.com/aFarkas/lazysizes)\n- [jquery_lazyload](https://github.com/tuupola/jquery_lazyload)\n- [BttrLazyLoading](https://github.com/shprink/bttrlazyloading/)\n- [lazyload.js](https://github.com/vvo/lazyload)\n- [layzr.js - 一个小巧快速的图片懒加载库](https://github.com/callmecavs/layzr.js)\n- [waitForImages - 图片加载监听库](https://github.com/alexanderdickson/waitForImages)\n- [PxLoader - JS预加载库:实现图片、声音等各种文件的预加载功能](https://github.com/thinkpixellab/PxLoader)\n- [bindWithDelay - jQuery Plugin For Delayed Event Execution](https://github.com/bgrins/bindWithDelay)\n- [TypeWatch - 停止输入时调用](https://github.com/dennyferra/TypeWatch)\n\n### 13.4 图片轮播(幻灯片)/图片展示 \n\n- [FlexSlider](https://github.com/woothemes/FlexSlider)\n- [unslider - 小而美的轮播库](https://github.com/idiot/unslider)\n- [prettyPhoto](https://github.com/scaron/prettyphoto)\n- [FlickerPlate - A cool jQuery plugin that lets you flick through content.](https://github.com/chrishumboldt/Flickerplate)\n- [Holder.js - Client-side image placeholders.](https://github.com/imsky/holder)\n- [RowGrid.js - 在径直的行里放置图片](https://github.com/brunjo/rowGrid.js)\n- [ImageLightbox.js - 灯箱效果](http://osvaldas.info/examples/image-lightbox-responsive-touch-friendly/)\n- [JQuery Panorama Viewer - 全景视图](https://github.com/peachananr/panorama_viewer)\n- [Intense Images - 全屏查看图片](https://github.com/tholman/intense-images)\n- [Picturefill - 一个响应式图片 JS 插件](http://scottjehl.github.io/picturefill/)\n- [zoom.js - 一个 jQuery 图片放大插件](https://github.com/fat/zoom.js)\n- [watermarkjs - 一个在浏览器中添加图片水印的 JS 库](https://github.com/brianium/watermarkjs)\n- [responsive-images.js](https://github.com/kvendrik/responsive-images.js)\n- [Turntable.js - 轻易实现图像的3D旋转](https://github.com/polarnotion/turntable)\n- [ResponsifyJS - 让图像完全响应式而不会牺牲图像的主要部分](https://github.com/wentin/ResponsifyJS)\n\n### 13.5 图片剪裁/图片处理\n\n- [Jcrop -  Image Cropping Plugin for jQuery](https://github.com/tapmodo/Jcrop)\n- [croppic - an image cropping jquery plugin](https://github.com/sconsult/croppic)\n- [smartcrop.js - 智能图片裁剪库](https://github.com/jwagner/smartcrop.js)\n- [jQuery.eraser - 图像擦除插件](https://github.com/boblemarin/jQuery.eraser)\n- [DD_belatedPNG.js - 让IE6支持透明PNG图片](http://www.dillerdesign.com/experiment/DD_belatedPNG/)\n- [FocusPoint.js 实现图片的响应式裁剪](https://github.com/jonom/jquery-focuspoint)\n- [imgareaselect](https://github.com/odyniec/imgareaselect)\n- [CSSgram - CSS 实现的 Instagram 滤镜库](https://github.com/una/CSSgram)\n- [antimoderate - 图片模糊库](https://github.com/whackashoe/antimoderate)\n\n### 13.6 进度条/加载动画(Loading)\n\n- [NProgress.js](http://ricostacruz.com/nprogress/)\n- [progress.js](https://github.com/usablica/progress.js)\n- [Pace - Automatic page load progress bar](https://github.com/HubSpot/pace)\n- [jquery-ajax-progress](https://github.com/englercj/jquery-ajax-progress)\n- [nanobar - Very lightweight progress bars.](https://github.com/jacoborus/nanobar)\n- [waitMe - 很漂亮的loading效果](https://github.com/vadimsva/waitMe)\n- [spin.js](https://github.com/fgnass/spin.js)\n- [sonic.js](https://github.com/padolsey/sonic.js)\n- [fakeLoader.js](https://github.com/joaopereirawd/fakeLoader.js)\n- [loaders.css - 一个为性能优化的实现加载动画效果的 CSS 框架](https://github.com/ConnorAtherton/loaders.css)\n- [css-loaders](https://github.com/lukehaas/css-loaders)\n- [Sausage - 跟踪滚动条并记录当前阅读所处节点](https://github.com/christophercliff/sausage)\n\n### 13.7 侧滑插件(offcancas)\n\n- [pushy -  a responsive off-canvas navigation menu ](https://github.com/christophery/pushy)\n- [Slideout.js - 一个用于移动 Web 应用的触摸滑出式导航菜单](https://github.com/mango/slideout)\n\n### 13.8 菜单(Menu)\n\n- [SuperFish - 基于jQuery的级联下拉菜单](https://github.com/joeldbirch/superfish)\n- [Responsive Nav - 响应式导航](https://github.com/viljamis/responsive-nav.js)\n- [metisMenu - A jQuery menu plugin](https://github.com/onokumus/metisMenu)\n\n### 13.9 滚动侦测(ScrollSpy)\n\n- [jquery-scrollspy(1)](https://github.com/sxalexander/jquery-scrollspy)\n- [jquery-scrollspy(2)](https://github.com/thesmart/jquery-scrollspy)\n- [Waypoints](https://github.com/imakewebthings/waypoints)\n- [ScrollMagic - 像进度条一样使用滚动条](https://github.com/janpaepke/ScrollMagic)\n\n### 13.10 滚动加载更多/下拉刷新(Pull to Refresh)\n\n- [jScroll](https://github.com/pklauzinski/jscroll)\n- [web-pull-to-refresh](https://github.com/apeatling/web-pull-to-refresh)\n- [pulltorefresh](https://github.com/dwcares/pulltorefresh)\n- [RubberBand.js - add pull-to-refresh functionality to any page.](https://github.com/ThrivingKings/RubberBand.js)\n\n### 13.11 平滑滚动插件(Smooth Scroll)\n\n- [jquery-smooth-scroll](https://github.com/kswedberg/jquery-smooth-scroll)\n- [jquery.scrollTo - 平滑滚动到页面指定位置](https://github.com/flesler/jquery.scrollTo)\n- [smooth-scroll](https://github.com/cferdinandi/smooth-scroll)\n- [scrollUp](https://github.com/markgoodyear/scrollup)\n- [elevator.js - 一个模拟电梯运行“返回顶部”的 JS 插件](https://github.com/tholman/elevator.js)\n\n### 13.12 全屏滚动/全屏切换\n\n- [pagePiling.js - 全屏滚动效果](https://github.com/alvarotrigo/pagePiling.js)\n- [fullPage.js](https://github.com/alvarotrigo/fullPage.js/)\n- [onepage-scroll](https://github.com/peachananr/onepage-scroll)\n- [zepto.fullpage - 专注于移动端的fullPage.js](https://github.com/yanhaijing/zepto.fullpage)\n- [screenfull.js - 切换全屏模式](https://github.com/sindresorhus/screenfull.js)\n\n### 13.13 分屏滚动\n\n- [multiscroll.js - 分屏滚动效果](https://github.com/alvarotrigo/multiscroll.js)\n\n### 13.14 转场效果\n\n- [Animsition - 页面切换时的过渡效果](https://github.com/blivesta/animsition)\n\n### 13.15 固定元素(Sticky)\n\n- [sticky - jQuery Plugin for Sticky Objects](https://github.com/garand/sticky)\n- [jquery.pin - 固定页面元素](https://github.com/webpop/jquery.pin)\n- [stickUp](https://github.com/LiranCohen/stickUp)\n- [Slinky.js - 堆叠头部创建滑动导航列表](https://github.com/iclanzan/slinky)\n\n### 13.16 触控事件\n\n- [Hammer.js](https://github.com/hammerjs/hammer.js)\n- [jquery.event.move.js](https://github.com/stephband/jquery.event.move)\n\n### 13.17 拖拽组件\n\n- [Draggabilly - 专注于拖拽功能的 JS 库](https://github.com/desandro/draggabilly)\n- [dragula - 一个让拖放操作变简单的 JS 库](https://github.com/bevacqua/dragula)\n- [GridList - 可拖拉的响应式列表库](https://github.com/uberVU/grid)\n\n### 13.18 隐藏或展示页面元素\n\n- [Headroom.js - 在不需要页头时将其隐藏](http://www.bootcss.com/p/headroom.js/)\n- [Readmore.js - 内容显示与隐藏插件](https://github.com/jedfoster/Readmore.js)\n- [oriDomi - 像指一样折叠Dom元素](https://github.com/dmotz/oriDomi)\n\n### 13.19 滚动条(Scrollbar)\n\n- [jScrollPane](https://github.com/vitch/jScrollPane)\n- [jquery.scrollbar](https://github.com/gromo/jquery.scrollbar)\n- [perfect-scrollbar](https://github.com/noraesae/perfect-scrollbar)\n- [nanoScrollerJS](https://github.com/jamesflorentino/nanoScrollerJS)\n- [tinyscrollbar](https://github.com/wieringen/tinyscrollbar)\n\n### 13.20 视差滚动(Parallax Scrolling)\n\n- [parallax.js](https://github.com/wagerfield/parallax)\n- [jparallax](https://github.com/stephband/jparallax)\n- [skrollr](https://github.com/Prinzhorn/skrollr)\n\n## 13.21 缩放 (Zooming)\n\n- [zoom.js - 一款效果很独特的页面内容缩放插件](https://github.com/hakimel/zoom.js)\n- [zoom.js - 一个 jQuery 图片放大插件](https://github.com/fat/zoom.js)\n- [jQuery Zoom - mouseover时图片缩放效果](https://github.com/jackmoore/zoom)\n\n## 14. 代码高亮插件/代码编辑器\n\n- [google-code-prettify](https://code.google.com/p/google-code-prettify/)\n- [highlight.js](https://highlightjs.org/)\n- [Rainbow](http://craig.is/making/rainbows)\n- [ACE](https://github.com/ajaxorg/ace)\n- [CodeMirror](https://github.com/codemirror/codemirror)\n- [Crayon Syntax Highlighter](https://github.com/aramk/crayon-syntax-highlighter)\n- [prism - Lightweight, robust, elegant syntax highlighting.](https://github.com/PrismJS/prism)\n\n## 15. UI Icon 组件\n\n- [Font Awesome](http://fontawesome.io/icons/)\n- [Glyphter: The SVG Font Machine](http://glyphter.com/)\n- [Perfect Icons](http://perfecticons.com/)\n- [iconizr](http://iconizr.com/)\n- [Cikonss - 纯CSS实现的响应式Icon](http://www.bootcss.com/p/cikonss/)\n- [Simple Icons](https://github.com/danleech/simple-icons)\n\n## 16. 动画(Animate)\n\n- [animate.css - A cross-browser library of CSS animations.](https://github.com/daneden/animate.css)\n- [Transit - CSS transitions and transformations for jQuery](https://github.com/rstacruz/jquery.transit)\n- [anime.js - Javascript 动画引擎](https://github.com/juliangarnier/anime)\n- [WOW - 在滚动过程中展示CSS动画效果(默认触发animate.css动画)](https://github.com/matthieua/WOW)\n- [AniJS - A Library to Raise your Web Design without Coding](https://github.com/anijs/anijs/)\n- [Move.js - 简化CSS3动画的JS库](https://github.com/visionmedia/move.js)\n- [ScrollMe – 在网页中加入各种滚动动画效果](https://github.com/nckprsn/scrollme)\n- [Effeckt.css - A Performant Transitions and Animations Library](https://github.com/h5bp/Effeckt.css)\n- [NEC动画库](http://nec.netease.com/library/category/#animation)\n- [csshake - CSS classes to move your DOM](https://github.com/elrumordelaluz/csshake)\n- [magic - CSS3 Animations with special effects](https://github.com/miniMAC/magic)\n- [SpinKit](https://github.com/tobiasahlin/SpinKit)\n- [Velocity.js - 加速JavaScript动画](https://github.com/julianshapiro/velocity)\n- [lenticular.js - 响应倾斜或鼠标事件创建图片动画](https://github.com/thomasxiii/lenticular.js)\n- [jQuery Interactive 3D - Create a 3D interactive object using images](https://github.com/peachananr/interactive_3d)\n- [AnimateScroll - A Simple jQuery Plugin for Animating Scroll](https://github.com/ramswaroop/animatescroll.js)\n- [Blast.js - 把动画和样式注入到文本中](https://github.com/julianshapiro/blast)\n- [Bounce.js - 一个用于制作漂亮 CSS3 关键帧动画的 JS 库](https://github.com/tictail/bounce.js)\n- [Sticker.js - create a Sticker Effect](https://github.com/cmiscm/stickerjs)\n- [scrollReveal.js - 元素进入可视区域自动触发设置好的动画](https://github.com/julianlloyd/scrollReveal.js)\n- [stroll.js - CSS3 list scroll effects](https://github.com/hakimel/stroll.js)\n- [jQuery Easing -  动画效果扩展](https://github.com/gdsmith/jquery.easing)\n- [animations - CSS3 ANIMATION CHEAT SHEET](http://www.justinaguilar.com/animations/index.html)\n- [iconate.js：将 icons 增加动画效果的 JS 库](https://github.com/bitshadow/iconate)\n- [Odometer - 数字之间的垂直切换](https://github.com/HubSpot/odometer)\n- Hover - 悬停效果\n  - [Hover.css - 很多鼠标Hover态的效果](https://github.com/IanLunn/Hover)\n  - [imagehover.css - 为图片添加悬停效果](https://github.com/ciar4n/imagehover.css)\n  - [iHover - 图片悬停效果](https://github.com/gudh/ihover)\n  - [ImageCaptionHoverAnimation](https://github.com/hasinhayder/ImageCaptionHoverAnimation)\n  - [Bootstrap Hover Image Gallery](http://miketricking.github.io/dist/)\n- Multi-touch gestures library - Web手势库\n  - [AlloyFinger - 腾讯 AlloyTeam 出品的超级小的 Web 手势库](https://github.com/AlloyTeam/AlloyFinger)\n\n## 17. 本地存储\n\n- [cross-storage - Cross domain local storage](https://github.com/zendesk/cross-storage)\n- [localForage](https://github.com/mozilla/localForage)\n- [pouchdb](https://github.com/pouchdb/pouchdb)\n- [basil.js](https://github.com/Wisembly/basil.js)\n- [Neurosync - JavaScript 本地离线 ORM 库](https://github.com/ClickerMonkey/neurosync)\n- [LokiJS - 性能优先的 JavaScript 内存数据库](https://github.com/techfort/LokiJS)\n- [turbolinks - Javascript pushState](https://github.com/turbolinks/turbolinks)\n\n## 18. 模板引擎\n\n- [doT.js](https://github.com/olado/doT)\n- [mustache.js](https://github.com/janl/mustache.js)\n- [Handlebars.js](http://www.jingwentian.com/t-66)\n- [artTemplate](https://github.com/aui/artTemplate)\n- [baiduTemplate](https://github.com/wangxiao/BaiduTemplate)\n- [JSRender](https://github.com/BorisMoore/jsrender)\n- [EJS - JavaScript Templates](https://github.com/tj/ejs)\n- [Juicer - A Light Javascript Templete Engine.](https://github.com/PaulGuo/Juicer)\n- [Tempo](https://github.com/twigkit/tempo)\n- [json2html](https://github.com/moappi/json2html)\n- [Hogan.js - JavaScript templating from Twitter.](https://github.com/twitter/hogan.js)\n- [Dust.js - Linkedin维护的项目](https://github.com/linkedin/dustjs)\n\n## 19. 通知组件/弹框组件/模态窗口\n\n- [Notify.js(Web Notifications API)](https://github.com/alexgibson/notify.js)\n- [alertify.js](https://github.com/fabien-d/alertify.js)\n- [AlertifyJS](https://github.com/MohammadYounes/AlertifyJS)\n- [SweetAlert](https://github.com/t4t5/sweetalert)\n- [Messenger - 非常酷的弹框组件](https://github.com/HubSpot/messenger)\n- [PNotify](https://github.com/sciactive/pnotify)\n- [Notify.js - A simple, versatile notification library](https://github.com/jpillora/notifyjs)\n- [Remodal - 模态窗口插件](https://github.com/VodkaBears/Remodal)\n- [action.js - 极简的tip和Modal弹窗效果](https://github.com/egoist/action.js)\n- [Modaal - 一个创建弹出窗口的jQuery插件](https://github.com/humaan/Modaal)\n- [Vex - 可以实现3D动效的弹出对话框堆叠效果](https://github.com/hubspot/vex)\n\n## 20. 提示控件(Tooltips)\n\n- [hint.css - 一款非常小巧的提示框效果](https://github.com/chinchang/hint.css)\n- [qTip2 - Pretty powerful tooltips](https://github.com/qTip2/qTip2)\n- [tooltip - CSS Tooltips](https://github.com/HubSpot/tooltip)\n- [tooltipster - A jQuery tooltip plugin](https://github.com/iamceege/tooltipster)\n- [grumble.js - 气泡形状的提示（Tooltip）控件](https://github.com/jamescryer/grumble.js)\n- [Ouibounce - 离站提示控件](https://github.com/carlsednaoui/ouibounce)\n- [intro.js - 一个创建引导式网站介绍功能的 JS 库](https://github.com/usablica/intro.js)\n- [data-tip.css - 纯 CSS 实现的工具提示](https://github.com/egoist/data-tip.css)\n\n## 21. 对话框/遮罩层/弹出层(lightbox)\n\n- [fancyBox - Fancy jQuery lightbox](https://github.com/fancyapps/fancyBox)\n- [jquery-lightbox - The popular lightbox script, ported to jQuery](https://github.com/krewenki/jquery-lightbox)\n- [Colorbox - a jQuery lightbox](https://github.com/jackmoore/colorbox)\n- [artDialog - 经典的网页对话框组件](https://github.com/aui/artDialog)\n- [DialogEffects](https://github.com/codrops/DialogEffects)\n- [jQuery blockUI - Page or element overlay](https://github.com/malsup/blockui/)\n- [layer - web弹出窗/层](https://github.com/sentsin/layer/)\n\n## 22. 文档/表格/PDF\n\n- [Backgrid.js - 强大的表格组件](https://github.com/wyuenho/backgrid)\n- [handsontable - 在线可编辑excel表格](https://github.com/handsontable/handsontable)\n- [jQuery Bootgrid - 用于ajax生成动态表格](https://github.com/rstaib/jquery-bootgrid)\n- [DataTables - Table plug-in for jQuery](https://github.com/DataTables/DataTables)\n- [PDF.js - 一个 JavaScript 编写的 PDF 阅读器](https://github.com/mozilla/pdf.js)\n- [jsPDF - Generate PDF files in JavaScript](https://github.com/MrRio/jsPDF)\n- [Recline.js - 灵活操作和展示数据](https://github.com/okfn/recline/)\n- [Dynatable - 交互式表格插件](https://github.com/alfajango/jquery-dynatable)\n- [fattable - 创建无限滚动无限行列数的表格](https://github.com/fulmicoton/fattable)\n- [Clusterize.js - 一个轻松显示大数据集的 JS 插件](https://github.com/NeXTs/Clusterize.js)\n- [Uniform -表单美化插件](https://github.com/AudithSoftworks/Uniform)\n\n## 23. 目录树插件\n\n- [zTree_v3 - jQuery Tree Plugin](https://github.com/zTree/zTree_v3)\n- [jstree - jQuery Tree Plugin](https://github.com/vakata/jstree)\n- [fancytree - Tree plugin for jQuery](https://github.com/mar10/fancytree)\n\n## 24. 前后端交互\n\n### 24.1 Ajax模块\n\n- [fetch - A window.fetch JavaScript polyfill](https://github.com/github/fetch)\n- [reqwest - browser asynchronous http requests](https://github.com/ded/reqwest)\n- [ajax - Standalone AJAX library](https://github.com/ForbesLindesay/ajax)\n- [then-request](https://github.com/then/then-request)\n- [browser-request](https://github.com/iriscouch/browser-request)\n- [superagent](https://github.com/visionmedia/superagent)\n- [minAjax.js](https://github.com/argunner/minAjax.js/)\n- [qwest - 第三方的Ajax库](https://github.com/pyrsmk/qwest)\n- [axios - Promise based HTTP client for the browser and node.js](https://github.com/mzabriskie/axios)\n- [whatwg-fetch](https://github.com/fis-components/whatwg-fetch)\n\n### 24.2 SSE (Server-Sent Events)\n> SSE API用于创建到服务器的单向连接，服务器通过这个连接可以发送任意数量的数据.\n\n- [EventSource](https://github.com/Yaffle/EventSource)\n\n### 24.3 Web Sockets\n\n\n## 25. 音频/视频\n\n- [jPlayer -  HTML5 Audio & Video for jQuery](https://github.com/happyworm/jPlayer)\n- [video.js - HTML5 & Flash video player](https://github.com/videojs/video.js)\n- [Accessible HTML5 Video Player - PayPal 开源的 HTML5 视频播放器](https://github.com/paypal/accessible-html5-video-player)\n- [Clappr - 开源的Web视频播放器](https://github.com/clappr/clappr)\n- [Plyr - A simple HTML5 media player](https://github.com/selz/plyr)\n- [FitVids.js - A lightweight, easy-to-use jQuery plugin for fluid width video embeds.](https://github.com/davatron5000/FitVids.js)\n- [BigVideo.js - The jQuery Plugin for Big Background Video](https://github.com/dfcb/BigVideo.js)\n- [BigScreen - A simple library for using the JavaScript Full Screen API](https://github.com/bdougherty/BigScreen)\n- [Vide - 视频背景](https://github.com/VodkaBears/Vide)\n- [winamp2-js](https://github.com/captbaritone/winamp2-js)\n- [Buzz - A Javascript HTML5 Audio library](https://github.com/jaysalvat/buzz)\n- [MediaElement.js](http://github.com/johndyer/mediaelement/)\n\n## 26. 按钮\n\n- [Buttons - A CSS button library](https://github.com/alexwolfe/Buttons)\n- [ButtonComponentMorph](https://github.com/codrops/ButtonComponentMorph)\n- [ProgressButtonStyles](https://github.com/codrops/ProgressButtonStyles)\n- [CreativeButtons](https://github.com/codrops/CreativeButtons)\n- [CSS3 buttons](https://github.com/ubuwaits/css3-buttons)\n- [jquery.onoff - Interactive, accessible toggle switches for the web.](https://github.com/timmywil/jquery.onoff)\n- [Flipside - 一个能过渡到对话框的按钮](https://github.com/hakimel/css/tree/master/flipside)\n\n## 27. 富文本编辑器/Markdown编辑器/Markdown解析器\n\n- [Simditor - 简单快速的富文本编辑器](https://github.com/mycolorway/simditor)\n- [BachEditor - 一个有情怀的编辑器](https://github.com/Integ/BachEditor)\n- [TinyMCE](https://github.com/tinymce/tinymce)\n- [bootstrap-markdown](https://github.com/toopay/bootstrap-markdown)\n- [marked - markdown解析器](https://github.com/chjj/marked)\n- [Markdown Plus](https://github.com/tylingsoft/markdown-plus)\n- [Editor.md - 开源在线Markdown编辑器](https://github.com/pandao/editor.md)\n- [stackedit](https://github.com/benweet/stackedit)\n- [Redactor Text Editor](http://imperavi.com/redactor/)\n- [micromarkdown.js - 轻量级的md解析器](https://github.com/simonwaldherr/micromarkdown.js/)\n- [wangEditor - 支持移动端的轻量级web富文本框](https://github.com/wangfupeng1988/wangEditor)\n- [CKEditor - 可视化 HTML 编辑器](https://github.com/ckeditor/ckeditor-dev)\n- [Quill - 富文本编辑器](https://github.com/quilljs/quill)\n\n## 28. 内容提取(Readability)\n\n- [Readability](https://code.google.com/p/arc90labs-readability/)\n- [json.human.js - Json Formatting for Human Beings](https://github.com/marianoguerra/json.human.js)\n\n## 29. 颜色(CSS Colors)/SVG/Canvas\n\n- [CSS Colours](http://colours.neilorangepeel.com/)\n- [SVGeneration](http://www.svgeneration.com/)\n- [SVGMagic - 自动的创建PNG来兼容不支持SVG的浏览器](https://github.com/dirkgroenen/SVGMagic)\n- [Adaptive Backgrounds - 从图片抽取主要颜色和应用到父元素](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js)\n- [Seen.js - 渲染3D场景为SVG或者HTML Canvas](https://github.com/themadcreator/seen)\n- [jquery-color - 可以动态改动颜色](https://github.com/jquery/jquery-color/)\n\n## 30. 选项卡(Tabs)\n\n- [Easy Responsive Tabs to Accordion](https://github.com/samsono/Easy-Responsive-Tabs-to-Accordion)\n- [Responsive-Tabs](https://github.com/jellekralt/Responsive-Tabs)\n- [ion.tabs - jQuery tabs plugin](https://github.com/IonDen/ion.tabs)\n- [jQuery-EasyTabs](https://github.com/JangoSteve/jQuery-EasyTabs)\n- [tabulous.js](https://github.com/aarondo/tabulous.js)\n\n## 31. 文本处理\n\n- [ZeroClipboard - 文本复制插件](https://github.com/zeroclipboard/zeroclipboard)\n- [clipboard.js](https://github.com/zenorocha/clipboard.js/)\n- [Bigfoot - 点击文章中的脚注弹窗显示](https://github.com/lemonmade/bigfoot)\n- [Annotator - 文本注解插件，可以包括注释、标签、用户等](https://github.com/openannotation/annotator)\n- [Succinct - 用作截断多行文本,后面添加省略号](https://github.com/micjamking/Succinct)\n- [Flowtype.js - 自动调整字体大小和行号](https://github.com/simplefocus/FlowType.JS)\n- [flat-shadow](https://github.com/peachananr/flat-shadow)\n- [FitText - A jQuery plugin for inflating web type](https://github.com/davatron5000/FitText.js)\n- [shine.js - 实现漂亮阴影](https://github.com/bigspaceship/shine.js)\n- [Type Rendering Mix - 文本渲染引擎](https://github.com/bramstein/trmix/)\n- [jquery-expander - 阅读更多](https://github.com/kswedberg/jquery-expander)\n- [Typed.js - 输入模拟插件](https://github.com/mattboldt/typed.js/)\n- [jQuery.dotdotdot - 多行文本溢出显示省略号](https://github.com/FrDH/jQuery.dotdotdot)\n- [baffle.js - 文本互动效果](https://github.com/camwiegert/baffle)\n\n## 32. 布局(Layout)\n\n- 分隔面板(Split Panel)\n  - [split-pane](https://github.com/shagstrom/split-pane)\n  - [jQuery UI Layout](http://layout.jquery-dev.com/)\n\n## 33. 演示/幻灯片\n\n- [reveal.js - The HTML Presentation Framework](https://github.com/hakimel/reveal.js)\n- [bespoke.js - DIY Presentation Micro-Framework](https://github.com/markdalgleish/bespoke.js)\n- [impress.js](https://github.com/bartaz/impress.js)\n- [shower](https://github.com/shower/shower)\n- [deck.js](https://github.com/imakewebthings/deck.js)\n\n## 34. 国际化(i18n)\n\n- [jquery-i18n](https://github.com/recurser/jquery-i18n)\n- [i18next.js](https://github.com/i18next/i18next)\n- [jsperanto.js](https://github.com/jpjoyal/jsperanto)\n- [jed.js](https://github.com/SlexAxton/Jed)\n- [messageformat.js](https://github.com/SlexAxton/messageformat.js)\n- [Polyglot.js](https://github.com/airbnb/polyglot.js)\n\n## 35. 邮件模板(Email Templates)\n\n- [responsive-html-email-template](https://github.com/leemunroe/responsive-html-email-template)\n\n## 36. 移动端优化(Optimizing Mobile Performance)\n\n- [FastClick - 处理移动端 click 事件 300 毫秒延迟](https://github.com/ftlabs/fastclick)\n- [tappy](https://github.com/filamentgroup/tappy/)\n- [jquery-fast-click](https://github.com/dave1010/jquery-fast-click)\n\n## 37. HTTP请求相关\n\n- [pako - HTTP 请求正文压缩](https://github.com/nodeca/pako)\n  - [参考阅读: 如何压缩 HTTP 请求正文](https://imququ.com/post/how-to-compress-http-request-body.html)\n  - [HTTP 请求正文压缩 DEMO](https://qgy18.com/request-compress/)\n- [RSA in JavaScript - 用RSA加密实现Web数据加密传输](http://www.ohdave.com/rsa/)\n\n## 38. 下载组件\n\n- [download](https://github.com/rndme/download)\n- [Downloadify](https://github.com/dcneiner/Downloadify)\n\n## 39. 实用工具/其他插件\n\n- [jquery-cookie](https://github.com/carhartl/jquery-cookie)\n- [JavaScript Cookie](https://github.com/js-cookie/js-cookie)\n- [InstantClick - 预加载用户可能会点击的一些链接](https://github.com/dieulot/instantclick/)\n- [Async.js - 异步操作](https://github.com/caolan/async)\n- [html2canvas - 实现纯JS网页截图](https://github.com/niklasvh/html2canvas)\n- [jquery.qrcode.js - 生成二维码的 jQuery 插件](https://github.com/jeromeetienne/jquery-qrcode)\n- [qrcodejs - JS生成QRCode的库](https://github.com/davidshimjs/qrcodejs)\n- [nakedpassword - 用脱衣女帮助检测密码强度](https://github.com/platform45/nakedpassword)\n- [KityMinder - 脑图编辑工具](https://github.com/fex-team/kityminder)\n- [MixitUp - 动画过滤和排序](https://github.com/patrickkunka/mixitup)\n- [JQuery Tip Cards - 创建卡片交互的cards布局](https://github.com/peachananr/tip_cards)\n- [Fallback.js - JavaScript library for dynamically loading CSS and JS files.](https://github.com/dolox/fallback/)\n- [swfobject](https://github.com/swfobject/swfobject)\n- [prettyprint.js - An in-browser JavaScript variable dumper](https://github.com/padolsey-archive/prettyprint.js)\n- [Shepherd - 为应用创建用户指南](https://github.com/HubSpot/shepherd)\n- [RulersGuide.js - 类似PhotoShop标尺的js库](https://github.com/mark-rolich/RulersGuides.js)\n- [Gremlins.js - Monkey 测试库](https://github.com/marmelab/gremlins.js)\n- [RoughDraft.js - 简单快速的创建交互式的 HTML 模型的原型工具](https://github.com/ndreckshage/roughdraft.js/)\n- [favico.js - 动态改变浏览器标签栏中的网站图标](https://github.com/ejci/favico.js)\n- [pageguide - 网页向导](https://github.com/tracelytics/pageguide)\n- [jsdiff - js diff 算法](https://github.com/kpdecker/jsdiff)\n\n# ES6( ECMAScript 2015 )\n\n## ES6转码器(ES6 to ES5)\n\n- [Babel](https://github.com/babel/babel/) - 一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行\n- [babelify](https://github.com/babel/babelify) - 将babel引入到Gulp, Grunt, npm run等构建过程\n- [traceur-compiler](https://github.com/google/traceur-compiler) - Traceur is a JavaScript.next-to-JavaScript-of-today compiler\n\n## ES6入门\n\n- [ECMAScript 6入门](http://es6.ruanyifeng.com/) - 阮一峰老师的开源的JavaScript语言教程\n- [Learn ES2015](https://babeljs.io/docs/learn-es2015/)\n- [ES6 - New features Overview & Comparison](http://es6-features.org/)\n- [ES6 Overview in 350 Bullet Points](https://ponyfoo.com/articles/es6)\n- [es6features](https://github.com/lukehoban/es6features)\n\n\n# 设计模式( JavaScript Patterns )\n\n- [javascript-patterns](https://github.com/shichuan/javascript-patterns)\n- [jquery-patterns - A variety of jQuery plugin patterns](https://github.com/jquery-boilerplate/jquery-patterns)\n- [Learning JavaScript Design Patterns](http://addyosmani.com/resources/essentialjsdesignpatterns/book/)\n\n# 在线工具( Online Tools )\n\n- [jsbin - Collaborative JavaScript Debugging App](http://jsbin.com)\n  - [jsbin@Github](https://github.com/jsbin/jsbin)\n- [jsfiddle](http://jsfiddle.net/)\n- [jsbeautifier - Online JavaScript beautifier](http://jsbeautifier.org/)\n- [resume.github.com](http://resume.github.io)\n\n# 前端开发工具\n\n## 1. 开发工具\n\n- [Sublime Text](http://www.sublimetext.com/)\n\n## 2. 调试工具\n\n- [Fiddler](http://www.telerik.com/fiddler)\n- [Weinre](http://people.apache.org/~pmuellr/weinre-docs/latest/Home.html)\n- [Rythem](http://www.alloyteam.com/2012/05/web-front-end-tool-rythem-1/)\n- [csscss - 用于检查css代码冗余](https://github.com/zmoazeni/csscss)\n- [FECS - 基于 Node.js 的前端代码检查工具](http://fecs.baidu.com/)\n- [JSON Server - 模拟 API](https://github.com/typicode/json-server)\n- [swagger-ui - 基于REST的API测试/文档](https://github.com/swagger-api/swagger-ui)\n\n## 3. 模拟数据( Fake )\n\n- [JSONPlaceholder](http://jsonplaceholder.typicode.com/)\n- [json-server - Get a full fake REST API](https://github.com/typicode/json-server)\n- [lowdb -  A small local JSON database powered by lodash](https://github.com/typicode/lowdb)\n\n## 4. 浏览器扩展(Chrome Extensions)\n\n- [Postman - REST Client](https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm)\n- [Fiddler - Fiddler for Chrome Extension](http://welefen.github.io/Fiddler/)\n- [WEB前端助手(FeHelper)](https://chrome.google.com/webstore/detail/web%E5%89%8D%E7%AB%AF%E5%8A%A9%E6%89%8Bfehelper/pkgccpejnmalmdinmhkkfafefagiiiad)\n- [Web Developer](https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm)\n- [Chrome Logger](https://chrome.google.com/webstore/detail/chrome-logger/noaneddfkdjfnfdakjjmocngnfkfehhd)\n- [ColorZilla](https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp)\n- [ColorPick Eyedropper](https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg?hl=en)\n- [Code Cola](https://chrome.google.com/webstore/detail/code-cola/lomkpheldlbkkfiifcbfifipaofnmnkn)\n- [1px](https://chrome.google.com/webstore/detail/1px/gebccnmciopflhcdihopmphapifkkfdh)\n- [AlloyDesigner - 前端重构开发辅助工具](https://chrome.google.com/webstore/detail/alloydesigner/ojooeaohlmgpcjajikhmibcnbebfenid)\n- [Fontface Ninja](https://chrome.google.com/webstore/detail/fontface-ninja/eljapbgkmlngdpckoiiibecpemleclhh)\n- [PageSpeed Insights (by Google)](https://chrome.google.com/webstore/detail/pagespeed-insights-by-goo/gplegfbjlmmehdoakndmohflojccocli)\n- [HTTP Status](https://chrome.google.com/webstore/detail/http-status/cknfnacbckhfpjahnmkblajcpledpfnp/related)\n- [Redirect Path](https://chrome.google.com/webstore/detail/redirect-path/aomidfkchockcldhbkggjokdkkebmdll/related)\n- [Responsive Web Design Tester](https://chrome.google.com/webstore/detail/responsive-web-design-tes/objclahbaimlfnbjdeobicmmlnbhamkg?hl=en)\n- [Window Resizer](https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh?hl=en)\n- [CSSViewer](https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce?hl=en)\n- [IE Tab](https://chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd?hl=en)\n- [Clear Cache](https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?hl=en)\n- [JSONView](https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn/related?hl=en)\n- [Image Downloader](https://chrome.google.com/webstore/detail/image-downloader/cnpniohnfphhjihaiiggeabnkjhpaldj)\n- [Pretty Beautiful Javascript - 可以自动格式化混淆的js文件](https://chrome.google.com/webstore/detail/pretty-beautiful-javascri/piekbefgpgdecckjcpffhnacjflfoddg/related?utm_source=chrome-ntp-icon)\n- [JavaScript Errors Notifier](https://chrome.google.com/webstore/detail/javascript-errors-notifie/jafmfknfnkoekkdocjiaipcnmkklaajd?utm_source=chrome-ntp-icon)\n- [CSS Diff - 在线比对页面上两个元素的CSS样式差异](https://chrome.google.com/webstore/detail/css-diff/pefnhibkhcfooofgmgoipfpcojnhhljm/related)\n- [WhatFont- 识别网页所使用的字体](https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm)\n\n# 前端参考集\n\n- [frontend-guidelines - Some HTML, CSS and JS best practices.](https://github.com/bendc/frontend-guidelines)\n- [frontend-dev-bookmarks](https://github.com/dypsilon/frontend-dev-bookmarks)\n- [Codrops - Useful resources](https://github.com/codrops)\n- [Front-end Code Standards & Best Practices](http://isobar-idev.github.io/code-standards/)\n- [frontend-dev-bookmarks](https://github.com/dypsilon/frontend-dev-bookmarks)\n- [awesome-javascript](https://github.com/wwsun/awesome-javascript)\n- [Front-end-tutorial - 前端涉及的所有知识体系](https://github.com/nicejade/Front-end-tutorial)\n- [awesome-vue](https://github.com/vuejs/awesome-vue)\n- 前端编码规范( Standard Style ) \n  - [Airbnb 的 JavaScript 编码规范](https://github.com/airbnb/javascript)\n  - [JavaScript Standard Style](https://github.com/feross/standard)\n\n***\nfrom [github.com/JingwenTian](https://github.com/JingwenTian)","source":"_posts/前端组件集 - 转载.md","raw":"---\ntitle: 前端组件集合\ndate: 2016-08-03\ncategories: 前端\ntags: [前端]\ndescription: 常用前端组件 - 从大神这码一发\n---\n> 搭建web app常用的样式/组件等收集列表(移动优先)\n\n<!-- more -->\n## 0. 前端自动化(Workflow)\n\n- 前端构建工具\n  - [Webpack - module bundler](https://github.com/webpack/webpack)\n  - [Yeoman - a set of tools for automating development workflow](https://github.com/yeoman/yeoman) \n  - [gulp - The streaming build system](http://gulpjs.com/) \n    - [use-gulp](https://github.com/Platform-CUF/use-gulp)\n  - [grunt - the JavaScript Task Runner](http://gruntjs.com/)\n  - [F.I.S - 前端集成解决方案](https://github.com/fex-team/fis)\n  - [Web Starter Kit - 一个Google 提供的帮助开发者快速设置项目的工具集](https://github.com/google/web-starter-kit)\n- 前端模块管理器\n  - [Bower - A package manager for the web](http://bower.io/)\n  - [Browserify](http://browserify.org/)\n  - [Component](https://github.com/componentjs/component)\n  - [Duo](http://duojs.org/)\n  - [RequireJS](http://requirejs.org/)\n  - [Sea.js](http://seajs.org/)\n  - [LABjs - 文件加载器](https://github.com/getify/LABjs)\n  - [css-modulesify - CSS模块加载器](https://github.com/css-modules/css-modulesify)\n- css预处理器\n  - [Less - Less is More , Than CSS](http://lesscss.org/) \n  - [Sass - Syntactically Awesome Style Sheets](http://sass-lang.com/)\n  - [Stylus - Expressive, dynamic, robust CSS](http://learnboost.github.io/stylus/)\n- 前端性能分析工具\n  - [analyze-css - CSS 选择器的复杂度和性能分析器](https://github.com/macbre/analyze-css)\n\n## 1. 前端框架(Frameworks)\n\n- [Bootstrap](https://github.com/twbs/bootstrap)\n- [Foundation](https://github.com/zurb/foundation)\n- [Amaze UI](http://amazeui.org/)\n- [Semantic UI](https://github.com/semantic-org/semantic-ui)\n- [Pure CSS](http://purecss.io/)\n- [topcoat](https://github.com/topcoat/topcoat)\n- [UIkit](https://github.com/uikit/uikit)\n- [Material UI](https://github.com/callemall/material-ui)\n- [Materialize - 一个基于 Material Design 的 CSS 框架](https://github.com/Dogfalo/materialize)\n- [Framework7](http://www.idangero.us/framework7)\n- [mui](https://github.com/dcloudio/mui)\n- [ionic framework](http://ionicframework.com/)\n- [Fries](https://github.com/jaunesarmiento/fries)\n- [jQuery Mobile](http://jquerymobile.com/)\n- [App.js](https://github.com/kikinteractive/app)\n- [Office UI Fabric - 微软 Office 前端团队的框架](https://github.com/OfficeDev/Office-UI-Fabric)\n- [Polymer - Google发布的Web组件构建框架](https://www.polymer-project.org)\n- [Layui - 经典模块化前端UI框架](https://github.com/sentsin/layui/)\n\n## 2. JavaScript 框架汇总\n\n- JavaScript 框架\n  - [react](https://github.com/facebook/react)\n  - [Angular](https://github.com/angular/angular)\n  - [jQuery](https://github.com/jquery/jquery)\n  - [Backbone.js](https://github.com/jashkenas/backbone)\n  - [ember.js](https://github.com/emberjs/ember.js)\n  - [Ractive.js](https://github.com/ractivejs/ractive)\n  - [KISSY](https://github.com/kissyteam/kissy)\n  - [Zepto.js](https://github.com/madrobby/zepto)\n  - [Vanilla JS](http://vanilla-js.com/)\n  - [Vue.js - 数据驱动的组件化MVVM库(用于创建web交互界面和数据双向绑定)](https://github.com/yyx990803/vue)\n    - [awesome-vue](https://github.com/vuejs/awesome-vue)\n    - [Element - 基于 Vue 2.0 构建了一套完整的桌面 UI 组件库](http://element.eleme.io/#/)\n    - [Vuex - 一个专门为 Vue.js 应用设计的状态管理架构](https://github.com/vuejs/vuex)\n    - [Mint UI：基于 Vue.js 的移动端组件库](https://github.com/ElemeFE/mint-ui)\n    - [Vux - 基于 Vue 和 WeUI 的 UI 组件库](https://github.com/airyland/vux)\n    - [vonic - 基于 Vue.js 和 Ionic 的移动 UI 组件库](https://github.com/wangdahoo/vonic)\n    - [vuetify - vue2.0组件库](https://github.com/vuetifyjs/vuetify)\n    - [iView - 一套基于 Vue.js 的高质量 UI 组件库](https://github.com/iview/iview)\n    - [vue-i18n](https://github.com/kazupon/vue-i18n)\n  - [Can.js](http://canjs.com/guides/Utilities.html)\n  - [Avalon](https://github.com/RubyLouvre/avalon)\n  - [T3 JavaScript Framework - 一个用于搭建大型Web应用的客户端JS框架](https://github.com/box/t3js/)\n  - [jsblocks - Better MV-ish Framework 从简单 UI 到复杂单页应用都适用](https://github.com/astoilkov/jsblocks)\n- 轻量级JavaScript框架\n  - [Min.js - Super minimal selector and event library](https://github.com/remy/min.js) \n  - [skel.js - A lightweight responsive framework](https://github.com/n33/skel)\n  - [Sprint.js - 一个高性能、小体积的 DOM 操作库](https://github.com/bendc/sprint)\n  - [knockout](https://github.com/knockout/knockout)\n  - [PhantomJS - 一个基于 WebKit 的服务器端 JavaScript API](https://github.com/ariya/phantomjs/)\n- 函数式反应型编程框架 FRP (Functional Reactive Programming) library\n  - [Bacon.js - A small functional reactive programming lib for JavaScript.](https://github.com/baconjs/bacon.js/) \n  - [Flapjax - 一个支持FRP的JavaScript框架](http://www.flapjax-lang.org/)\n- JavaScript 工具库\n  - [underscore.js](https://github.com/jashkenas/underscore)\n  - [Underscore.string.js字符串操作库](https://github.com/epeli/underscore.string)\n  - [functional.js](https://github.com/leecrossley/functional-js/)\n  - [Lo-Dash - A JavaScript utility library](https://github.com/lodash/lodash)\n  - [Lazy.js - a functional utility library for JavaScript](https://github.com/dtao/lazy.js)\n  - [Fn.js](https://github.com/eliperelman/fn.js)\n  - [Way.js - 双向数据绑定库](https://github.com/gwendall/way.js)\n  - [boiler - a utility library that makes tasks in JavaScript easier](https://github.com/Xaxis/boiler)\n  - 快捷键操作\n    - [Keys.js - 应用快捷键](https://github.com/bitwalker/keys.js)\n    - [simple-hotkeys](https://github.com/mycolorway/simple-hotkeys)\n    - [jquery.hotkeys](https://github.com/jeresig/jquery.hotkeys)\n    - [Mousetrap - 键盘快捷键操作](https://github.com/ccampbell/mousetrap)\n  - [vConsole - 一个针对手机网页的前端 console 调试面板](https://github.com/WechatFE/vConsole)\n  - [AlloyLever - 移动web开发者工具面板](https://github.com/AlloyTeam/AlloyLever)\n\n## 3. 前端游戏框架\n\n- [cocos2d-html5](https://github.com/cocos2d/cocos2d-html5)\n- [Egret Engine](http://www.egret-labs.org/)\n- [LimeJS](https://github.com/digitalfruit/limejs)\n- [EaselJS](https://github.com/CreateJS/EaselJS)\n- [three.js](https://github.com/mrdoob/three.js)\n- [AlloyStick](https://github.com/AlloyTeam/AlloyStick)\n- [The-Best-JS-Game-Framework](https://github.com/finscn/The-Best-JS-Game-Framework)\n- [CanvasEngine](https://github.com/RSamaium/CanvasEngine)\n- [Quintus](https://github.com/cykod/Quintus)\n- [Stage.js](https://github.com/piqnt/stage.js/)\n- [phaser - 一个快速、免费、开源的 HTML5 游戏框架](https://github.com/photonstorm/phaser/)\n\n## 4. ui组件库(CSS Framework)\n\n- [WeUI - 微信官方UI库](https://github.com/weui/weui)\n  - [jQuery WeUI - WeUI的jQuery版本](https://github.com/lihongxun945/jquery-weui)\n- [GMU - 基于zepto的ui组件库，适用于移动端](https://github.com/fex-team/GMU)\n- [FrozenUI - 腾讯移动端组件库](https://github.com/frozenui/frozenui)\n- [NEC - 更好的CSS方案 ](http://nec.netease.com/)\n- [NEJ - 更好的JS解决方案](http://nej.netease.com/)\n- [Pure CSS Components](https://github.com/LFeh/css-components/)\n- [magic-of-css](https://github.com/adamschwartz/magic-of-css)\n- [Primer - The CSS toolkit and guidelines that power GitHub](https://github.com/primer/primer)\n- [light7 - A Light and easy to use UI Lib](https://github.com/lihongxun945/light7)\n- [Spectre.css - 轻量、响应式的现代 CSS 框架](https://github.com/picturepan2/spectre)\n- [mobi.css - 一个轻量、灵活的移动端 CSS 框架](https://github.com/xcatliu/mobi.css)\n\n## 5. 基础模版\n- 浏览器统一(Cross Browser)\n  - [HTML5 BOILERPLATE](https://github.com/h5bp/html5-boilerplate)\n  - [Modernizr](https://github.com/Modernizr/Modernizr)\n  - [Normalize.css](https://github.com/necolas/normalize.css/)\n  - [HTML5 Shiv - 让ie浏览器成为支持html5的浏览器的解决方法](https://github.com/afarkas/html5shiv)\n  - [cssFx - 为CSS3自动生成浏览器前缀](https://github.com/imsky/cssFx)\n  - [-prefix-free - Break free from CSS prefix hell](https://github.com/LeaVerou/prefixfree)\n  - [ieBetter.js - make ie browser like a morden browser main for ie6~ie8](https://github.com/zhangxinxu/ieBetter.js)\n  - [es6-promise - Promise 对象的兼容](https://github.com/stefanpenner/es6-promise)\n- 响应式\n  - [Responsive - 响应式布局](https://github.com/ResponsiveBP/Responsive)\n  - [Enquire.js - Awesome Media Queries in JavaScript](https://github.com/WickyNilliams/enquire.js)\n  - [Free Wall - 创建桌面，移动和平板的动态网格布局](https://github.com/kombai/freewall)\n- 适配方案\n  - [MetaHandler.js：移动端适配各种屏幕无痛工具脚本](https://github.com/unbug/generator-webappstarter/blob/master/app/templates/app/src/util/MetaHandler.js)\n  - [lib-flexible: 移动端自适应方案](https://github.com/amfe/lib-flexible)\n    - [参考: 使用Flexible实现手淘H5页面的终端适配](https://github.com/amfe/article/issues/17?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io)\n    - [flexible demo 1](http://ufologist.github.io/responsive-page/others-responsive/flexible.html)\n    - [flexible demo 2](http://huodong.m.taobao.com/act/yibo.html)\n  - [pageResponse](https://github.com/peunzhang/pageResponse)\n  - [responsive-page](https://github.com/ufologist/responsive-page)\n\n## 6. 排版\n\n- [yue.css](https://github.com/lepture/yue.css)\n- [typo.css](https://github.com/sofish/typo.css)\n- [chinese-copywriting-guidelines - 中文文案排版指南](https://github.com/sparanoid/chinese-copywriting-guidelines) \n\n## 7. 网格系统\n\n- [grid](https://github.com/aekaplan/grid)\n- [Flexbox Grid](https://github.com/kristoferjoseph/flexboxgrid)\n- [MasonJS - creating a perfect grid](https://github.com/DrewDahlman/Mason)\n\n\n## 8. 路由和链接(Routing And URLs)\n\n- [History.js - gracefully supports the HTML5 History/State APIs](https://github.com/browserstate/history.js)\n- [jquery-pjax - pushState+ajax](https://github.com/defunkt/jquery-pjax)\n- [jquery-address - Deep Linking](https://github.com/asual/jquery-address)\n- [page.js - Micro client-side router](https://github.com/visionmedia/page.js)\n- [crossroads.js](https://github.com/millermedeiros/crossroads.js)\n- [hash.js](https://github.com/javve/hash.js)  \n- [path.js](https://github.com/mtrpcic/pathjs)\n- [director.js - 前端路由库(通过#符号进行路径组织,结合vue的component可进行单页的局部模块刷新)](https://github.com/flatiron/director)\n- [URI.js](https://github.com/medialize/URI.js)\n- [Roadcrew.js](https://github.com/grobmeier/Roadcrew.js)\n- [SpeakingURL](https://github.com/pid/speakingurl)\n- [uparams - An URL params parser](https://github.com/YanagiEiichi/uparams)\n- [StateMan - 一个处理深层次单页系统的路由库](https://github.com/leeluolee/stateman)\n\n## 9. UA 识别\n\n- [detector](https://github.com/hotoo/detector)\n- [ua-parser-js](https://github.com/faisalman/ua-parser-js/)\n\n## 10. 表单处理\n\n### 10.1 表单验证(Form Validator)/表单提示\n\n- [Validator](https://github.com/niceue/validator)\n- [Parsley](https://github.com/guillaumepotier/Parsley.js)\n- [jquery.form.js - jQuery Form Plugin](https://github.com/malsup/form)\n- [Validform](https://github.com/haiercdboy/Validform)\n- [validator.js](https://github.com/sofish/validator.js)\n- [jquery-validation - jQuery Validation Plugin](https://github.com/jzaefferer/jquery-validation)\n- [formvalidator.js](https://github.com/victorjonsson/jQuery-Form-Validator)\n- [Fort.js – 表单填写进度提示](http://github.com/Colourity/Fort.js)\n- [mailcheck - 用于检测email地址的域名](https://github.com/mailcheck/mailcheck)\n- [Floatlable.js - 输入时显示placeholder文本](https://github.com/clubdesign/floatlabels.js)\n- [jQuery Label Better](https://github.com/peachananr/label_better)\n- [validator.js](https://github.com/ppoffice/validator.js)\n\n### 10.2 < input > 相关\n\n- [cleave.js - 格式化你的输入内容](https://github.com/nosir/cleave.js)\n\n### 10.3 < select > 相关\n\n- [Chosen](https://github.com/harvesthq/chosen)\n- [Select2](https://github.com/select2/select2)\n- [bootstrap-select](https://github.com/silviomoreto/bootstrap-select)\n\n### 10.4 单选框/复选框相关\n\n- [iCheck - 增强复选框和单选按钮](https://github.com/fronteed/iCheck)\n- [Switchery - iOS 7 style switches for your checkboxes](https://github.com/abpetkov/switchery)\n\n### 10.5 上传组件\n\n- [jQuery File Upload Plugin](https://github.com/blueimp/jQuery-File-Upload)\n- [百度 Web Uploader](http://fex-team.github.io/webuploader/)\n- [uploadify](http://www.uploadify.com/)\n- [Plupload](https://github.com/moxiecode/plupload)\n- [Fine Uploader](http://fineuploader.com/index.html)\n- [arale-upload - 轻量级 iframe and html5 file uploader](https://github.com/aralejs/upload)\n- [Dropzone.js - 文件上传库(可获取文件mime, 文件大小等; 针对图片可生成缩略图,获取图片宽度,高度)](https://github.com/enyo/dropzone)\n- [flow.js](https://github.com/flowjs/flow.js)\n- [localResizeIMG - 前端本地客户端压缩图片，兼容IOS，Android，PC](https://github.com/think2011/localResizeIMG)\n- [simple-uploader](https://github.com/mycolorway/simple-uploader)\n\n### 10.6 日期选择\n\n- [Both Date and Time picker widget based on twitter bootstrap](https://github.com/smalot/bootstrap-datetimepicker)\n- [GMU 日历组件](http://gmu.baidu.com/demo/widget/calendar/calendar.html)\n- [Mobiscroll](https://github.com/acidb/mobiscroll)\n- [Pikaday - 日期选择器](https://github.com/dbushell/Pikaday)\n- 价格日历\n  - [PriceCalendar - 酒店价格日历](https://github.com/fugm/PriceCalendar)\n    - [API文档](http://fgm.cc/learn/calendar/price-calendar/api.html)  \n    - [DEMO](http://fgm.cc/learn/calendar/price-calendar/)\n  - [price-calendar - 价格日历](https://github.com/wind-stone/price-calendar)\n  - [price_calendar - 含有商品价格的日历控件](https://github.com/zhangyi5628/price_calendar)\n\n### 10.7 取色\n\n- [Colorpicker plugin for Twitter Bootstrap](https://github.com/mjolnic/bootstrap-colorpicker)\n\n### 10.8 标签插件(Tag)\n\n- [TaggingJS – 可以灵活定制的 jQuery 标签系统插件](https://github.com/sniperwolf/taggingJS)\n- [selectize.js](https://github.com/brianreavis/selectize.js)\n- [Bootstrap Tags Input](https://github.com/timschlechter/bootstrap-tagsinput/)\n- [jQuery-Tags-Input](https://github.com/xoxco/jQuery-Tags-Input)\n\n### 10.9 自动完成插件\n\n- [At.js - 一个Twitter/微博样式的@自动完成插件](https://github.com/ichord/At.js)\n- [jquery-textcomplete - 智能搜索提示框/自动补全](https://github.com/yuku-t/jquery-textcomplete)\n- [typeahead.js - a fast and fully-featured autocomplete library](https://github.com/twitter/typeahead.js)\n\n### 10.10 样式修正\n\n- [autosize - 使文本框自动适应所输入的内容](https://github.com/jackmoore/autosize)\n\n## 11. 图表绘制/图形库(Graphics)\n\n- [Highcharts](https://github.com/highslide-software/highcharts.com)\n- [Chart.js - Simple HTML5 Charts using Canvas](https://github.com/nnnick/Chart.js)\n- [百度 ECharts](https://github.com/ecomfe/echarts)\n- [Chartist.js](https://github.com/gionkunz/chartist-js)\n- [D3.js - A JavaScript visualization library for HTML and SVG.](https://github.com/mbostock/d3)\n  - [intro-to-d3 - a D3.js tutorial](https://github.com/square/intro-to-d3) \n- [Bonsai - 一个功能强大的JavaScript图形库](https://github.com/uxebu/bonsai)\n- [epoch - 数据图表可视化](https://github.com/fastly/epoch/)\n- [Vis.js](https://github.com/almende/vis)\n- [Coutour.js](https://github.com/forio/contour)\n- [zrender - 一个轻量级的Canvas类库，MVC封装，数据驱动，提供类Dom事件模型，让canvas绘图大不同！](https://github.com/ecomfe/zrender)\n\n## 12. 日期格式化 & 时间轴\n\n- [Moment.js - 日期处理](http://momentjs.com/)\n- [Smart Time Ago - 显示相对时间](https://github.com/pragmaticly/smart-time-ago)\n- [timeline.js](https://github.com/vorg/timeline.js)\n- [timeago.js](https://github.com/hustcc/timeago.js)\n\n## 13. 页面交互\n\n### 13.1 Slider\n\n- [slick - the last carousel you'll ever need](https://github.com/kenwheeler/slick/)\n- [Swipe - the most accurate touch slider](https://github.com/thebird/Swipe)\n- [Swiper - Most modern mobile touch slider](https://github.com/nolimits4web/Swiper)\n- [iscroll - Smooth scrolling for the web](https://github.com/cubiq/iscroll)\n- [iSlider - 移动端滑动组件](https://github.com/BE-FE/iSlider)\n- [OwlCarousel - create beautiful responsive carousel slider](https://github.com/OwlFonk/OwlCarousel)\n- [jquery-mousewheel - jQuery鼠标滚轮滚动侦测插件](https://github.com/jquery/jquery-mousewheel/)\n- [Glide.js - 轻量级滑块组件](https://github.com/jedrzejchalubek/Glide.js)\n- [PhotoSwipe](https://github.com/dimsemenov/photoswipe)\n- [TouchSlide - 触屏滑动特效(焦点图,Tab切换)](http://www.superslide2.com/TouchSlide/)\n\n### 13.2 瀑布流\n\n- [Masonry](http://masonry.desandro.com/)\n- [Isotope - Filter & sort magical layouts](http://isotope.metafizzy.co/)\n- [Bricklayer](https://github.com/ademilter/bricklayer)\n\n### 13.3 懒加载/加载监听/预加载\n\n- [imagesLoaded](https://github.com/desandro/imagesloaded)\n- [Echo.js](https://github.com/toddmotto/echo)\n- [lazySizes](https://github.com/aFarkas/lazysizes)\n- [jquery_lazyload](https://github.com/tuupola/jquery_lazyload)\n- [BttrLazyLoading](https://github.com/shprink/bttrlazyloading/)\n- [lazyload.js](https://github.com/vvo/lazyload)\n- [layzr.js - 一个小巧快速的图片懒加载库](https://github.com/callmecavs/layzr.js)\n- [waitForImages - 图片加载监听库](https://github.com/alexanderdickson/waitForImages)\n- [PxLoader - JS预加载库:实现图片、声音等各种文件的预加载功能](https://github.com/thinkpixellab/PxLoader)\n- [bindWithDelay - jQuery Plugin For Delayed Event Execution](https://github.com/bgrins/bindWithDelay)\n- [TypeWatch - 停止输入时调用](https://github.com/dennyferra/TypeWatch)\n\n### 13.4 图片轮播(幻灯片)/图片展示 \n\n- [FlexSlider](https://github.com/woothemes/FlexSlider)\n- [unslider - 小而美的轮播库](https://github.com/idiot/unslider)\n- [prettyPhoto](https://github.com/scaron/prettyphoto)\n- [FlickerPlate - A cool jQuery plugin that lets you flick through content.](https://github.com/chrishumboldt/Flickerplate)\n- [Holder.js - Client-side image placeholders.](https://github.com/imsky/holder)\n- [RowGrid.js - 在径直的行里放置图片](https://github.com/brunjo/rowGrid.js)\n- [ImageLightbox.js - 灯箱效果](http://osvaldas.info/examples/image-lightbox-responsive-touch-friendly/)\n- [JQuery Panorama Viewer - 全景视图](https://github.com/peachananr/panorama_viewer)\n- [Intense Images - 全屏查看图片](https://github.com/tholman/intense-images)\n- [Picturefill - 一个响应式图片 JS 插件](http://scottjehl.github.io/picturefill/)\n- [zoom.js - 一个 jQuery 图片放大插件](https://github.com/fat/zoom.js)\n- [watermarkjs - 一个在浏览器中添加图片水印的 JS 库](https://github.com/brianium/watermarkjs)\n- [responsive-images.js](https://github.com/kvendrik/responsive-images.js)\n- [Turntable.js - 轻易实现图像的3D旋转](https://github.com/polarnotion/turntable)\n- [ResponsifyJS - 让图像完全响应式而不会牺牲图像的主要部分](https://github.com/wentin/ResponsifyJS)\n\n### 13.5 图片剪裁/图片处理\n\n- [Jcrop -  Image Cropping Plugin for jQuery](https://github.com/tapmodo/Jcrop)\n- [croppic - an image cropping jquery plugin](https://github.com/sconsult/croppic)\n- [smartcrop.js - 智能图片裁剪库](https://github.com/jwagner/smartcrop.js)\n- [jQuery.eraser - 图像擦除插件](https://github.com/boblemarin/jQuery.eraser)\n- [DD_belatedPNG.js - 让IE6支持透明PNG图片](http://www.dillerdesign.com/experiment/DD_belatedPNG/)\n- [FocusPoint.js 实现图片的响应式裁剪](https://github.com/jonom/jquery-focuspoint)\n- [imgareaselect](https://github.com/odyniec/imgareaselect)\n- [CSSgram - CSS 实现的 Instagram 滤镜库](https://github.com/una/CSSgram)\n- [antimoderate - 图片模糊库](https://github.com/whackashoe/antimoderate)\n\n### 13.6 进度条/加载动画(Loading)\n\n- [NProgress.js](http://ricostacruz.com/nprogress/)\n- [progress.js](https://github.com/usablica/progress.js)\n- [Pace - Automatic page load progress bar](https://github.com/HubSpot/pace)\n- [jquery-ajax-progress](https://github.com/englercj/jquery-ajax-progress)\n- [nanobar - Very lightweight progress bars.](https://github.com/jacoborus/nanobar)\n- [waitMe - 很漂亮的loading效果](https://github.com/vadimsva/waitMe)\n- [spin.js](https://github.com/fgnass/spin.js)\n- [sonic.js](https://github.com/padolsey/sonic.js)\n- [fakeLoader.js](https://github.com/joaopereirawd/fakeLoader.js)\n- [loaders.css - 一个为性能优化的实现加载动画效果的 CSS 框架](https://github.com/ConnorAtherton/loaders.css)\n- [css-loaders](https://github.com/lukehaas/css-loaders)\n- [Sausage - 跟踪滚动条并记录当前阅读所处节点](https://github.com/christophercliff/sausage)\n\n### 13.7 侧滑插件(offcancas)\n\n- [pushy -  a responsive off-canvas navigation menu ](https://github.com/christophery/pushy)\n- [Slideout.js - 一个用于移动 Web 应用的触摸滑出式导航菜单](https://github.com/mango/slideout)\n\n### 13.8 菜单(Menu)\n\n- [SuperFish - 基于jQuery的级联下拉菜单](https://github.com/joeldbirch/superfish)\n- [Responsive Nav - 响应式导航](https://github.com/viljamis/responsive-nav.js)\n- [metisMenu - A jQuery menu plugin](https://github.com/onokumus/metisMenu)\n\n### 13.9 滚动侦测(ScrollSpy)\n\n- [jquery-scrollspy(1)](https://github.com/sxalexander/jquery-scrollspy)\n- [jquery-scrollspy(2)](https://github.com/thesmart/jquery-scrollspy)\n- [Waypoints](https://github.com/imakewebthings/waypoints)\n- [ScrollMagic - 像进度条一样使用滚动条](https://github.com/janpaepke/ScrollMagic)\n\n### 13.10 滚动加载更多/下拉刷新(Pull to Refresh)\n\n- [jScroll](https://github.com/pklauzinski/jscroll)\n- [web-pull-to-refresh](https://github.com/apeatling/web-pull-to-refresh)\n- [pulltorefresh](https://github.com/dwcares/pulltorefresh)\n- [RubberBand.js - add pull-to-refresh functionality to any page.](https://github.com/ThrivingKings/RubberBand.js)\n\n### 13.11 平滑滚动插件(Smooth Scroll)\n\n- [jquery-smooth-scroll](https://github.com/kswedberg/jquery-smooth-scroll)\n- [jquery.scrollTo - 平滑滚动到页面指定位置](https://github.com/flesler/jquery.scrollTo)\n- [smooth-scroll](https://github.com/cferdinandi/smooth-scroll)\n- [scrollUp](https://github.com/markgoodyear/scrollup)\n- [elevator.js - 一个模拟电梯运行“返回顶部”的 JS 插件](https://github.com/tholman/elevator.js)\n\n### 13.12 全屏滚动/全屏切换\n\n- [pagePiling.js - 全屏滚动效果](https://github.com/alvarotrigo/pagePiling.js)\n- [fullPage.js](https://github.com/alvarotrigo/fullPage.js/)\n- [onepage-scroll](https://github.com/peachananr/onepage-scroll)\n- [zepto.fullpage - 专注于移动端的fullPage.js](https://github.com/yanhaijing/zepto.fullpage)\n- [screenfull.js - 切换全屏模式](https://github.com/sindresorhus/screenfull.js)\n\n### 13.13 分屏滚动\n\n- [multiscroll.js - 分屏滚动效果](https://github.com/alvarotrigo/multiscroll.js)\n\n### 13.14 转场效果\n\n- [Animsition - 页面切换时的过渡效果](https://github.com/blivesta/animsition)\n\n### 13.15 固定元素(Sticky)\n\n- [sticky - jQuery Plugin for Sticky Objects](https://github.com/garand/sticky)\n- [jquery.pin - 固定页面元素](https://github.com/webpop/jquery.pin)\n- [stickUp](https://github.com/LiranCohen/stickUp)\n- [Slinky.js - 堆叠头部创建滑动导航列表](https://github.com/iclanzan/slinky)\n\n### 13.16 触控事件\n\n- [Hammer.js](https://github.com/hammerjs/hammer.js)\n- [jquery.event.move.js](https://github.com/stephband/jquery.event.move)\n\n### 13.17 拖拽组件\n\n- [Draggabilly - 专注于拖拽功能的 JS 库](https://github.com/desandro/draggabilly)\n- [dragula - 一个让拖放操作变简单的 JS 库](https://github.com/bevacqua/dragula)\n- [GridList - 可拖拉的响应式列表库](https://github.com/uberVU/grid)\n\n### 13.18 隐藏或展示页面元素\n\n- [Headroom.js - 在不需要页头时将其隐藏](http://www.bootcss.com/p/headroom.js/)\n- [Readmore.js - 内容显示与隐藏插件](https://github.com/jedfoster/Readmore.js)\n- [oriDomi - 像指一样折叠Dom元素](https://github.com/dmotz/oriDomi)\n\n### 13.19 滚动条(Scrollbar)\n\n- [jScrollPane](https://github.com/vitch/jScrollPane)\n- [jquery.scrollbar](https://github.com/gromo/jquery.scrollbar)\n- [perfect-scrollbar](https://github.com/noraesae/perfect-scrollbar)\n- [nanoScrollerJS](https://github.com/jamesflorentino/nanoScrollerJS)\n- [tinyscrollbar](https://github.com/wieringen/tinyscrollbar)\n\n### 13.20 视差滚动(Parallax Scrolling)\n\n- [parallax.js](https://github.com/wagerfield/parallax)\n- [jparallax](https://github.com/stephband/jparallax)\n- [skrollr](https://github.com/Prinzhorn/skrollr)\n\n## 13.21 缩放 (Zooming)\n\n- [zoom.js - 一款效果很独特的页面内容缩放插件](https://github.com/hakimel/zoom.js)\n- [zoom.js - 一个 jQuery 图片放大插件](https://github.com/fat/zoom.js)\n- [jQuery Zoom - mouseover时图片缩放效果](https://github.com/jackmoore/zoom)\n\n## 14. 代码高亮插件/代码编辑器\n\n- [google-code-prettify](https://code.google.com/p/google-code-prettify/)\n- [highlight.js](https://highlightjs.org/)\n- [Rainbow](http://craig.is/making/rainbows)\n- [ACE](https://github.com/ajaxorg/ace)\n- [CodeMirror](https://github.com/codemirror/codemirror)\n- [Crayon Syntax Highlighter](https://github.com/aramk/crayon-syntax-highlighter)\n- [prism - Lightweight, robust, elegant syntax highlighting.](https://github.com/PrismJS/prism)\n\n## 15. UI Icon 组件\n\n- [Font Awesome](http://fontawesome.io/icons/)\n- [Glyphter: The SVG Font Machine](http://glyphter.com/)\n- [Perfect Icons](http://perfecticons.com/)\n- [iconizr](http://iconizr.com/)\n- [Cikonss - 纯CSS实现的响应式Icon](http://www.bootcss.com/p/cikonss/)\n- [Simple Icons](https://github.com/danleech/simple-icons)\n\n## 16. 动画(Animate)\n\n- [animate.css - A cross-browser library of CSS animations.](https://github.com/daneden/animate.css)\n- [Transit - CSS transitions and transformations for jQuery](https://github.com/rstacruz/jquery.transit)\n- [anime.js - Javascript 动画引擎](https://github.com/juliangarnier/anime)\n- [WOW - 在滚动过程中展示CSS动画效果(默认触发animate.css动画)](https://github.com/matthieua/WOW)\n- [AniJS - A Library to Raise your Web Design without Coding](https://github.com/anijs/anijs/)\n- [Move.js - 简化CSS3动画的JS库](https://github.com/visionmedia/move.js)\n- [ScrollMe – 在网页中加入各种滚动动画效果](https://github.com/nckprsn/scrollme)\n- [Effeckt.css - A Performant Transitions and Animations Library](https://github.com/h5bp/Effeckt.css)\n- [NEC动画库](http://nec.netease.com/library/category/#animation)\n- [csshake - CSS classes to move your DOM](https://github.com/elrumordelaluz/csshake)\n- [magic - CSS3 Animations with special effects](https://github.com/miniMAC/magic)\n- [SpinKit](https://github.com/tobiasahlin/SpinKit)\n- [Velocity.js - 加速JavaScript动画](https://github.com/julianshapiro/velocity)\n- [lenticular.js - 响应倾斜或鼠标事件创建图片动画](https://github.com/thomasxiii/lenticular.js)\n- [jQuery Interactive 3D - Create a 3D interactive object using images](https://github.com/peachananr/interactive_3d)\n- [AnimateScroll - A Simple jQuery Plugin for Animating Scroll](https://github.com/ramswaroop/animatescroll.js)\n- [Blast.js - 把动画和样式注入到文本中](https://github.com/julianshapiro/blast)\n- [Bounce.js - 一个用于制作漂亮 CSS3 关键帧动画的 JS 库](https://github.com/tictail/bounce.js)\n- [Sticker.js - create a Sticker Effect](https://github.com/cmiscm/stickerjs)\n- [scrollReveal.js - 元素进入可视区域自动触发设置好的动画](https://github.com/julianlloyd/scrollReveal.js)\n- [stroll.js - CSS3 list scroll effects](https://github.com/hakimel/stroll.js)\n- [jQuery Easing -  动画效果扩展](https://github.com/gdsmith/jquery.easing)\n- [animations - CSS3 ANIMATION CHEAT SHEET](http://www.justinaguilar.com/animations/index.html)\n- [iconate.js：将 icons 增加动画效果的 JS 库](https://github.com/bitshadow/iconate)\n- [Odometer - 数字之间的垂直切换](https://github.com/HubSpot/odometer)\n- Hover - 悬停效果\n  - [Hover.css - 很多鼠标Hover态的效果](https://github.com/IanLunn/Hover)\n  - [imagehover.css - 为图片添加悬停效果](https://github.com/ciar4n/imagehover.css)\n  - [iHover - 图片悬停效果](https://github.com/gudh/ihover)\n  - [ImageCaptionHoverAnimation](https://github.com/hasinhayder/ImageCaptionHoverAnimation)\n  - [Bootstrap Hover Image Gallery](http://miketricking.github.io/dist/)\n- Multi-touch gestures library - Web手势库\n  - [AlloyFinger - 腾讯 AlloyTeam 出品的超级小的 Web 手势库](https://github.com/AlloyTeam/AlloyFinger)\n\n## 17. 本地存储\n\n- [cross-storage - Cross domain local storage](https://github.com/zendesk/cross-storage)\n- [localForage](https://github.com/mozilla/localForage)\n- [pouchdb](https://github.com/pouchdb/pouchdb)\n- [basil.js](https://github.com/Wisembly/basil.js)\n- [Neurosync - JavaScript 本地离线 ORM 库](https://github.com/ClickerMonkey/neurosync)\n- [LokiJS - 性能优先的 JavaScript 内存数据库](https://github.com/techfort/LokiJS)\n- [turbolinks - Javascript pushState](https://github.com/turbolinks/turbolinks)\n\n## 18. 模板引擎\n\n- [doT.js](https://github.com/olado/doT)\n- [mustache.js](https://github.com/janl/mustache.js)\n- [Handlebars.js](http://www.jingwentian.com/t-66)\n- [artTemplate](https://github.com/aui/artTemplate)\n- [baiduTemplate](https://github.com/wangxiao/BaiduTemplate)\n- [JSRender](https://github.com/BorisMoore/jsrender)\n- [EJS - JavaScript Templates](https://github.com/tj/ejs)\n- [Juicer - A Light Javascript Templete Engine.](https://github.com/PaulGuo/Juicer)\n- [Tempo](https://github.com/twigkit/tempo)\n- [json2html](https://github.com/moappi/json2html)\n- [Hogan.js - JavaScript templating from Twitter.](https://github.com/twitter/hogan.js)\n- [Dust.js - Linkedin维护的项目](https://github.com/linkedin/dustjs)\n\n## 19. 通知组件/弹框组件/模态窗口\n\n- [Notify.js(Web Notifications API)](https://github.com/alexgibson/notify.js)\n- [alertify.js](https://github.com/fabien-d/alertify.js)\n- [AlertifyJS](https://github.com/MohammadYounes/AlertifyJS)\n- [SweetAlert](https://github.com/t4t5/sweetalert)\n- [Messenger - 非常酷的弹框组件](https://github.com/HubSpot/messenger)\n- [PNotify](https://github.com/sciactive/pnotify)\n- [Notify.js - A simple, versatile notification library](https://github.com/jpillora/notifyjs)\n- [Remodal - 模态窗口插件](https://github.com/VodkaBears/Remodal)\n- [action.js - 极简的tip和Modal弹窗效果](https://github.com/egoist/action.js)\n- [Modaal - 一个创建弹出窗口的jQuery插件](https://github.com/humaan/Modaal)\n- [Vex - 可以实现3D动效的弹出对话框堆叠效果](https://github.com/hubspot/vex)\n\n## 20. 提示控件(Tooltips)\n\n- [hint.css - 一款非常小巧的提示框效果](https://github.com/chinchang/hint.css)\n- [qTip2 - Pretty powerful tooltips](https://github.com/qTip2/qTip2)\n- [tooltip - CSS Tooltips](https://github.com/HubSpot/tooltip)\n- [tooltipster - A jQuery tooltip plugin](https://github.com/iamceege/tooltipster)\n- [grumble.js - 气泡形状的提示（Tooltip）控件](https://github.com/jamescryer/grumble.js)\n- [Ouibounce - 离站提示控件](https://github.com/carlsednaoui/ouibounce)\n- [intro.js - 一个创建引导式网站介绍功能的 JS 库](https://github.com/usablica/intro.js)\n- [data-tip.css - 纯 CSS 实现的工具提示](https://github.com/egoist/data-tip.css)\n\n## 21. 对话框/遮罩层/弹出层(lightbox)\n\n- [fancyBox - Fancy jQuery lightbox](https://github.com/fancyapps/fancyBox)\n- [jquery-lightbox - The popular lightbox script, ported to jQuery](https://github.com/krewenki/jquery-lightbox)\n- [Colorbox - a jQuery lightbox](https://github.com/jackmoore/colorbox)\n- [artDialog - 经典的网页对话框组件](https://github.com/aui/artDialog)\n- [DialogEffects](https://github.com/codrops/DialogEffects)\n- [jQuery blockUI - Page or element overlay](https://github.com/malsup/blockui/)\n- [layer - web弹出窗/层](https://github.com/sentsin/layer/)\n\n## 22. 文档/表格/PDF\n\n- [Backgrid.js - 强大的表格组件](https://github.com/wyuenho/backgrid)\n- [handsontable - 在线可编辑excel表格](https://github.com/handsontable/handsontable)\n- [jQuery Bootgrid - 用于ajax生成动态表格](https://github.com/rstaib/jquery-bootgrid)\n- [DataTables - Table plug-in for jQuery](https://github.com/DataTables/DataTables)\n- [PDF.js - 一个 JavaScript 编写的 PDF 阅读器](https://github.com/mozilla/pdf.js)\n- [jsPDF - Generate PDF files in JavaScript](https://github.com/MrRio/jsPDF)\n- [Recline.js - 灵活操作和展示数据](https://github.com/okfn/recline/)\n- [Dynatable - 交互式表格插件](https://github.com/alfajango/jquery-dynatable)\n- [fattable - 创建无限滚动无限行列数的表格](https://github.com/fulmicoton/fattable)\n- [Clusterize.js - 一个轻松显示大数据集的 JS 插件](https://github.com/NeXTs/Clusterize.js)\n- [Uniform -表单美化插件](https://github.com/AudithSoftworks/Uniform)\n\n## 23. 目录树插件\n\n- [zTree_v3 - jQuery Tree Plugin](https://github.com/zTree/zTree_v3)\n- [jstree - jQuery Tree Plugin](https://github.com/vakata/jstree)\n- [fancytree - Tree plugin for jQuery](https://github.com/mar10/fancytree)\n\n## 24. 前后端交互\n\n### 24.1 Ajax模块\n\n- [fetch - A window.fetch JavaScript polyfill](https://github.com/github/fetch)\n- [reqwest - browser asynchronous http requests](https://github.com/ded/reqwest)\n- [ajax - Standalone AJAX library](https://github.com/ForbesLindesay/ajax)\n- [then-request](https://github.com/then/then-request)\n- [browser-request](https://github.com/iriscouch/browser-request)\n- [superagent](https://github.com/visionmedia/superagent)\n- [minAjax.js](https://github.com/argunner/minAjax.js/)\n- [qwest - 第三方的Ajax库](https://github.com/pyrsmk/qwest)\n- [axios - Promise based HTTP client for the browser and node.js](https://github.com/mzabriskie/axios)\n- [whatwg-fetch](https://github.com/fis-components/whatwg-fetch)\n\n### 24.2 SSE (Server-Sent Events)\n> SSE API用于创建到服务器的单向连接，服务器通过这个连接可以发送任意数量的数据.\n\n- [EventSource](https://github.com/Yaffle/EventSource)\n\n### 24.3 Web Sockets\n\n\n## 25. 音频/视频\n\n- [jPlayer -  HTML5 Audio & Video for jQuery](https://github.com/happyworm/jPlayer)\n- [video.js - HTML5 & Flash video player](https://github.com/videojs/video.js)\n- [Accessible HTML5 Video Player - PayPal 开源的 HTML5 视频播放器](https://github.com/paypal/accessible-html5-video-player)\n- [Clappr - 开源的Web视频播放器](https://github.com/clappr/clappr)\n- [Plyr - A simple HTML5 media player](https://github.com/selz/plyr)\n- [FitVids.js - A lightweight, easy-to-use jQuery plugin for fluid width video embeds.](https://github.com/davatron5000/FitVids.js)\n- [BigVideo.js - The jQuery Plugin for Big Background Video](https://github.com/dfcb/BigVideo.js)\n- [BigScreen - A simple library for using the JavaScript Full Screen API](https://github.com/bdougherty/BigScreen)\n- [Vide - 视频背景](https://github.com/VodkaBears/Vide)\n- [winamp2-js](https://github.com/captbaritone/winamp2-js)\n- [Buzz - A Javascript HTML5 Audio library](https://github.com/jaysalvat/buzz)\n- [MediaElement.js](http://github.com/johndyer/mediaelement/)\n\n## 26. 按钮\n\n- [Buttons - A CSS button library](https://github.com/alexwolfe/Buttons)\n- [ButtonComponentMorph](https://github.com/codrops/ButtonComponentMorph)\n- [ProgressButtonStyles](https://github.com/codrops/ProgressButtonStyles)\n- [CreativeButtons](https://github.com/codrops/CreativeButtons)\n- [CSS3 buttons](https://github.com/ubuwaits/css3-buttons)\n- [jquery.onoff - Interactive, accessible toggle switches for the web.](https://github.com/timmywil/jquery.onoff)\n- [Flipside - 一个能过渡到对话框的按钮](https://github.com/hakimel/css/tree/master/flipside)\n\n## 27. 富文本编辑器/Markdown编辑器/Markdown解析器\n\n- [Simditor - 简单快速的富文本编辑器](https://github.com/mycolorway/simditor)\n- [BachEditor - 一个有情怀的编辑器](https://github.com/Integ/BachEditor)\n- [TinyMCE](https://github.com/tinymce/tinymce)\n- [bootstrap-markdown](https://github.com/toopay/bootstrap-markdown)\n- [marked - markdown解析器](https://github.com/chjj/marked)\n- [Markdown Plus](https://github.com/tylingsoft/markdown-plus)\n- [Editor.md - 开源在线Markdown编辑器](https://github.com/pandao/editor.md)\n- [stackedit](https://github.com/benweet/stackedit)\n- [Redactor Text Editor](http://imperavi.com/redactor/)\n- [micromarkdown.js - 轻量级的md解析器](https://github.com/simonwaldherr/micromarkdown.js/)\n- [wangEditor - 支持移动端的轻量级web富文本框](https://github.com/wangfupeng1988/wangEditor)\n- [CKEditor - 可视化 HTML 编辑器](https://github.com/ckeditor/ckeditor-dev)\n- [Quill - 富文本编辑器](https://github.com/quilljs/quill)\n\n## 28. 内容提取(Readability)\n\n- [Readability](https://code.google.com/p/arc90labs-readability/)\n- [json.human.js - Json Formatting for Human Beings](https://github.com/marianoguerra/json.human.js)\n\n## 29. 颜色(CSS Colors)/SVG/Canvas\n\n- [CSS Colours](http://colours.neilorangepeel.com/)\n- [SVGeneration](http://www.svgeneration.com/)\n- [SVGMagic - 自动的创建PNG来兼容不支持SVG的浏览器](https://github.com/dirkgroenen/SVGMagic)\n- [Adaptive Backgrounds - 从图片抽取主要颜色和应用到父元素](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js)\n- [Seen.js - 渲染3D场景为SVG或者HTML Canvas](https://github.com/themadcreator/seen)\n- [jquery-color - 可以动态改动颜色](https://github.com/jquery/jquery-color/)\n\n## 30. 选项卡(Tabs)\n\n- [Easy Responsive Tabs to Accordion](https://github.com/samsono/Easy-Responsive-Tabs-to-Accordion)\n- [Responsive-Tabs](https://github.com/jellekralt/Responsive-Tabs)\n- [ion.tabs - jQuery tabs plugin](https://github.com/IonDen/ion.tabs)\n- [jQuery-EasyTabs](https://github.com/JangoSteve/jQuery-EasyTabs)\n- [tabulous.js](https://github.com/aarondo/tabulous.js)\n\n## 31. 文本处理\n\n- [ZeroClipboard - 文本复制插件](https://github.com/zeroclipboard/zeroclipboard)\n- [clipboard.js](https://github.com/zenorocha/clipboard.js/)\n- [Bigfoot - 点击文章中的脚注弹窗显示](https://github.com/lemonmade/bigfoot)\n- [Annotator - 文本注解插件，可以包括注释、标签、用户等](https://github.com/openannotation/annotator)\n- [Succinct - 用作截断多行文本,后面添加省略号](https://github.com/micjamking/Succinct)\n- [Flowtype.js - 自动调整字体大小和行号](https://github.com/simplefocus/FlowType.JS)\n- [flat-shadow](https://github.com/peachananr/flat-shadow)\n- [FitText - A jQuery plugin for inflating web type](https://github.com/davatron5000/FitText.js)\n- [shine.js - 实现漂亮阴影](https://github.com/bigspaceship/shine.js)\n- [Type Rendering Mix - 文本渲染引擎](https://github.com/bramstein/trmix/)\n- [jquery-expander - 阅读更多](https://github.com/kswedberg/jquery-expander)\n- [Typed.js - 输入模拟插件](https://github.com/mattboldt/typed.js/)\n- [jQuery.dotdotdot - 多行文本溢出显示省略号](https://github.com/FrDH/jQuery.dotdotdot)\n- [baffle.js - 文本互动效果](https://github.com/camwiegert/baffle)\n\n## 32. 布局(Layout)\n\n- 分隔面板(Split Panel)\n  - [split-pane](https://github.com/shagstrom/split-pane)\n  - [jQuery UI Layout](http://layout.jquery-dev.com/)\n\n## 33. 演示/幻灯片\n\n- [reveal.js - The HTML Presentation Framework](https://github.com/hakimel/reveal.js)\n- [bespoke.js - DIY Presentation Micro-Framework](https://github.com/markdalgleish/bespoke.js)\n- [impress.js](https://github.com/bartaz/impress.js)\n- [shower](https://github.com/shower/shower)\n- [deck.js](https://github.com/imakewebthings/deck.js)\n\n## 34. 国际化(i18n)\n\n- [jquery-i18n](https://github.com/recurser/jquery-i18n)\n- [i18next.js](https://github.com/i18next/i18next)\n- [jsperanto.js](https://github.com/jpjoyal/jsperanto)\n- [jed.js](https://github.com/SlexAxton/Jed)\n- [messageformat.js](https://github.com/SlexAxton/messageformat.js)\n- [Polyglot.js](https://github.com/airbnb/polyglot.js)\n\n## 35. 邮件模板(Email Templates)\n\n- [responsive-html-email-template](https://github.com/leemunroe/responsive-html-email-template)\n\n## 36. 移动端优化(Optimizing Mobile Performance)\n\n- [FastClick - 处理移动端 click 事件 300 毫秒延迟](https://github.com/ftlabs/fastclick)\n- [tappy](https://github.com/filamentgroup/tappy/)\n- [jquery-fast-click](https://github.com/dave1010/jquery-fast-click)\n\n## 37. HTTP请求相关\n\n- [pako - HTTP 请求正文压缩](https://github.com/nodeca/pako)\n  - [参考阅读: 如何压缩 HTTP 请求正文](https://imququ.com/post/how-to-compress-http-request-body.html)\n  - [HTTP 请求正文压缩 DEMO](https://qgy18.com/request-compress/)\n- [RSA in JavaScript - 用RSA加密实现Web数据加密传输](http://www.ohdave.com/rsa/)\n\n## 38. 下载组件\n\n- [download](https://github.com/rndme/download)\n- [Downloadify](https://github.com/dcneiner/Downloadify)\n\n## 39. 实用工具/其他插件\n\n- [jquery-cookie](https://github.com/carhartl/jquery-cookie)\n- [JavaScript Cookie](https://github.com/js-cookie/js-cookie)\n- [InstantClick - 预加载用户可能会点击的一些链接](https://github.com/dieulot/instantclick/)\n- [Async.js - 异步操作](https://github.com/caolan/async)\n- [html2canvas - 实现纯JS网页截图](https://github.com/niklasvh/html2canvas)\n- [jquery.qrcode.js - 生成二维码的 jQuery 插件](https://github.com/jeromeetienne/jquery-qrcode)\n- [qrcodejs - JS生成QRCode的库](https://github.com/davidshimjs/qrcodejs)\n- [nakedpassword - 用脱衣女帮助检测密码强度](https://github.com/platform45/nakedpassword)\n- [KityMinder - 脑图编辑工具](https://github.com/fex-team/kityminder)\n- [MixitUp - 动画过滤和排序](https://github.com/patrickkunka/mixitup)\n- [JQuery Tip Cards - 创建卡片交互的cards布局](https://github.com/peachananr/tip_cards)\n- [Fallback.js - JavaScript library for dynamically loading CSS and JS files.](https://github.com/dolox/fallback/)\n- [swfobject](https://github.com/swfobject/swfobject)\n- [prettyprint.js - An in-browser JavaScript variable dumper](https://github.com/padolsey-archive/prettyprint.js)\n- [Shepherd - 为应用创建用户指南](https://github.com/HubSpot/shepherd)\n- [RulersGuide.js - 类似PhotoShop标尺的js库](https://github.com/mark-rolich/RulersGuides.js)\n- [Gremlins.js - Monkey 测试库](https://github.com/marmelab/gremlins.js)\n- [RoughDraft.js - 简单快速的创建交互式的 HTML 模型的原型工具](https://github.com/ndreckshage/roughdraft.js/)\n- [favico.js - 动态改变浏览器标签栏中的网站图标](https://github.com/ejci/favico.js)\n- [pageguide - 网页向导](https://github.com/tracelytics/pageguide)\n- [jsdiff - js diff 算法](https://github.com/kpdecker/jsdiff)\n\n# ES6( ECMAScript 2015 )\n\n## ES6转码器(ES6 to ES5)\n\n- [Babel](https://github.com/babel/babel/) - 一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行\n- [babelify](https://github.com/babel/babelify) - 将babel引入到Gulp, Grunt, npm run等构建过程\n- [traceur-compiler](https://github.com/google/traceur-compiler) - Traceur is a JavaScript.next-to-JavaScript-of-today compiler\n\n## ES6入门\n\n- [ECMAScript 6入门](http://es6.ruanyifeng.com/) - 阮一峰老师的开源的JavaScript语言教程\n- [Learn ES2015](https://babeljs.io/docs/learn-es2015/)\n- [ES6 - New features Overview & Comparison](http://es6-features.org/)\n- [ES6 Overview in 350 Bullet Points](https://ponyfoo.com/articles/es6)\n- [es6features](https://github.com/lukehoban/es6features)\n\n\n# 设计模式( JavaScript Patterns )\n\n- [javascript-patterns](https://github.com/shichuan/javascript-patterns)\n- [jquery-patterns - A variety of jQuery plugin patterns](https://github.com/jquery-boilerplate/jquery-patterns)\n- [Learning JavaScript Design Patterns](http://addyosmani.com/resources/essentialjsdesignpatterns/book/)\n\n# 在线工具( Online Tools )\n\n- [jsbin - Collaborative JavaScript Debugging App](http://jsbin.com)\n  - [jsbin@Github](https://github.com/jsbin/jsbin)\n- [jsfiddle](http://jsfiddle.net/)\n- [jsbeautifier - Online JavaScript beautifier](http://jsbeautifier.org/)\n- [resume.github.com](http://resume.github.io)\n\n# 前端开发工具\n\n## 1. 开发工具\n\n- [Sublime Text](http://www.sublimetext.com/)\n\n## 2. 调试工具\n\n- [Fiddler](http://www.telerik.com/fiddler)\n- [Weinre](http://people.apache.org/~pmuellr/weinre-docs/latest/Home.html)\n- [Rythem](http://www.alloyteam.com/2012/05/web-front-end-tool-rythem-1/)\n- [csscss - 用于检查css代码冗余](https://github.com/zmoazeni/csscss)\n- [FECS - 基于 Node.js 的前端代码检查工具](http://fecs.baidu.com/)\n- [JSON Server - 模拟 API](https://github.com/typicode/json-server)\n- [swagger-ui - 基于REST的API测试/文档](https://github.com/swagger-api/swagger-ui)\n\n## 3. 模拟数据( Fake )\n\n- [JSONPlaceholder](http://jsonplaceholder.typicode.com/)\n- [json-server - Get a full fake REST API](https://github.com/typicode/json-server)\n- [lowdb -  A small local JSON database powered by lodash](https://github.com/typicode/lowdb)\n\n## 4. 浏览器扩展(Chrome Extensions)\n\n- [Postman - REST Client](https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm)\n- [Fiddler - Fiddler for Chrome Extension](http://welefen.github.io/Fiddler/)\n- [WEB前端助手(FeHelper)](https://chrome.google.com/webstore/detail/web%E5%89%8D%E7%AB%AF%E5%8A%A9%E6%89%8Bfehelper/pkgccpejnmalmdinmhkkfafefagiiiad)\n- [Web Developer](https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm)\n- [Chrome Logger](https://chrome.google.com/webstore/detail/chrome-logger/noaneddfkdjfnfdakjjmocngnfkfehhd)\n- [ColorZilla](https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp)\n- [ColorPick Eyedropper](https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg?hl=en)\n- [Code Cola](https://chrome.google.com/webstore/detail/code-cola/lomkpheldlbkkfiifcbfifipaofnmnkn)\n- [1px](https://chrome.google.com/webstore/detail/1px/gebccnmciopflhcdihopmphapifkkfdh)\n- [AlloyDesigner - 前端重构开发辅助工具](https://chrome.google.com/webstore/detail/alloydesigner/ojooeaohlmgpcjajikhmibcnbebfenid)\n- [Fontface Ninja](https://chrome.google.com/webstore/detail/fontface-ninja/eljapbgkmlngdpckoiiibecpemleclhh)\n- [PageSpeed Insights (by Google)](https://chrome.google.com/webstore/detail/pagespeed-insights-by-goo/gplegfbjlmmehdoakndmohflojccocli)\n- [HTTP Status](https://chrome.google.com/webstore/detail/http-status/cknfnacbckhfpjahnmkblajcpledpfnp/related)\n- [Redirect Path](https://chrome.google.com/webstore/detail/redirect-path/aomidfkchockcldhbkggjokdkkebmdll/related)\n- [Responsive Web Design Tester](https://chrome.google.com/webstore/detail/responsive-web-design-tes/objclahbaimlfnbjdeobicmmlnbhamkg?hl=en)\n- [Window Resizer](https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh?hl=en)\n- [CSSViewer](https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce?hl=en)\n- [IE Tab](https://chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd?hl=en)\n- [Clear Cache](https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?hl=en)\n- [JSONView](https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn/related?hl=en)\n- [Image Downloader](https://chrome.google.com/webstore/detail/image-downloader/cnpniohnfphhjihaiiggeabnkjhpaldj)\n- [Pretty Beautiful Javascript - 可以自动格式化混淆的js文件](https://chrome.google.com/webstore/detail/pretty-beautiful-javascri/piekbefgpgdecckjcpffhnacjflfoddg/related?utm_source=chrome-ntp-icon)\n- [JavaScript Errors Notifier](https://chrome.google.com/webstore/detail/javascript-errors-notifie/jafmfknfnkoekkdocjiaipcnmkklaajd?utm_source=chrome-ntp-icon)\n- [CSS Diff - 在线比对页面上两个元素的CSS样式差异](https://chrome.google.com/webstore/detail/css-diff/pefnhibkhcfooofgmgoipfpcojnhhljm/related)\n- [WhatFont- 识别网页所使用的字体](https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm)\n\n# 前端参考集\n\n- [frontend-guidelines - Some HTML, CSS and JS best practices.](https://github.com/bendc/frontend-guidelines)\n- [frontend-dev-bookmarks](https://github.com/dypsilon/frontend-dev-bookmarks)\n- [Codrops - Useful resources](https://github.com/codrops)\n- [Front-end Code Standards & Best Practices](http://isobar-idev.github.io/code-standards/)\n- [frontend-dev-bookmarks](https://github.com/dypsilon/frontend-dev-bookmarks)\n- [awesome-javascript](https://github.com/wwsun/awesome-javascript)\n- [Front-end-tutorial - 前端涉及的所有知识体系](https://github.com/nicejade/Front-end-tutorial)\n- [awesome-vue](https://github.com/vuejs/awesome-vue)\n- 前端编码规范( Standard Style ) \n  - [Airbnb 的 JavaScript 编码规范](https://github.com/airbnb/javascript)\n  - [JavaScript Standard Style](https://github.com/feross/standard)\n\n***\nfrom [github.com/JingwenTian](https://github.com/JingwenTian)","slug":"前端组件集 - 转载","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7ww0039r2uf8hqo08dm","content":"<blockquote>\n<p>搭建web app常用的样式&#x2F;组件等收集列表(移动优先)</p>\n</blockquote>\n<span id=\"more\"></span>\n<h2 id=\"0-前端自动化-Workflow\"><a href=\"#0-前端自动化-Workflow\" class=\"headerlink\" title=\"0. 前端自动化(Workflow)\"></a>0. 前端自动化(Workflow)</h2><ul>\n<li>前端构建工具<ul>\n<li><a href=\"https://github.com/webpack/webpack\">Webpack - module bundler</a></li>\n<li><a href=\"https://github.com/yeoman/yeoman\">Yeoman - a set of tools for automating development workflow</a> </li>\n<li><a href=\"http://gulpjs.com/\">gulp - The streaming build system</a> <ul>\n<li><a href=\"https://github.com/Platform-CUF/use-gulp\">use-gulp</a></li>\n</ul>\n</li>\n<li><a href=\"http://gruntjs.com/\">grunt - the JavaScript Task Runner</a></li>\n<li><a href=\"https://github.com/fex-team/fis\">F.I.S - 前端集成解决方案</a></li>\n<li><a href=\"https://github.com/google/web-starter-kit\">Web Starter Kit - 一个Google 提供的帮助开发者快速设置项目的工具集</a></li>\n</ul>\n</li>\n<li>前端模块管理器<ul>\n<li><a href=\"http://bower.io/\">Bower - A package manager for the web</a></li>\n<li><a href=\"http://browserify.org/\">Browserify</a></li>\n<li><a href=\"https://github.com/componentjs/component\">Component</a></li>\n<li><a href=\"http://duojs.org/\">Duo</a></li>\n<li><a href=\"http://requirejs.org/\">RequireJS</a></li>\n<li><a href=\"http://seajs.org/\">Sea.js</a></li>\n<li><a href=\"https://github.com/getify/LABjs\">LABjs - 文件加载器</a></li>\n<li><a href=\"https://github.com/css-modules/css-modulesify\">css-modulesify - CSS模块加载器</a></li>\n</ul>\n</li>\n<li>css预处理器<ul>\n<li><a href=\"http://lesscss.org/\">Less - Less is More , Than CSS</a> </li>\n<li><a href=\"http://sass-lang.com/\">Sass - Syntactically Awesome Style Sheets</a></li>\n<li><a href=\"http://learnboost.github.io/stylus/\">Stylus - Expressive, dynamic, robust CSS</a></li>\n</ul>\n</li>\n<li>前端性能分析工具<ul>\n<li><a href=\"https://github.com/macbre/analyze-css\">analyze-css - CSS 选择器的复杂度和性能分析器</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-前端框架-Frameworks\"><a href=\"#1-前端框架-Frameworks\" class=\"headerlink\" title=\"1. 前端框架(Frameworks)\"></a>1. 前端框架(Frameworks)</h2><ul>\n<li><a href=\"https://github.com/twbs/bootstrap\">Bootstrap</a></li>\n<li><a href=\"https://github.com/zurb/foundation\">Foundation</a></li>\n<li><a href=\"http://amazeui.org/\">Amaze UI</a></li>\n<li><a href=\"https://github.com/semantic-org/semantic-ui\">Semantic UI</a></li>\n<li><a href=\"http://purecss.io/\">Pure CSS</a></li>\n<li><a href=\"https://github.com/topcoat/topcoat\">topcoat</a></li>\n<li><a href=\"https://github.com/uikit/uikit\">UIkit</a></li>\n<li><a href=\"https://github.com/callemall/material-ui\">Material UI</a></li>\n<li><a href=\"https://github.com/Dogfalo/materialize\">Materialize - 一个基于 Material Design 的 CSS 框架</a></li>\n<li><a href=\"http://www.idangero.us/framework7\">Framework7</a></li>\n<li><a href=\"https://github.com/dcloudio/mui\">mui</a></li>\n<li><a href=\"http://ionicframework.com/\">ionic framework</a></li>\n<li><a href=\"https://github.com/jaunesarmiento/fries\">Fries</a></li>\n<li><a href=\"http://jquerymobile.com/\">jQuery Mobile</a></li>\n<li><a href=\"https://github.com/kikinteractive/app\">App.js</a></li>\n<li><a href=\"https://github.com/OfficeDev/Office-UI-Fabric\">Office UI Fabric - 微软 Office 前端团队的框架</a></li>\n<li><a href=\"https://www.polymer-project.org/\">Polymer - Google发布的Web组件构建框架</a></li>\n<li><a href=\"https://github.com/sentsin/layui/\">Layui - 经典模块化前端UI框架</a></li>\n</ul>\n<h2 id=\"2-JavaScript-框架汇总\"><a href=\"#2-JavaScript-框架汇总\" class=\"headerlink\" title=\"2. JavaScript 框架汇总\"></a>2. JavaScript 框架汇总</h2><ul>\n<li>JavaScript 框架<ul>\n<li><a href=\"https://github.com/facebook/react\">react</a></li>\n<li><a href=\"https://github.com/angular/angular\">Angular</a></li>\n<li><a href=\"https://github.com/jquery/jquery\">jQuery</a></li>\n<li><a href=\"https://github.com/jashkenas/backbone\">Backbone.js</a></li>\n<li><a href=\"https://github.com/emberjs/ember.js\">ember.js</a></li>\n<li><a href=\"https://github.com/ractivejs/ractive\">Ractive.js</a></li>\n<li><a href=\"https://github.com/kissyteam/kissy\">KISSY</a></li>\n<li><a href=\"https://github.com/madrobby/zepto\">Zepto.js</a></li>\n<li><a href=\"http://vanilla-js.com/\">Vanilla JS</a></li>\n<li><a href=\"https://github.com/yyx990803/vue\">Vue.js - 数据驱动的组件化MVVM库(用于创建web交互界面和数据双向绑定)</a><ul>\n<li><a href=\"https://github.com/vuejs/awesome-vue\">awesome-vue</a></li>\n<li><a href=\"http://element.eleme.io/#/\">Element - 基于 Vue 2.0 构建了一套完整的桌面 UI 组件库</a></li>\n<li><a href=\"https://github.com/vuejs/vuex\">Vuex - 一个专门为 Vue.js 应用设计的状态管理架构</a></li>\n<li><a href=\"https://github.com/ElemeFE/mint-ui\">Mint UI：基于 Vue.js 的移动端组件库</a></li>\n<li><a href=\"https://github.com/airyland/vux\">Vux - 基于 Vue 和 WeUI 的 UI 组件库</a></li>\n<li><a href=\"https://github.com/wangdahoo/vonic\">vonic - 基于 Vue.js 和 Ionic 的移动 UI 组件库</a><br>    - <a href=\"https://github.com/vuetifyjs/vuetify\">vuetify - vue2.0组件库</a></li>\n<li><a href=\"https://github.com/iview/iview\">iView - 一套基于 Vue.js 的高质量 UI 组件库</a></li>\n<li><a href=\"https://github.com/kazupon/vue-i18n\">vue-i18n</a></li>\n</ul>\n</li>\n<li><a href=\"http://canjs.com/guides/Utilities.html\">Can.js</a></li>\n<li><a href=\"https://github.com/RubyLouvre/avalon\">Avalon</a></li>\n<li><a href=\"https://github.com/box/t3js/\">T3 JavaScript Framework - 一个用于搭建大型Web应用的客户端JS框架</a></li>\n<li><a href=\"https://github.com/astoilkov/jsblocks\">jsblocks - Better MV-ish Framework 从简单 UI 到复杂单页应用都适用</a></li>\n</ul>\n</li>\n<li>轻量级JavaScript框架<ul>\n<li><a href=\"https://github.com/remy/min.js\">Min.js - Super minimal selector and event library</a> </li>\n<li><a href=\"https://github.com/n33/skel\">skel.js - A lightweight responsive framework</a></li>\n<li><a href=\"https://github.com/bendc/sprint\">Sprint.js - 一个高性能、小体积的 DOM 操作库</a></li>\n<li><a href=\"https://github.com/knockout/knockout\">knockout</a></li>\n<li><a href=\"https://github.com/ariya/phantomjs/\">PhantomJS - 一个基于 WebKit 的服务器端 JavaScript API</a></li>\n</ul>\n</li>\n<li>函数式反应型编程框架 FRP (Functional Reactive Programming) library<ul>\n<li><a href=\"https://github.com/baconjs/bacon.js/\">Bacon.js - A small functional reactive programming lib for JavaScript.</a> </li>\n<li><a href=\"http://www.flapjax-lang.org/\">Flapjax - 一个支持FRP的JavaScript框架</a></li>\n</ul>\n</li>\n<li>JavaScript 工具库<ul>\n<li><a href=\"https://github.com/jashkenas/underscore\">underscore.js</a></li>\n<li><a href=\"https://github.com/epeli/underscore.string\">Underscore.string.js字符串操作库</a></li>\n<li><a href=\"https://github.com/leecrossley/functional-js/\">functional.js</a></li>\n<li><a href=\"https://github.com/lodash/lodash\">Lo-Dash - A JavaScript utility library</a></li>\n<li><a href=\"https://github.com/dtao/lazy.js\">Lazy.js - a functional utility library for JavaScript</a></li>\n<li><a href=\"https://github.com/eliperelman/fn.js\">Fn.js</a></li>\n<li><a href=\"https://github.com/gwendall/way.js\">Way.js - 双向数据绑定库</a></li>\n<li><a href=\"https://github.com/Xaxis/boiler\">boiler - a utility library that makes tasks in JavaScript easier</a></li>\n<li>快捷键操作<ul>\n<li><a href=\"https://github.com/bitwalker/keys.js\">Keys.js - 应用快捷键</a></li>\n<li><a href=\"https://github.com/mycolorway/simple-hotkeys\">simple-hotkeys</a></li>\n<li><a href=\"https://github.com/jeresig/jquery.hotkeys\">jquery.hotkeys</a></li>\n<li><a href=\"https://github.com/ccampbell/mousetrap\">Mousetrap - 键盘快捷键操作</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/WechatFE/vConsole\">vConsole - 一个针对手机网页的前端 console 调试面板</a></li>\n<li><a href=\"https://github.com/AlloyTeam/AlloyLever\">AlloyLever - 移动web开发者工具面板</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-前端游戏框架\"><a href=\"#3-前端游戏框架\" class=\"headerlink\" title=\"3. 前端游戏框架\"></a>3. 前端游戏框架</h2><ul>\n<li><a href=\"https://github.com/cocos2d/cocos2d-html5\">cocos2d-html5</a></li>\n<li><a href=\"http://www.egret-labs.org/\">Egret Engine</a></li>\n<li><a href=\"https://github.com/digitalfruit/limejs\">LimeJS</a></li>\n<li><a href=\"https://github.com/CreateJS/EaselJS\">EaselJS</a></li>\n<li><a href=\"https://github.com/mrdoob/three.js\">three.js</a></li>\n<li><a href=\"https://github.com/AlloyTeam/AlloyStick\">AlloyStick</a></li>\n<li><a href=\"https://github.com/finscn/The-Best-JS-Game-Framework\">The-Best-JS-Game-Framework</a></li>\n<li><a href=\"https://github.com/RSamaium/CanvasEngine\">CanvasEngine</a></li>\n<li><a href=\"https://github.com/cykod/Quintus\">Quintus</a></li>\n<li><a href=\"https://github.com/piqnt/stage.js/\">Stage.js</a></li>\n<li><a href=\"https://github.com/photonstorm/phaser/\">phaser - 一个快速、免费、开源的 HTML5 游戏框架</a></li>\n</ul>\n<h2 id=\"4-ui组件库-CSS-Framework\"><a href=\"#4-ui组件库-CSS-Framework\" class=\"headerlink\" title=\"4. ui组件库(CSS Framework)\"></a>4. ui组件库(CSS Framework)</h2><ul>\n<li><a href=\"https://github.com/weui/weui\">WeUI - 微信官方UI库</a><ul>\n<li><a href=\"https://github.com/lihongxun945/jquery-weui\">jQuery WeUI - WeUI的jQuery版本</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/fex-team/GMU\">GMU - 基于zepto的ui组件库，适用于移动端</a></li>\n<li><a href=\"https://github.com/frozenui/frozenui\">FrozenUI - 腾讯移动端组件库</a></li>\n<li><a href=\"http://nec.netease.com/\">NEC - 更好的CSS方案 </a></li>\n<li><a href=\"http://nej.netease.com/\">NEJ - 更好的JS解决方案</a></li>\n<li><a href=\"https://github.com/LFeh/css-components/\">Pure CSS Components</a></li>\n<li><a href=\"https://github.com/adamschwartz/magic-of-css\">magic-of-css</a></li>\n<li><a href=\"https://github.com/primer/primer\">Primer - The CSS toolkit and guidelines that power GitHub</a></li>\n<li><a href=\"https://github.com/lihongxun945/light7\">light7 - A Light and easy to use UI Lib</a></li>\n<li><a href=\"https://github.com/picturepan2/spectre\">Spectre.css - 轻量、响应式的现代 CSS 框架</a></li>\n<li><a href=\"https://github.com/xcatliu/mobi.css\">mobi.css - 一个轻量、灵活的移动端 CSS 框架</a></li>\n</ul>\n<h2 id=\"5-基础模版\"><a href=\"#5-基础模版\" class=\"headerlink\" title=\"5. 基础模版\"></a>5. 基础模版</h2><ul>\n<li>浏览器统一(Cross Browser)<ul>\n<li><a href=\"https://github.com/h5bp/html5-boilerplate\">HTML5 BOILERPLATE</a></li>\n<li><a href=\"https://github.com/Modernizr/Modernizr\">Modernizr</a></li>\n<li><a href=\"https://github.com/necolas/normalize.css/\">Normalize.css</a></li>\n<li><a href=\"https://github.com/afarkas/html5shiv\">HTML5 Shiv - 让ie浏览器成为支持html5的浏览器的解决方法</a></li>\n<li><a href=\"https://github.com/imsky/cssFx\">cssFx - 为CSS3自动生成浏览器前缀</a></li>\n<li><a href=\"https://github.com/LeaVerou/prefixfree\">-prefix-free - Break free from CSS prefix hell</a></li>\n<li><a href=\"https://github.com/zhangxinxu/ieBetter.js\">ieBetter.js - make ie browser like a morden browser main for ie6~ie8</a></li>\n<li><a href=\"https://github.com/stefanpenner/es6-promise\">es6-promise - Promise 对象的兼容</a></li>\n</ul>\n</li>\n<li>响应式<ul>\n<li><a href=\"https://github.com/ResponsiveBP/Responsive\">Responsive - 响应式布局</a></li>\n<li><a href=\"https://github.com/WickyNilliams/enquire.js\">Enquire.js - Awesome Media Queries in JavaScript</a></li>\n<li><a href=\"https://github.com/kombai/freewall\">Free Wall - 创建桌面，移动和平板的动态网格布局</a></li>\n</ul>\n</li>\n<li>适配方案<ul>\n<li><a href=\"https://github.com/unbug/generator-webappstarter/blob/master/app/templates/app/src/util/MetaHandler.js\">MetaHandler.js：移动端适配各种屏幕无痛工具脚本</a></li>\n<li><a href=\"https://github.com/amfe/lib-flexible\">lib-flexible: 移动端自适应方案</a><ul>\n<li><a href=\"https://github.com/amfe/article/issues/17?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io\">参考: 使用Flexible实现手淘H5页面的终端适配</a></li>\n<li><a href=\"http://ufologist.github.io/responsive-page/others-responsive/flexible.html\">flexible demo 1</a></li>\n<li><a href=\"http://huodong.m.taobao.com/act/yibo.html\">flexible demo 2</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/peunzhang/pageResponse\">pageResponse</a></li>\n<li><a href=\"https://github.com/ufologist/responsive-page\">responsive-page</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-排版\"><a href=\"#6-排版\" class=\"headerlink\" title=\"6. 排版\"></a>6. 排版</h2><ul>\n<li><a href=\"https://github.com/lepture/yue.css\">yue.css</a></li>\n<li><a href=\"https://github.com/sofish/typo.css\">typo.css</a></li>\n<li><a href=\"https://github.com/sparanoid/chinese-copywriting-guidelines\">chinese-copywriting-guidelines - 中文文案排版指南</a></li>\n</ul>\n<h2 id=\"7-网格系统\"><a href=\"#7-网格系统\" class=\"headerlink\" title=\"7. 网格系统\"></a>7. 网格系统</h2><ul>\n<li><a href=\"https://github.com/aekaplan/grid\">grid</a></li>\n<li><a href=\"https://github.com/kristoferjoseph/flexboxgrid\">Flexbox Grid</a></li>\n<li><a href=\"https://github.com/DrewDahlman/Mason\">MasonJS - creating a perfect grid</a></li>\n</ul>\n<h2 id=\"8-路由和链接-Routing-And-URLs\"><a href=\"#8-路由和链接-Routing-And-URLs\" class=\"headerlink\" title=\"8. 路由和链接(Routing And URLs)\"></a>8. 路由和链接(Routing And URLs)</h2><ul>\n<li><a href=\"https://github.com/browserstate/history.js\">History.js - gracefully supports the HTML5 History&#x2F;State APIs</a></li>\n<li><a href=\"https://github.com/defunkt/jquery-pjax\">jquery-pjax - pushState+ajax</a></li>\n<li><a href=\"https://github.com/asual/jquery-address\">jquery-address - Deep Linking</a></li>\n<li><a href=\"https://github.com/visionmedia/page.js\">page.js - Micro client-side router</a></li>\n<li><a href=\"https://github.com/millermedeiros/crossroads.js\">crossroads.js</a></li>\n<li><a href=\"https://github.com/javve/hash.js\">hash.js</a>  </li>\n<li><a href=\"https://github.com/mtrpcic/pathjs\">path.js</a></li>\n<li><a href=\"https://github.com/flatiron/director\">director.js - 前端路由库(通过#符号进行路径组织,结合vue的component可进行单页的局部模块刷新)</a></li>\n<li><a href=\"https://github.com/medialize/URI.js\">URI.js</a></li>\n<li><a href=\"https://github.com/grobmeier/Roadcrew.js\">Roadcrew.js</a></li>\n<li><a href=\"https://github.com/pid/speakingurl\">SpeakingURL</a></li>\n<li><a href=\"https://github.com/YanagiEiichi/uparams\">uparams - An URL params parser</a></li>\n<li><a href=\"https://github.com/leeluolee/stateman\">StateMan - 一个处理深层次单页系统的路由库</a></li>\n</ul>\n<h2 id=\"9-UA-识别\"><a href=\"#9-UA-识别\" class=\"headerlink\" title=\"9. UA 识别\"></a>9. UA 识别</h2><ul>\n<li><a href=\"https://github.com/hotoo/detector\">detector</a></li>\n<li><a href=\"https://github.com/faisalman/ua-parser-js/\">ua-parser-js</a></li>\n</ul>\n<h2 id=\"10-表单处理\"><a href=\"#10-表单处理\" class=\"headerlink\" title=\"10. 表单处理\"></a>10. 表单处理</h2><h3 id=\"10-1-表单验证-Form-Validator-x2F-表单提示\"><a href=\"#10-1-表单验证-Form-Validator-x2F-表单提示\" class=\"headerlink\" title=\"10.1 表单验证(Form Validator)&#x2F;表单提示\"></a>10.1 表单验证(Form Validator)&#x2F;表单提示</h3><ul>\n<li><a href=\"https://github.com/niceue/validator\">Validator</a></li>\n<li><a href=\"https://github.com/guillaumepotier/Parsley.js\">Parsley</a></li>\n<li><a href=\"https://github.com/malsup/form\">jquery.form.js - jQuery Form Plugin</a></li>\n<li><a href=\"https://github.com/haiercdboy/Validform\">Validform</a></li>\n<li><a href=\"https://github.com/sofish/validator.js\">validator.js</a></li>\n<li><a href=\"https://github.com/jzaefferer/jquery-validation\">jquery-validation - jQuery Validation Plugin</a></li>\n<li><a href=\"https://github.com/victorjonsson/jQuery-Form-Validator\">formvalidator.js</a></li>\n<li><a href=\"http://github.com/Colourity/Fort.js\">Fort.js – 表单填写进度提示</a></li>\n<li><a href=\"https://github.com/mailcheck/mailcheck\">mailcheck - 用于检测email地址的域名</a></li>\n<li><a href=\"https://github.com/clubdesign/floatlabels.js\">Floatlable.js - 输入时显示placeholder文本</a></li>\n<li><a href=\"https://github.com/peachananr/label_better\">jQuery Label Better</a></li>\n<li><a href=\"https://github.com/ppoffice/validator.js\">validator.js</a></li>\n</ul>\n<h3 id=\"10-2-lt-input-gt-相关\"><a href=\"#10-2-lt-input-gt-相关\" class=\"headerlink\" title=\"10.2 &lt; input &gt; 相关\"></a>10.2 &lt; input &gt; 相关</h3><ul>\n<li><a href=\"https://github.com/nosir/cleave.js\">cleave.js - 格式化你的输入内容</a></li>\n</ul>\n<h3 id=\"10-3-lt-select-gt-相关\"><a href=\"#10-3-lt-select-gt-相关\" class=\"headerlink\" title=\"10.3 &lt; select &gt; 相关\"></a>10.3 &lt; select &gt; 相关</h3><ul>\n<li><a href=\"https://github.com/harvesthq/chosen\">Chosen</a></li>\n<li><a href=\"https://github.com/select2/select2\">Select2</a></li>\n<li><a href=\"https://github.com/silviomoreto/bootstrap-select\">bootstrap-select</a></li>\n</ul>\n<h3 id=\"10-4-单选框-x2F-复选框相关\"><a href=\"#10-4-单选框-x2F-复选框相关\" class=\"headerlink\" title=\"10.4 单选框&#x2F;复选框相关\"></a>10.4 单选框&#x2F;复选框相关</h3><ul>\n<li><a href=\"https://github.com/fronteed/iCheck\">iCheck - 增强复选框和单选按钮</a></li>\n<li><a href=\"https://github.com/abpetkov/switchery\">Switchery - iOS 7 style switches for your checkboxes</a></li>\n</ul>\n<h3 id=\"10-5-上传组件\"><a href=\"#10-5-上传组件\" class=\"headerlink\" title=\"10.5 上传组件\"></a>10.5 上传组件</h3><ul>\n<li><a href=\"https://github.com/blueimp/jQuery-File-Upload\">jQuery File Upload Plugin</a></li>\n<li><a href=\"http://fex-team.github.io/webuploader/\">百度 Web Uploader</a></li>\n<li><a href=\"http://www.uploadify.com/\">uploadify</a></li>\n<li><a href=\"https://github.com/moxiecode/plupload\">Plupload</a></li>\n<li><a href=\"http://fineuploader.com/index.html\">Fine Uploader</a></li>\n<li><a href=\"https://github.com/aralejs/upload\">arale-upload - 轻量级 iframe and html5 file uploader</a></li>\n<li><a href=\"https://github.com/enyo/dropzone\">Dropzone.js - 文件上传库(可获取文件mime, 文件大小等; 针对图片可生成缩略图,获取图片宽度,高度)</a></li>\n<li><a href=\"https://github.com/flowjs/flow.js\">flow.js</a></li>\n<li><a href=\"https://github.com/think2011/localResizeIMG\">localResizeIMG - 前端本地客户端压缩图片，兼容IOS，Android，PC</a></li>\n<li><a href=\"https://github.com/mycolorway/simple-uploader\">simple-uploader</a></li>\n</ul>\n<h3 id=\"10-6-日期选择\"><a href=\"#10-6-日期选择\" class=\"headerlink\" title=\"10.6 日期选择\"></a>10.6 日期选择</h3><ul>\n<li><a href=\"https://github.com/smalot/bootstrap-datetimepicker\">Both Date and Time picker widget based on twitter bootstrap</a></li>\n<li><a href=\"http://gmu.baidu.com/demo/widget/calendar/calendar.html\">GMU 日历组件</a></li>\n<li><a href=\"https://github.com/acidb/mobiscroll\">Mobiscroll</a></li>\n<li><a href=\"https://github.com/dbushell/Pikaday\">Pikaday - 日期选择器</a></li>\n<li>价格日历<ul>\n<li><a href=\"https://github.com/fugm/PriceCalendar\">PriceCalendar - 酒店价格日历</a><ul>\n<li><a href=\"http://fgm.cc/learn/calendar/price-calendar/api.html\">API文档</a>  </li>\n<li><a href=\"http://fgm.cc/learn/calendar/price-calendar/\">DEMO</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/wind-stone/price-calendar\">price-calendar - 价格日历</a></li>\n<li><a href=\"https://github.com/zhangyi5628/price_calendar\">price_calendar - 含有商品价格的日历控件</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-7-取色\"><a href=\"#10-7-取色\" class=\"headerlink\" title=\"10.7 取色\"></a>10.7 取色</h3><ul>\n<li><a href=\"https://github.com/mjolnic/bootstrap-colorpicker\">Colorpicker plugin for Twitter Bootstrap</a></li>\n</ul>\n<h3 id=\"10-8-标签插件-Tag\"><a href=\"#10-8-标签插件-Tag\" class=\"headerlink\" title=\"10.8 标签插件(Tag)\"></a>10.8 标签插件(Tag)</h3><ul>\n<li><a href=\"https://github.com/sniperwolf/taggingJS\">TaggingJS – 可以灵活定制的 jQuery 标签系统插件</a></li>\n<li><a href=\"https://github.com/brianreavis/selectize.js\">selectize.js</a></li>\n<li><a href=\"https://github.com/timschlechter/bootstrap-tagsinput/\">Bootstrap Tags Input</a></li>\n<li><a href=\"https://github.com/xoxco/jQuery-Tags-Input\">jQuery-Tags-Input</a></li>\n</ul>\n<h3 id=\"10-9-自动完成插件\"><a href=\"#10-9-自动完成插件\" class=\"headerlink\" title=\"10.9 自动完成插件\"></a>10.9 自动完成插件</h3><ul>\n<li><a href=\"https://github.com/ichord/At.js\">At.js - 一个Twitter&#x2F;微博样式的@自动完成插件</a></li>\n<li><a href=\"https://github.com/yuku-t/jquery-textcomplete\">jquery-textcomplete - 智能搜索提示框&#x2F;自动补全</a></li>\n<li><a href=\"https://github.com/twitter/typeahead.js\">typeahead.js - a fast and fully-featured autocomplete library</a></li>\n</ul>\n<h3 id=\"10-10-样式修正\"><a href=\"#10-10-样式修正\" class=\"headerlink\" title=\"10.10 样式修正\"></a>10.10 样式修正</h3><ul>\n<li><a href=\"https://github.com/jackmoore/autosize\">autosize - 使文本框自动适应所输入的内容</a></li>\n</ul>\n<h2 id=\"11-图表绘制-x2F-图形库-Graphics\"><a href=\"#11-图表绘制-x2F-图形库-Graphics\" class=\"headerlink\" title=\"11. 图表绘制&#x2F;图形库(Graphics)\"></a>11. 图表绘制&#x2F;图形库(Graphics)</h2><ul>\n<li><a href=\"https://github.com/highslide-software/highcharts.com\">Highcharts</a></li>\n<li><a href=\"https://github.com/nnnick/Chart.js\">Chart.js - Simple HTML5 Charts using Canvas</a></li>\n<li><a href=\"https://github.com/ecomfe/echarts\">百度 ECharts</a></li>\n<li><a href=\"https://github.com/gionkunz/chartist-js\">Chartist.js</a></li>\n<li><a href=\"https://github.com/mbostock/d3\">D3.js - A JavaScript visualization library for HTML and SVG.</a><ul>\n<li><a href=\"https://github.com/square/intro-to-d3\">intro-to-d3 - a D3.js tutorial</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/uxebu/bonsai\">Bonsai - 一个功能强大的JavaScript图形库</a></li>\n<li><a href=\"https://github.com/fastly/epoch/\">epoch - 数据图表可视化</a></li>\n<li><a href=\"https://github.com/almende/vis\">Vis.js</a></li>\n<li><a href=\"https://github.com/forio/contour\">Coutour.js</a></li>\n<li><a href=\"https://github.com/ecomfe/zrender\">zrender - 一个轻量级的Canvas类库，MVC封装，数据驱动，提供类Dom事件模型，让canvas绘图大不同！</a></li>\n</ul>\n<h2 id=\"12-日期格式化-amp-时间轴\"><a href=\"#12-日期格式化-amp-时间轴\" class=\"headerlink\" title=\"12. 日期格式化 &amp; 时间轴\"></a>12. 日期格式化 &amp; 时间轴</h2><ul>\n<li><a href=\"http://momentjs.com/\">Moment.js - 日期处理</a></li>\n<li><a href=\"https://github.com/pragmaticly/smart-time-ago\">Smart Time Ago - 显示相对时间</a></li>\n<li><a href=\"https://github.com/vorg/timeline.js\">timeline.js</a></li>\n<li><a href=\"https://github.com/hustcc/timeago.js\">timeago.js</a></li>\n</ul>\n<h2 id=\"13-页面交互\"><a href=\"#13-页面交互\" class=\"headerlink\" title=\"13. 页面交互\"></a>13. 页面交互</h2><h3 id=\"13-1-Slider\"><a href=\"#13-1-Slider\" class=\"headerlink\" title=\"13.1 Slider\"></a>13.1 Slider</h3><ul>\n<li><a href=\"https://github.com/kenwheeler/slick/\">slick - the last carousel you’ll ever need</a></li>\n<li><a href=\"https://github.com/thebird/Swipe\">Swipe - the most accurate touch slider</a></li>\n<li><a href=\"https://github.com/nolimits4web/Swiper\">Swiper - Most modern mobile touch slider</a></li>\n<li><a href=\"https://github.com/cubiq/iscroll\">iscroll - Smooth scrolling for the web</a></li>\n<li><a href=\"https://github.com/BE-FE/iSlider\">iSlider - 移动端滑动组件</a></li>\n<li><a href=\"https://github.com/OwlFonk/OwlCarousel\">OwlCarousel - create beautiful responsive carousel slider</a></li>\n<li><a href=\"https://github.com/jquery/jquery-mousewheel/\">jquery-mousewheel - jQuery鼠标滚轮滚动侦测插件</a></li>\n<li><a href=\"https://github.com/jedrzejchalubek/Glide.js\">Glide.js - 轻量级滑块组件</a></li>\n<li><a href=\"https://github.com/dimsemenov/photoswipe\">PhotoSwipe</a></li>\n<li><a href=\"http://www.superslide2.com/TouchSlide/\">TouchSlide - 触屏滑动特效(焦点图,Tab切换)</a></li>\n</ul>\n<h3 id=\"13-2-瀑布流\"><a href=\"#13-2-瀑布流\" class=\"headerlink\" title=\"13.2 瀑布流\"></a>13.2 瀑布流</h3><ul>\n<li><a href=\"http://masonry.desandro.com/\">Masonry</a></li>\n<li><a href=\"http://isotope.metafizzy.co/\">Isotope - Filter &amp; sort magical layouts</a></li>\n<li><a href=\"https://github.com/ademilter/bricklayer\">Bricklayer</a></li>\n</ul>\n<h3 id=\"13-3-懒加载-x2F-加载监听-x2F-预加载\"><a href=\"#13-3-懒加载-x2F-加载监听-x2F-预加载\" class=\"headerlink\" title=\"13.3 懒加载&#x2F;加载监听&#x2F;预加载\"></a>13.3 懒加载&#x2F;加载监听&#x2F;预加载</h3><ul>\n<li><a href=\"https://github.com/desandro/imagesloaded\">imagesLoaded</a></li>\n<li><a href=\"https://github.com/toddmotto/echo\">Echo.js</a></li>\n<li><a href=\"https://github.com/aFarkas/lazysizes\">lazySizes</a></li>\n<li><a href=\"https://github.com/tuupola/jquery_lazyload\">jquery_lazyload</a></li>\n<li><a href=\"https://github.com/shprink/bttrlazyloading/\">BttrLazyLoading</a></li>\n<li><a href=\"https://github.com/vvo/lazyload\">lazyload.js</a></li>\n<li><a href=\"https://github.com/callmecavs/layzr.js\">layzr.js - 一个小巧快速的图片懒加载库</a></li>\n<li><a href=\"https://github.com/alexanderdickson/waitForImages\">waitForImages - 图片加载监听库</a></li>\n<li><a href=\"https://github.com/thinkpixellab/PxLoader\">PxLoader - JS预加载库:实现图片、声音等各种文件的预加载功能</a></li>\n<li><a href=\"https://github.com/bgrins/bindWithDelay\">bindWithDelay - jQuery Plugin For Delayed Event Execution</a></li>\n<li><a href=\"https://github.com/dennyferra/TypeWatch\">TypeWatch - 停止输入时调用</a></li>\n</ul>\n<h3 id=\"13-4-图片轮播-幻灯片-x2F-图片展示\"><a href=\"#13-4-图片轮播-幻灯片-x2F-图片展示\" class=\"headerlink\" title=\"13.4 图片轮播(幻灯片)&#x2F;图片展示\"></a>13.4 图片轮播(幻灯片)&#x2F;图片展示</h3><ul>\n<li><a href=\"https://github.com/woothemes/FlexSlider\">FlexSlider</a></li>\n<li><a href=\"https://github.com/idiot/unslider\">unslider - 小而美的轮播库</a></li>\n<li><a href=\"https://github.com/scaron/prettyphoto\">prettyPhoto</a></li>\n<li><a href=\"https://github.com/chrishumboldt/Flickerplate\">FlickerPlate - A cool jQuery plugin that lets you flick through content.</a></li>\n<li><a href=\"https://github.com/imsky/holder\">Holder.js - Client-side image placeholders.</a></li>\n<li><a href=\"https://github.com/brunjo/rowGrid.js\">RowGrid.js - 在径直的行里放置图片</a></li>\n<li><a href=\"http://osvaldas.info/examples/image-lightbox-responsive-touch-friendly/\">ImageLightbox.js - 灯箱效果</a></li>\n<li><a href=\"https://github.com/peachananr/panorama_viewer\">JQuery Panorama Viewer - 全景视图</a></li>\n<li><a href=\"https://github.com/tholman/intense-images\">Intense Images - 全屏查看图片</a></li>\n<li><a href=\"http://scottjehl.github.io/picturefill/\">Picturefill - 一个响应式图片 JS 插件</a></li>\n<li><a href=\"https://github.com/fat/zoom.js\">zoom.js - 一个 jQuery 图片放大插件</a></li>\n<li><a href=\"https://github.com/brianium/watermarkjs\">watermarkjs - 一个在浏览器中添加图片水印的 JS 库</a></li>\n<li><a href=\"https://github.com/kvendrik/responsive-images.js\">responsive-images.js</a></li>\n<li><a href=\"https://github.com/polarnotion/turntable\">Turntable.js - 轻易实现图像的3D旋转</a></li>\n<li><a href=\"https://github.com/wentin/ResponsifyJS\">ResponsifyJS - 让图像完全响应式而不会牺牲图像的主要部分</a></li>\n</ul>\n<h3 id=\"13-5-图片剪裁-x2F-图片处理\"><a href=\"#13-5-图片剪裁-x2F-图片处理\" class=\"headerlink\" title=\"13.5 图片剪裁&#x2F;图片处理\"></a>13.5 图片剪裁&#x2F;图片处理</h3><ul>\n<li><a href=\"https://github.com/tapmodo/Jcrop\">Jcrop -  Image Cropping Plugin for jQuery</a></li>\n<li><a href=\"https://github.com/sconsult/croppic\">croppic - an image cropping jquery plugin</a></li>\n<li><a href=\"https://github.com/jwagner/smartcrop.js\">smartcrop.js - 智能图片裁剪库</a></li>\n<li><a href=\"https://github.com/boblemarin/jQuery.eraser\">jQuery.eraser - 图像擦除插件</a></li>\n<li><a href=\"http://www.dillerdesign.com/experiment/DD_belatedPNG/\">DD_belatedPNG.js - 让IE6支持透明PNG图片</a></li>\n<li><a href=\"https://github.com/jonom/jquery-focuspoint\">FocusPoint.js 实现图片的响应式裁剪</a></li>\n<li><a href=\"https://github.com/odyniec/imgareaselect\">imgareaselect</a></li>\n<li><a href=\"https://github.com/una/CSSgram\">CSSgram - CSS 实现的 Instagram 滤镜库</a></li>\n<li><a href=\"https://github.com/whackashoe/antimoderate\">antimoderate - 图片模糊库</a></li>\n</ul>\n<h3 id=\"13-6-进度条-x2F-加载动画-Loading\"><a href=\"#13-6-进度条-x2F-加载动画-Loading\" class=\"headerlink\" title=\"13.6 进度条&#x2F;加载动画(Loading)\"></a>13.6 进度条&#x2F;加载动画(Loading)</h3><ul>\n<li><a href=\"http://ricostacruz.com/nprogress/\">NProgress.js</a></li>\n<li><a href=\"https://github.com/usablica/progress.js\">progress.js</a></li>\n<li><a href=\"https://github.com/HubSpot/pace\">Pace - Automatic page load progress bar</a></li>\n<li><a href=\"https://github.com/englercj/jquery-ajax-progress\">jquery-ajax-progress</a></li>\n<li><a href=\"https://github.com/jacoborus/nanobar\">nanobar - Very lightweight progress bars.</a></li>\n<li><a href=\"https://github.com/vadimsva/waitMe\">waitMe - 很漂亮的loading效果</a></li>\n<li><a href=\"https://github.com/fgnass/spin.js\">spin.js</a></li>\n<li><a href=\"https://github.com/padolsey/sonic.js\">sonic.js</a></li>\n<li><a href=\"https://github.com/joaopereirawd/fakeLoader.js\">fakeLoader.js</a></li>\n<li><a href=\"https://github.com/ConnorAtherton/loaders.css\">loaders.css - 一个为性能优化的实现加载动画效果的 CSS 框架</a></li>\n<li><a href=\"https://github.com/lukehaas/css-loaders\">css-loaders</a></li>\n<li><a href=\"https://github.com/christophercliff/sausage\">Sausage - 跟踪滚动条并记录当前阅读所处节点</a></li>\n</ul>\n<h3 id=\"13-7-侧滑插件-offcancas\"><a href=\"#13-7-侧滑插件-offcancas\" class=\"headerlink\" title=\"13.7 侧滑插件(offcancas)\"></a>13.7 侧滑插件(offcancas)</h3><ul>\n<li><a href=\"https://github.com/christophery/pushy\">pushy -  a responsive off-canvas navigation menu </a></li>\n<li><a href=\"https://github.com/mango/slideout\">Slideout.js - 一个用于移动 Web 应用的触摸滑出式导航菜单</a></li>\n</ul>\n<h3 id=\"13-8-菜单-Menu\"><a href=\"#13-8-菜单-Menu\" class=\"headerlink\" title=\"13.8 菜单(Menu)\"></a>13.8 菜单(Menu)</h3><ul>\n<li><a href=\"https://github.com/joeldbirch/superfish\">SuperFish - 基于jQuery的级联下拉菜单</a></li>\n<li><a href=\"https://github.com/viljamis/responsive-nav.js\">Responsive Nav - 响应式导航</a></li>\n<li><a href=\"https://github.com/onokumus/metisMenu\">metisMenu - A jQuery menu plugin</a></li>\n</ul>\n<h3 id=\"13-9-滚动侦测-ScrollSpy\"><a href=\"#13-9-滚动侦测-ScrollSpy\" class=\"headerlink\" title=\"13.9 滚动侦测(ScrollSpy)\"></a>13.9 滚动侦测(ScrollSpy)</h3><ul>\n<li><a href=\"https://github.com/sxalexander/jquery-scrollspy\">jquery-scrollspy(1)</a></li>\n<li><a href=\"https://github.com/thesmart/jquery-scrollspy\">jquery-scrollspy(2)</a></li>\n<li><a href=\"https://github.com/imakewebthings/waypoints\">Waypoints</a></li>\n<li><a href=\"https://github.com/janpaepke/ScrollMagic\">ScrollMagic - 像进度条一样使用滚动条</a></li>\n</ul>\n<h3 id=\"13-10-滚动加载更多-x2F-下拉刷新-Pull-to-Refresh\"><a href=\"#13-10-滚动加载更多-x2F-下拉刷新-Pull-to-Refresh\" class=\"headerlink\" title=\"13.10 滚动加载更多&#x2F;下拉刷新(Pull to Refresh)\"></a>13.10 滚动加载更多&#x2F;下拉刷新(Pull to Refresh)</h3><ul>\n<li><a href=\"https://github.com/pklauzinski/jscroll\">jScroll</a></li>\n<li><a href=\"https://github.com/apeatling/web-pull-to-refresh\">web-pull-to-refresh</a></li>\n<li><a href=\"https://github.com/dwcares/pulltorefresh\">pulltorefresh</a></li>\n<li><a href=\"https://github.com/ThrivingKings/RubberBand.js\">RubberBand.js - add pull-to-refresh functionality to any page.</a></li>\n</ul>\n<h3 id=\"13-11-平滑滚动插件-Smooth-Scroll\"><a href=\"#13-11-平滑滚动插件-Smooth-Scroll\" class=\"headerlink\" title=\"13.11 平滑滚动插件(Smooth Scroll)\"></a>13.11 平滑滚动插件(Smooth Scroll)</h3><ul>\n<li><a href=\"https://github.com/kswedberg/jquery-smooth-scroll\">jquery-smooth-scroll</a></li>\n<li><a href=\"https://github.com/flesler/jquery.scrollTo\">jquery.scrollTo - 平滑滚动到页面指定位置</a></li>\n<li><a href=\"https://github.com/cferdinandi/smooth-scroll\">smooth-scroll</a></li>\n<li><a href=\"https://github.com/markgoodyear/scrollup\">scrollUp</a></li>\n<li><a href=\"https://github.com/tholman/elevator.js\">elevator.js - 一个模拟电梯运行“返回顶部”的 JS 插件</a></li>\n</ul>\n<h3 id=\"13-12-全屏滚动-x2F-全屏切换\"><a href=\"#13-12-全屏滚动-x2F-全屏切换\" class=\"headerlink\" title=\"13.12 全屏滚动&#x2F;全屏切换\"></a>13.12 全屏滚动&#x2F;全屏切换</h3><ul>\n<li><a href=\"https://github.com/alvarotrigo/pagePiling.js\">pagePiling.js - 全屏滚动效果</a></li>\n<li><a href=\"https://github.com/alvarotrigo/fullPage.js/\">fullPage.js</a></li>\n<li><a href=\"https://github.com/peachananr/onepage-scroll\">onepage-scroll</a></li>\n<li><a href=\"https://github.com/yanhaijing/zepto.fullpage\">zepto.fullpage - 专注于移动端的fullPage.js</a></li>\n<li><a href=\"https://github.com/sindresorhus/screenfull.js\">screenfull.js - 切换全屏模式</a></li>\n</ul>\n<h3 id=\"13-13-分屏滚动\"><a href=\"#13-13-分屏滚动\" class=\"headerlink\" title=\"13.13 分屏滚动\"></a>13.13 分屏滚动</h3><ul>\n<li><a href=\"https://github.com/alvarotrigo/multiscroll.js\">multiscroll.js - 分屏滚动效果</a></li>\n</ul>\n<h3 id=\"13-14-转场效果\"><a href=\"#13-14-转场效果\" class=\"headerlink\" title=\"13.14 转场效果\"></a>13.14 转场效果</h3><ul>\n<li><a href=\"https://github.com/blivesta/animsition\">Animsition - 页面切换时的过渡效果</a></li>\n</ul>\n<h3 id=\"13-15-固定元素-Sticky\"><a href=\"#13-15-固定元素-Sticky\" class=\"headerlink\" title=\"13.15 固定元素(Sticky)\"></a>13.15 固定元素(Sticky)</h3><ul>\n<li><a href=\"https://github.com/garand/sticky\">sticky - jQuery Plugin for Sticky Objects</a></li>\n<li><a href=\"https://github.com/webpop/jquery.pin\">jquery.pin - 固定页面元素</a></li>\n<li><a href=\"https://github.com/LiranCohen/stickUp\">stickUp</a></li>\n<li><a href=\"https://github.com/iclanzan/slinky\">Slinky.js - 堆叠头部创建滑动导航列表</a></li>\n</ul>\n<h3 id=\"13-16-触控事件\"><a href=\"#13-16-触控事件\" class=\"headerlink\" title=\"13.16 触控事件\"></a>13.16 触控事件</h3><ul>\n<li><a href=\"https://github.com/hammerjs/hammer.js\">Hammer.js</a></li>\n<li><a href=\"https://github.com/stephband/jquery.event.move\">jquery.event.move.js</a></li>\n</ul>\n<h3 id=\"13-17-拖拽组件\"><a href=\"#13-17-拖拽组件\" class=\"headerlink\" title=\"13.17 拖拽组件\"></a>13.17 拖拽组件</h3><ul>\n<li><a href=\"https://github.com/desandro/draggabilly\">Draggabilly - 专注于拖拽功能的 JS 库</a></li>\n<li><a href=\"https://github.com/bevacqua/dragula\">dragula - 一个让拖放操作变简单的 JS 库</a></li>\n<li><a href=\"https://github.com/uberVU/grid\">GridList - 可拖拉的响应式列表库</a></li>\n</ul>\n<h3 id=\"13-18-隐藏或展示页面元素\"><a href=\"#13-18-隐藏或展示页面元素\" class=\"headerlink\" title=\"13.18 隐藏或展示页面元素\"></a>13.18 隐藏或展示页面元素</h3><ul>\n<li><a href=\"http://www.bootcss.com/p/headroom.js/\">Headroom.js - 在不需要页头时将其隐藏</a></li>\n<li><a href=\"https://github.com/jedfoster/Readmore.js\">Readmore.js - 内容显示与隐藏插件</a></li>\n<li><a href=\"https://github.com/dmotz/oriDomi\">oriDomi - 像指一样折叠Dom元素</a></li>\n</ul>\n<h3 id=\"13-19-滚动条-Scrollbar\"><a href=\"#13-19-滚动条-Scrollbar\" class=\"headerlink\" title=\"13.19 滚动条(Scrollbar)\"></a>13.19 滚动条(Scrollbar)</h3><ul>\n<li><a href=\"https://github.com/vitch/jScrollPane\">jScrollPane</a></li>\n<li><a href=\"https://github.com/gromo/jquery.scrollbar\">jquery.scrollbar</a></li>\n<li><a href=\"https://github.com/noraesae/perfect-scrollbar\">perfect-scrollbar</a></li>\n<li><a href=\"https://github.com/jamesflorentino/nanoScrollerJS\">nanoScrollerJS</a></li>\n<li><a href=\"https://github.com/wieringen/tinyscrollbar\">tinyscrollbar</a></li>\n</ul>\n<h3 id=\"13-20-视差滚动-Parallax-Scrolling\"><a href=\"#13-20-视差滚动-Parallax-Scrolling\" class=\"headerlink\" title=\"13.20 视差滚动(Parallax Scrolling)\"></a>13.20 视差滚动(Parallax Scrolling)</h3><ul>\n<li><a href=\"https://github.com/wagerfield/parallax\">parallax.js</a></li>\n<li><a href=\"https://github.com/stephband/jparallax\">jparallax</a></li>\n<li><a href=\"https://github.com/Prinzhorn/skrollr\">skrollr</a></li>\n</ul>\n<h2 id=\"13-21-缩放-Zooming\"><a href=\"#13-21-缩放-Zooming\" class=\"headerlink\" title=\"13.21 缩放 (Zooming)\"></a>13.21 缩放 (Zooming)</h2><ul>\n<li><a href=\"https://github.com/hakimel/zoom.js\">zoom.js - 一款效果很独特的页面内容缩放插件</a></li>\n<li><a href=\"https://github.com/fat/zoom.js\">zoom.js - 一个 jQuery 图片放大插件</a></li>\n<li><a href=\"https://github.com/jackmoore/zoom\">jQuery Zoom - mouseover时图片缩放效果</a></li>\n</ul>\n<h2 id=\"14-代码高亮插件-x2F-代码编辑器\"><a href=\"#14-代码高亮插件-x2F-代码编辑器\" class=\"headerlink\" title=\"14. 代码高亮插件&#x2F;代码编辑器\"></a>14. 代码高亮插件&#x2F;代码编辑器</h2><ul>\n<li><a href=\"https://code.google.com/p/google-code-prettify/\">google-code-prettify</a></li>\n<li><a href=\"https://highlightjs.org/\">highlight.js</a></li>\n<li><a href=\"http://craig.is/making/rainbows\">Rainbow</a></li>\n<li><a href=\"https://github.com/ajaxorg/ace\">ACE</a></li>\n<li><a href=\"https://github.com/codemirror/codemirror\">CodeMirror</a></li>\n<li><a href=\"https://github.com/aramk/crayon-syntax-highlighter\">Crayon Syntax Highlighter</a></li>\n<li><a href=\"https://github.com/PrismJS/prism\">prism - Lightweight, robust, elegant syntax highlighting.</a></li>\n</ul>\n<h2 id=\"15-UI-Icon-组件\"><a href=\"#15-UI-Icon-组件\" class=\"headerlink\" title=\"15. UI Icon 组件\"></a>15. UI Icon 组件</h2><ul>\n<li><a href=\"http://fontawesome.io/icons/\">Font Awesome</a></li>\n<li><a href=\"http://glyphter.com/\">Glyphter: The SVG Font Machine</a></li>\n<li><a href=\"http://perfecticons.com/\">Perfect Icons</a></li>\n<li><a href=\"http://iconizr.com/\">iconizr</a></li>\n<li><a href=\"http://www.bootcss.com/p/cikonss/\">Cikonss - 纯CSS实现的响应式Icon</a></li>\n<li><a href=\"https://github.com/danleech/simple-icons\">Simple Icons</a></li>\n</ul>\n<h2 id=\"16-动画-Animate\"><a href=\"#16-动画-Animate\" class=\"headerlink\" title=\"16. 动画(Animate)\"></a>16. 动画(Animate)</h2><ul>\n<li><a href=\"https://github.com/daneden/animate.css\">animate.css - A cross-browser library of CSS animations.</a></li>\n<li><a href=\"https://github.com/rstacruz/jquery.transit\">Transit - CSS transitions and transformations for jQuery</a></li>\n<li><a href=\"https://github.com/juliangarnier/anime\">anime.js - Javascript 动画引擎</a></li>\n<li><a href=\"https://github.com/matthieua/WOW\">WOW - 在滚动过程中展示CSS动画效果(默认触发animate.css动画)</a></li>\n<li><a href=\"https://github.com/anijs/anijs/\">AniJS - A Library to Raise your Web Design without Coding</a></li>\n<li><a href=\"https://github.com/visionmedia/move.js\">Move.js - 简化CSS3动画的JS库</a></li>\n<li><a href=\"https://github.com/nckprsn/scrollme\">ScrollMe – 在网页中加入各种滚动动画效果</a></li>\n<li><a href=\"https://github.com/h5bp/Effeckt.css\">Effeckt.css - A Performant Transitions and Animations Library</a></li>\n<li><a href=\"http://nec.netease.com/library/category/#animation\">NEC动画库</a></li>\n<li><a href=\"https://github.com/elrumordelaluz/csshake\">csshake - CSS classes to move your DOM</a></li>\n<li><a href=\"https://github.com/miniMAC/magic\">magic - CSS3 Animations with special effects</a></li>\n<li><a href=\"https://github.com/tobiasahlin/SpinKit\">SpinKit</a></li>\n<li><a href=\"https://github.com/julianshapiro/velocity\">Velocity.js - 加速JavaScript动画</a></li>\n<li><a href=\"https://github.com/thomasxiii/lenticular.js\">lenticular.js - 响应倾斜或鼠标事件创建图片动画</a></li>\n<li><a href=\"https://github.com/peachananr/interactive_3d\">jQuery Interactive 3D - Create a 3D interactive object using images</a></li>\n<li><a href=\"https://github.com/ramswaroop/animatescroll.js\">AnimateScroll - A Simple jQuery Plugin for Animating Scroll</a></li>\n<li><a href=\"https://github.com/julianshapiro/blast\">Blast.js - 把动画和样式注入到文本中</a></li>\n<li><a href=\"https://github.com/tictail/bounce.js\">Bounce.js - 一个用于制作漂亮 CSS3 关键帧动画的 JS 库</a></li>\n<li><a href=\"https://github.com/cmiscm/stickerjs\">Sticker.js - create a Sticker Effect</a></li>\n<li><a href=\"https://github.com/julianlloyd/scrollReveal.js\">scrollReveal.js - 元素进入可视区域自动触发设置好的动画</a></li>\n<li><a href=\"https://github.com/hakimel/stroll.js\">stroll.js - CSS3 list scroll effects</a></li>\n<li><a href=\"https://github.com/gdsmith/jquery.easing\">jQuery Easing -  动画效果扩展</a></li>\n<li><a href=\"http://www.justinaguilar.com/animations/index.html\">animations - CSS3 ANIMATION CHEAT SHEET</a></li>\n<li><a href=\"https://github.com/bitshadow/iconate\">iconate.js：将 icons 增加动画效果的 JS 库</a></li>\n<li><a href=\"https://github.com/HubSpot/odometer\">Odometer - 数字之间的垂直切换</a></li>\n<li>Hover - 悬停效果<ul>\n<li><a href=\"https://github.com/IanLunn/Hover\">Hover.css - 很多鼠标Hover态的效果</a></li>\n<li><a href=\"https://github.com/ciar4n/imagehover.css\">imagehover.css - 为图片添加悬停效果</a></li>\n<li><a href=\"https://github.com/gudh/ihover\">iHover - 图片悬停效果</a></li>\n<li><a href=\"https://github.com/hasinhayder/ImageCaptionHoverAnimation\">ImageCaptionHoverAnimation</a></li>\n<li><a href=\"http://miketricking.github.io/dist/\">Bootstrap Hover Image Gallery</a></li>\n</ul>\n</li>\n<li>Multi-touch gestures library - Web手势库<ul>\n<li><a href=\"https://github.com/AlloyTeam/AlloyFinger\">AlloyFinger - 腾讯 AlloyTeam 出品的超级小的 Web 手势库</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"17-本地存储\"><a href=\"#17-本地存储\" class=\"headerlink\" title=\"17. 本地存储\"></a>17. 本地存储</h2><ul>\n<li><a href=\"https://github.com/zendesk/cross-storage\">cross-storage - Cross domain local storage</a></li>\n<li><a href=\"https://github.com/mozilla/localForage\">localForage</a></li>\n<li><a href=\"https://github.com/pouchdb/pouchdb\">pouchdb</a></li>\n<li><a href=\"https://github.com/Wisembly/basil.js\">basil.js</a></li>\n<li><a href=\"https://github.com/ClickerMonkey/neurosync\">Neurosync - JavaScript 本地离线 ORM 库</a></li>\n<li><a href=\"https://github.com/techfort/LokiJS\">LokiJS - 性能优先的 JavaScript 内存数据库</a></li>\n<li><a href=\"https://github.com/turbolinks/turbolinks\">turbolinks - Javascript pushState</a></li>\n</ul>\n<h2 id=\"18-模板引擎\"><a href=\"#18-模板引擎\" class=\"headerlink\" title=\"18. 模板引擎\"></a>18. 模板引擎</h2><ul>\n<li><a href=\"https://github.com/olado/doT\">doT.js</a></li>\n<li><a href=\"https://github.com/janl/mustache.js\">mustache.js</a></li>\n<li><a href=\"http://www.jingwentian.com/t-66\">Handlebars.js</a></li>\n<li><a href=\"https://github.com/aui/artTemplate\">artTemplate</a></li>\n<li><a href=\"https://github.com/wangxiao/BaiduTemplate\">baiduTemplate</a></li>\n<li><a href=\"https://github.com/BorisMoore/jsrender\">JSRender</a></li>\n<li><a href=\"https://github.com/tj/ejs\">EJS - JavaScript Templates</a></li>\n<li><a href=\"https://github.com/PaulGuo/Juicer\">Juicer - A Light Javascript Templete Engine.</a></li>\n<li><a href=\"https://github.com/twigkit/tempo\">Tempo</a></li>\n<li><a href=\"https://github.com/moappi/json2html\">json2html</a></li>\n<li><a href=\"https://github.com/twitter/hogan.js\">Hogan.js - JavaScript templating from Twitter.</a></li>\n<li><a href=\"https://github.com/linkedin/dustjs\">Dust.js - Linkedin维护的项目</a></li>\n</ul>\n<h2 id=\"19-通知组件-x2F-弹框组件-x2F-模态窗口\"><a href=\"#19-通知组件-x2F-弹框组件-x2F-模态窗口\" class=\"headerlink\" title=\"19. 通知组件&#x2F;弹框组件&#x2F;模态窗口\"></a>19. 通知组件&#x2F;弹框组件&#x2F;模态窗口</h2><ul>\n<li><a href=\"https://github.com/alexgibson/notify.js\">Notify.js(Web Notifications API)</a></li>\n<li><a href=\"https://github.com/fabien-d/alertify.js\">alertify.js</a></li>\n<li><a href=\"https://github.com/MohammadYounes/AlertifyJS\">AlertifyJS</a></li>\n<li><a href=\"https://github.com/t4t5/sweetalert\">SweetAlert</a></li>\n<li><a href=\"https://github.com/HubSpot/messenger\">Messenger - 非常酷的弹框组件</a></li>\n<li><a href=\"https://github.com/sciactive/pnotify\">PNotify</a></li>\n<li><a href=\"https://github.com/jpillora/notifyjs\">Notify.js - A simple, versatile notification library</a></li>\n<li><a href=\"https://github.com/VodkaBears/Remodal\">Remodal - 模态窗口插件</a></li>\n<li><a href=\"https://github.com/egoist/action.js\">action.js - 极简的tip和Modal弹窗效果</a></li>\n<li><a href=\"https://github.com/humaan/Modaal\">Modaal - 一个创建弹出窗口的jQuery插件</a></li>\n<li><a href=\"https://github.com/hubspot/vex\">Vex - 可以实现3D动效的弹出对话框堆叠效果</a></li>\n</ul>\n<h2 id=\"20-提示控件-Tooltips\"><a href=\"#20-提示控件-Tooltips\" class=\"headerlink\" title=\"20. 提示控件(Tooltips)\"></a>20. 提示控件(Tooltips)</h2><ul>\n<li><a href=\"https://github.com/chinchang/hint.css\">hint.css - 一款非常小巧的提示框效果</a></li>\n<li><a href=\"https://github.com/qTip2/qTip2\">qTip2 - Pretty powerful tooltips</a></li>\n<li><a href=\"https://github.com/HubSpot/tooltip\">tooltip - CSS Tooltips</a></li>\n<li><a href=\"https://github.com/iamceege/tooltipster\">tooltipster - A jQuery tooltip plugin</a></li>\n<li><a href=\"https://github.com/jamescryer/grumble.js\">grumble.js - 气泡形状的提示（Tooltip）控件</a></li>\n<li><a href=\"https://github.com/carlsednaoui/ouibounce\">Ouibounce - 离站提示控件</a></li>\n<li><a href=\"https://github.com/usablica/intro.js\">intro.js - 一个创建引导式网站介绍功能的 JS 库</a></li>\n<li><a href=\"https://github.com/egoist/data-tip.css\">data-tip.css - 纯 CSS 实现的工具提示</a></li>\n</ul>\n<h2 id=\"21-对话框-x2F-遮罩层-x2F-弹出层-lightbox\"><a href=\"#21-对话框-x2F-遮罩层-x2F-弹出层-lightbox\" class=\"headerlink\" title=\"21. 对话框&#x2F;遮罩层&#x2F;弹出层(lightbox)\"></a>21. 对话框&#x2F;遮罩层&#x2F;弹出层(lightbox)</h2><ul>\n<li><a href=\"https://github.com/fancyapps/fancyBox\">fancyBox - Fancy jQuery lightbox</a></li>\n<li><a href=\"https://github.com/krewenki/jquery-lightbox\">jquery-lightbox - The popular lightbox script, ported to jQuery</a></li>\n<li><a href=\"https://github.com/jackmoore/colorbox\">Colorbox - a jQuery lightbox</a></li>\n<li><a href=\"https://github.com/aui/artDialog\">artDialog - 经典的网页对话框组件</a></li>\n<li><a href=\"https://github.com/codrops/DialogEffects\">DialogEffects</a></li>\n<li><a href=\"https://github.com/malsup/blockui/\">jQuery blockUI - Page or element overlay</a></li>\n<li><a href=\"https://github.com/sentsin/layer/\">layer - web弹出窗&#x2F;层</a></li>\n</ul>\n<h2 id=\"22-文档-x2F-表格-x2F-PDF\"><a href=\"#22-文档-x2F-表格-x2F-PDF\" class=\"headerlink\" title=\"22. 文档&#x2F;表格&#x2F;PDF\"></a>22. 文档&#x2F;表格&#x2F;PDF</h2><ul>\n<li><a href=\"https://github.com/wyuenho/backgrid\">Backgrid.js - 强大的表格组件</a></li>\n<li><a href=\"https://github.com/handsontable/handsontable\">handsontable - 在线可编辑excel表格</a></li>\n<li><a href=\"https://github.com/rstaib/jquery-bootgrid\">jQuery Bootgrid - 用于ajax生成动态表格</a></li>\n<li><a href=\"https://github.com/DataTables/DataTables\">DataTables - Table plug-in for jQuery</a></li>\n<li><a href=\"https://github.com/mozilla/pdf.js\">PDF.js - 一个 JavaScript 编写的 PDF 阅读器</a></li>\n<li><a href=\"https://github.com/MrRio/jsPDF\">jsPDF - Generate PDF files in JavaScript</a></li>\n<li><a href=\"https://github.com/okfn/recline/\">Recline.js - 灵活操作和展示数据</a></li>\n<li><a href=\"https://github.com/alfajango/jquery-dynatable\">Dynatable - 交互式表格插件</a></li>\n<li><a href=\"https://github.com/fulmicoton/fattable\">fattable - 创建无限滚动无限行列数的表格</a></li>\n<li><a href=\"https://github.com/NeXTs/Clusterize.js\">Clusterize.js - 一个轻松显示大数据集的 JS 插件</a></li>\n<li><a href=\"https://github.com/AudithSoftworks/Uniform\">Uniform -表单美化插件</a></li>\n</ul>\n<h2 id=\"23-目录树插件\"><a href=\"#23-目录树插件\" class=\"headerlink\" title=\"23. 目录树插件\"></a>23. 目录树插件</h2><ul>\n<li><a href=\"https://github.com/zTree/zTree_v3\">zTree_v3 - jQuery Tree Plugin</a></li>\n<li><a href=\"https://github.com/vakata/jstree\">jstree - jQuery Tree Plugin</a></li>\n<li><a href=\"https://github.com/mar10/fancytree\">fancytree - Tree plugin for jQuery</a></li>\n</ul>\n<h2 id=\"24-前后端交互\"><a href=\"#24-前后端交互\" class=\"headerlink\" title=\"24. 前后端交互\"></a>24. 前后端交互</h2><h3 id=\"24-1-Ajax模块\"><a href=\"#24-1-Ajax模块\" class=\"headerlink\" title=\"24.1 Ajax模块\"></a>24.1 Ajax模块</h3><ul>\n<li><a href=\"https://github.com/github/fetch\">fetch - A window.fetch JavaScript polyfill</a></li>\n<li><a href=\"https://github.com/ded/reqwest\">reqwest - browser asynchronous http requests</a></li>\n<li><a href=\"https://github.com/ForbesLindesay/ajax\">ajax - Standalone AJAX library</a></li>\n<li><a href=\"https://github.com/then/then-request\">then-request</a></li>\n<li><a href=\"https://github.com/iriscouch/browser-request\">browser-request</a></li>\n<li><a href=\"https://github.com/visionmedia/superagent\">superagent</a></li>\n<li><a href=\"https://github.com/argunner/minAjax.js/\">minAjax.js</a></li>\n<li><a href=\"https://github.com/pyrsmk/qwest\">qwest - 第三方的Ajax库</a></li>\n<li><a href=\"https://github.com/mzabriskie/axios\">axios - Promise based HTTP client for the browser and node.js</a></li>\n<li><a href=\"https://github.com/fis-components/whatwg-fetch\">whatwg-fetch</a></li>\n</ul>\n<h3 id=\"24-2-SSE-Server-Sent-Events\"><a href=\"#24-2-SSE-Server-Sent-Events\" class=\"headerlink\" title=\"24.2 SSE (Server-Sent Events)\"></a>24.2 SSE (Server-Sent Events)</h3><blockquote>\n<p>SSE API用于创建到服务器的单向连接，服务器通过这个连接可以发送任意数量的数据.</p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/Yaffle/EventSource\">EventSource</a></li>\n</ul>\n<h3 id=\"24-3-Web-Sockets\"><a href=\"#24-3-Web-Sockets\" class=\"headerlink\" title=\"24.3 Web Sockets\"></a>24.3 Web Sockets</h3><h2 id=\"25-音频-x2F-视频\"><a href=\"#25-音频-x2F-视频\" class=\"headerlink\" title=\"25. 音频&#x2F;视频\"></a>25. 音频&#x2F;视频</h2><ul>\n<li><a href=\"https://github.com/happyworm/jPlayer\">jPlayer -  HTML5 Audio &amp; Video for jQuery</a></li>\n<li><a href=\"https://github.com/videojs/video.js\">video.js - HTML5 &amp; Flash video player</a></li>\n<li><a href=\"https://github.com/paypal/accessible-html5-video-player\">Accessible HTML5 Video Player - PayPal 开源的 HTML5 视频播放器</a></li>\n<li><a href=\"https://github.com/clappr/clappr\">Clappr - 开源的Web视频播放器</a></li>\n<li><a href=\"https://github.com/selz/plyr\">Plyr - A simple HTML5 media player</a></li>\n<li><a href=\"https://github.com/davatron5000/FitVids.js\">FitVids.js - A lightweight, easy-to-use jQuery plugin for fluid width video embeds.</a></li>\n<li><a href=\"https://github.com/dfcb/BigVideo.js\">BigVideo.js - The jQuery Plugin for Big Background Video</a></li>\n<li><a href=\"https://github.com/bdougherty/BigScreen\">BigScreen - A simple library for using the JavaScript Full Screen API</a></li>\n<li><a href=\"https://github.com/VodkaBears/Vide\">Vide - 视频背景</a></li>\n<li><a href=\"https://github.com/captbaritone/winamp2-js\">winamp2-js</a></li>\n<li><a href=\"https://github.com/jaysalvat/buzz\">Buzz - A Javascript HTML5 Audio library</a></li>\n<li><a href=\"http://github.com/johndyer/mediaelement/\">MediaElement.js</a></li>\n</ul>\n<h2 id=\"26-按钮\"><a href=\"#26-按钮\" class=\"headerlink\" title=\"26. 按钮\"></a>26. 按钮</h2><ul>\n<li><a href=\"https://github.com/alexwolfe/Buttons\">Buttons - A CSS button library</a></li>\n<li><a href=\"https://github.com/codrops/ButtonComponentMorph\">ButtonComponentMorph</a></li>\n<li><a href=\"https://github.com/codrops/ProgressButtonStyles\">ProgressButtonStyles</a></li>\n<li><a href=\"https://github.com/codrops/CreativeButtons\">CreativeButtons</a></li>\n<li><a href=\"https://github.com/ubuwaits/css3-buttons\">CSS3 buttons</a></li>\n<li><a href=\"https://github.com/timmywil/jquery.onoff\">jquery.onoff - Interactive, accessible toggle switches for the web.</a></li>\n<li><a href=\"https://github.com/hakimel/css/tree/master/flipside\">Flipside - 一个能过渡到对话框的按钮</a></li>\n</ul>\n<h2 id=\"27-富文本编辑器-x2F-Markdown编辑器-x2F-Markdown解析器\"><a href=\"#27-富文本编辑器-x2F-Markdown编辑器-x2F-Markdown解析器\" class=\"headerlink\" title=\"27. 富文本编辑器&#x2F;Markdown编辑器&#x2F;Markdown解析器\"></a>27. 富文本编辑器&#x2F;Markdown编辑器&#x2F;Markdown解析器</h2><ul>\n<li><a href=\"https://github.com/mycolorway/simditor\">Simditor - 简单快速的富文本编辑器</a></li>\n<li><a href=\"https://github.com/Integ/BachEditor\">BachEditor - 一个有情怀的编辑器</a></li>\n<li><a href=\"https://github.com/tinymce/tinymce\">TinyMCE</a></li>\n<li><a href=\"https://github.com/toopay/bootstrap-markdown\">bootstrap-markdown</a></li>\n<li><a href=\"https://github.com/chjj/marked\">marked - markdown解析器</a></li>\n<li><a href=\"https://github.com/tylingsoft/markdown-plus\">Markdown Plus</a></li>\n<li><a href=\"https://github.com/pandao/editor.md\">Editor.md - 开源在线Markdown编辑器</a></li>\n<li><a href=\"https://github.com/benweet/stackedit\">stackedit</a></li>\n<li><a href=\"http://imperavi.com/redactor/\">Redactor Text Editor</a></li>\n<li><a href=\"https://github.com/simonwaldherr/micromarkdown.js/\">micromarkdown.js - 轻量级的md解析器</a></li>\n<li><a href=\"https://github.com/wangfupeng1988/wangEditor\">wangEditor - 支持移动端的轻量级web富文本框</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor-dev\">CKEditor - 可视化 HTML 编辑器</a></li>\n<li><a href=\"https://github.com/quilljs/quill\">Quill - 富文本编辑器</a></li>\n</ul>\n<h2 id=\"28-内容提取-Readability\"><a href=\"#28-内容提取-Readability\" class=\"headerlink\" title=\"28. 内容提取(Readability)\"></a>28. 内容提取(Readability)</h2><ul>\n<li><a href=\"https://code.google.com/p/arc90labs-readability/\">Readability</a></li>\n<li><a href=\"https://github.com/marianoguerra/json.human.js\">json.human.js - Json Formatting for Human Beings</a></li>\n</ul>\n<h2 id=\"29-颜色-CSS-Colors-x2F-SVG-x2F-Canvas\"><a href=\"#29-颜色-CSS-Colors-x2F-SVG-x2F-Canvas\" class=\"headerlink\" title=\"29. 颜色(CSS Colors)&#x2F;SVG&#x2F;Canvas\"></a>29. 颜色(CSS Colors)&#x2F;SVG&#x2F;Canvas</h2><ul>\n<li><a href=\"http://colours.neilorangepeel.com/\">CSS Colours</a></li>\n<li><a href=\"http://www.svgeneration.com/\">SVGeneration</a></li>\n<li><a href=\"https://github.com/dirkgroenen/SVGMagic\">SVGMagic - 自动的创建PNG来兼容不支持SVG的浏览器</a></li>\n<li><a href=\"https://github.com/briangonzalez/jquery.adaptive-backgrounds.js\">Adaptive Backgrounds - 从图片抽取主要颜色和应用到父元素</a></li>\n<li><a href=\"https://github.com/themadcreator/seen\">Seen.js - 渲染3D场景为SVG或者HTML Canvas</a></li>\n<li><a href=\"https://github.com/jquery/jquery-color/\">jquery-color - 可以动态改动颜色</a></li>\n</ul>\n<h2 id=\"30-选项卡-Tabs\"><a href=\"#30-选项卡-Tabs\" class=\"headerlink\" title=\"30. 选项卡(Tabs)\"></a>30. 选项卡(Tabs)</h2><ul>\n<li><a href=\"https://github.com/samsono/Easy-Responsive-Tabs-to-Accordion\">Easy Responsive Tabs to Accordion</a></li>\n<li><a href=\"https://github.com/jellekralt/Responsive-Tabs\">Responsive-Tabs</a></li>\n<li><a href=\"https://github.com/IonDen/ion.tabs\">ion.tabs - jQuery tabs plugin</a></li>\n<li><a href=\"https://github.com/JangoSteve/jQuery-EasyTabs\">jQuery-EasyTabs</a></li>\n<li><a href=\"https://github.com/aarondo/tabulous.js\">tabulous.js</a></li>\n</ul>\n<h2 id=\"31-文本处理\"><a href=\"#31-文本处理\" class=\"headerlink\" title=\"31. 文本处理\"></a>31. 文本处理</h2><ul>\n<li><a href=\"https://github.com/zeroclipboard/zeroclipboard\">ZeroClipboard - 文本复制插件</a></li>\n<li><a href=\"https://github.com/zenorocha/clipboard.js/\">clipboard.js</a></li>\n<li><a href=\"https://github.com/lemonmade/bigfoot\">Bigfoot - 点击文章中的脚注弹窗显示</a></li>\n<li><a href=\"https://github.com/openannotation/annotator\">Annotator - 文本注解插件，可以包括注释、标签、用户等</a></li>\n<li><a href=\"https://github.com/micjamking/Succinct\">Succinct - 用作截断多行文本,后面添加省略号</a></li>\n<li><a href=\"https://github.com/simplefocus/FlowType.JS\">Flowtype.js - 自动调整字体大小和行号</a></li>\n<li><a href=\"https://github.com/peachananr/flat-shadow\">flat-shadow</a></li>\n<li><a href=\"https://github.com/davatron5000/FitText.js\">FitText - A jQuery plugin for inflating web type</a></li>\n<li><a href=\"https://github.com/bigspaceship/shine.js\">shine.js - 实现漂亮阴影</a></li>\n<li><a href=\"https://github.com/bramstein/trmix/\">Type Rendering Mix - 文本渲染引擎</a></li>\n<li><a href=\"https://github.com/kswedberg/jquery-expander\">jquery-expander - 阅读更多</a></li>\n<li><a href=\"https://github.com/mattboldt/typed.js/\">Typed.js - 输入模拟插件</a></li>\n<li><a href=\"https://github.com/FrDH/jQuery.dotdotdot\">jQuery.dotdotdot - 多行文本溢出显示省略号</a></li>\n<li><a href=\"https://github.com/camwiegert/baffle\">baffle.js - 文本互动效果</a></li>\n</ul>\n<h2 id=\"32-布局-Layout\"><a href=\"#32-布局-Layout\" class=\"headerlink\" title=\"32. 布局(Layout)\"></a>32. 布局(Layout)</h2><ul>\n<li>分隔面板(Split Panel)<ul>\n<li><a href=\"https://github.com/shagstrom/split-pane\">split-pane</a></li>\n<li><a href=\"http://layout.jquery-dev.com/\">jQuery UI Layout</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"33-演示-x2F-幻灯片\"><a href=\"#33-演示-x2F-幻灯片\" class=\"headerlink\" title=\"33. 演示&#x2F;幻灯片\"></a>33. 演示&#x2F;幻灯片</h2><ul>\n<li><a href=\"https://github.com/hakimel/reveal.js\">reveal.js - The HTML Presentation Framework</a></li>\n<li><a href=\"https://github.com/markdalgleish/bespoke.js\">bespoke.js - DIY Presentation Micro-Framework</a></li>\n<li><a href=\"https://github.com/bartaz/impress.js\">impress.js</a></li>\n<li><a href=\"https://github.com/shower/shower\">shower</a></li>\n<li><a href=\"https://github.com/imakewebthings/deck.js\">deck.js</a></li>\n</ul>\n<h2 id=\"34-国际化-i18n\"><a href=\"#34-国际化-i18n\" class=\"headerlink\" title=\"34. 国际化(i18n)\"></a>34. 国际化(i18n)</h2><ul>\n<li><a href=\"https://github.com/recurser/jquery-i18n\">jquery-i18n</a></li>\n<li><a href=\"https://github.com/i18next/i18next\">i18next.js</a></li>\n<li><a href=\"https://github.com/jpjoyal/jsperanto\">jsperanto.js</a></li>\n<li><a href=\"https://github.com/SlexAxton/Jed\">jed.js</a></li>\n<li><a href=\"https://github.com/SlexAxton/messageformat.js\">messageformat.js</a></li>\n<li><a href=\"https://github.com/airbnb/polyglot.js\">Polyglot.js</a></li>\n</ul>\n<h2 id=\"35-邮件模板-Email-Templates\"><a href=\"#35-邮件模板-Email-Templates\" class=\"headerlink\" title=\"35. 邮件模板(Email Templates)\"></a>35. 邮件模板(Email Templates)</h2><ul>\n<li><a href=\"https://github.com/leemunroe/responsive-html-email-template\">responsive-html-email-template</a></li>\n</ul>\n<h2 id=\"36-移动端优化-Optimizing-Mobile-Performance\"><a href=\"#36-移动端优化-Optimizing-Mobile-Performance\" class=\"headerlink\" title=\"36. 移动端优化(Optimizing Mobile Performance)\"></a>36. 移动端优化(Optimizing Mobile Performance)</h2><ul>\n<li><a href=\"https://github.com/ftlabs/fastclick\">FastClick - 处理移动端 click 事件 300 毫秒延迟</a></li>\n<li><a href=\"https://github.com/filamentgroup/tappy/\">tappy</a></li>\n<li><a href=\"https://github.com/dave1010/jquery-fast-click\">jquery-fast-click</a></li>\n</ul>\n<h2 id=\"37-HTTP请求相关\"><a href=\"#37-HTTP请求相关\" class=\"headerlink\" title=\"37. HTTP请求相关\"></a>37. HTTP请求相关</h2><ul>\n<li><a href=\"https://github.com/nodeca/pako\">pako - HTTP 请求正文压缩</a><ul>\n<li><a href=\"https://imququ.com/post/how-to-compress-http-request-body.html\">参考阅读: 如何压缩 HTTP 请求正文</a></li>\n<li><a href=\"https://qgy18.com/request-compress/\">HTTP 请求正文压缩 DEMO</a></li>\n</ul>\n</li>\n<li><a href=\"http://www.ohdave.com/rsa/\">RSA in JavaScript - 用RSA加密实现Web数据加密传输</a></li>\n</ul>\n<h2 id=\"38-下载组件\"><a href=\"#38-下载组件\" class=\"headerlink\" title=\"38. 下载组件\"></a>38. 下载组件</h2><ul>\n<li><a href=\"https://github.com/rndme/download\">download</a></li>\n<li><a href=\"https://github.com/dcneiner/Downloadify\">Downloadify</a></li>\n</ul>\n<h2 id=\"39-实用工具-x2F-其他插件\"><a href=\"#39-实用工具-x2F-其他插件\" class=\"headerlink\" title=\"39. 实用工具&#x2F;其他插件\"></a>39. 实用工具&#x2F;其他插件</h2><ul>\n<li><a href=\"https://github.com/carhartl/jquery-cookie\">jquery-cookie</a></li>\n<li><a href=\"https://github.com/js-cookie/js-cookie\">JavaScript Cookie</a></li>\n<li><a href=\"https://github.com/dieulot/instantclick/\">InstantClick - 预加载用户可能会点击的一些链接</a></li>\n<li><a href=\"https://github.com/caolan/async\">Async.js - 异步操作</a></li>\n<li><a href=\"https://github.com/niklasvh/html2canvas\">html2canvas - 实现纯JS网页截图</a></li>\n<li><a href=\"https://github.com/jeromeetienne/jquery-qrcode\">jquery.qrcode.js - 生成二维码的 jQuery 插件</a></li>\n<li><a href=\"https://github.com/davidshimjs/qrcodejs\">qrcodejs - JS生成QRCode的库</a></li>\n<li><a href=\"https://github.com/platform45/nakedpassword\">nakedpassword - 用脱衣女帮助检测密码强度</a></li>\n<li><a href=\"https://github.com/fex-team/kityminder\">KityMinder - 脑图编辑工具</a></li>\n<li><a href=\"https://github.com/patrickkunka/mixitup\">MixitUp - 动画过滤和排序</a></li>\n<li><a href=\"https://github.com/peachananr/tip_cards\">JQuery Tip Cards - 创建卡片交互的cards布局</a></li>\n<li><a href=\"https://github.com/dolox/fallback/\">Fallback.js - JavaScript library for dynamically loading CSS and JS files.</a></li>\n<li><a href=\"https://github.com/swfobject/swfobject\">swfobject</a></li>\n<li><a href=\"https://github.com/padolsey-archive/prettyprint.js\">prettyprint.js - An in-browser JavaScript variable dumper</a></li>\n<li><a href=\"https://github.com/HubSpot/shepherd\">Shepherd - 为应用创建用户指南</a></li>\n<li><a href=\"https://github.com/mark-rolich/RulersGuides.js\">RulersGuide.js - 类似PhotoShop标尺的js库</a></li>\n<li><a href=\"https://github.com/marmelab/gremlins.js\">Gremlins.js - Monkey 测试库</a></li>\n<li><a href=\"https://github.com/ndreckshage/roughdraft.js/\">RoughDraft.js - 简单快速的创建交互式的 HTML 模型的原型工具</a></li>\n<li><a href=\"https://github.com/ejci/favico.js\">favico.js - 动态改变浏览器标签栏中的网站图标</a></li>\n<li><a href=\"https://github.com/tracelytics/pageguide\">pageguide - 网页向导</a></li>\n<li><a href=\"https://github.com/kpdecker/jsdiff\">jsdiff - js diff 算法</a></li>\n</ul>\n<h1 id=\"ES6-ECMAScript-2015\"><a href=\"#ES6-ECMAScript-2015\" class=\"headerlink\" title=\"ES6( ECMAScript 2015 )\"></a>ES6( ECMAScript 2015 )</h1><h2 id=\"ES6转码器-ES6-to-ES5\"><a href=\"#ES6转码器-ES6-to-ES5\" class=\"headerlink\" title=\"ES6转码器(ES6 to ES5)\"></a>ES6转码器(ES6 to ES5)</h2><ul>\n<li><a href=\"https://github.com/babel/babel/\">Babel</a> - 一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行</li>\n<li><a href=\"https://github.com/babel/babelify\">babelify</a> - 将babel引入到Gulp, Grunt, npm run等构建过程</li>\n<li><a href=\"https://github.com/google/traceur-compiler\">traceur-compiler</a> - Traceur is a JavaScript.next-to-JavaScript-of-today compiler</li>\n</ul>\n<h2 id=\"ES6入门\"><a href=\"#ES6入门\" class=\"headerlink\" title=\"ES6入门\"></a>ES6入门</h2><ul>\n<li><a href=\"http://es6.ruanyifeng.com/\">ECMAScript 6入门</a> - 阮一峰老师的开源的JavaScript语言教程</li>\n<li><a href=\"https://babeljs.io/docs/learn-es2015/\">Learn ES2015</a></li>\n<li><a href=\"http://es6-features.org/\">ES6 - New features Overview &amp; Comparison</a></li>\n<li><a href=\"https://ponyfoo.com/articles/es6\">ES6 Overview in 350 Bullet Points</a></li>\n<li><a href=\"https://github.com/lukehoban/es6features\">es6features</a></li>\n</ul>\n<h1 id=\"设计模式-JavaScript-Patterns\"><a href=\"#设计模式-JavaScript-Patterns\" class=\"headerlink\" title=\"设计模式( JavaScript Patterns )\"></a>设计模式( JavaScript Patterns )</h1><ul>\n<li><a href=\"https://github.com/shichuan/javascript-patterns\">javascript-patterns</a></li>\n<li><a href=\"https://github.com/jquery-boilerplate/jquery-patterns\">jquery-patterns - A variety of jQuery plugin patterns</a></li>\n<li><a href=\"http://addyosmani.com/resources/essentialjsdesignpatterns/book/\">Learning JavaScript Design Patterns</a></li>\n</ul>\n<h1 id=\"在线工具-Online-Tools\"><a href=\"#在线工具-Online-Tools\" class=\"headerlink\" title=\"在线工具( Online Tools )\"></a>在线工具( Online Tools )</h1><ul>\n<li><a href=\"http://jsbin.com/\">jsbin - Collaborative JavaScript Debugging App</a><ul>\n<li><a href=\"https://github.com/jsbin/jsbin\">jsbin@Github</a></li>\n</ul>\n</li>\n<li><a href=\"http://jsfiddle.net/\">jsfiddle</a></li>\n<li><a href=\"http://jsbeautifier.org/\">jsbeautifier - Online JavaScript beautifier</a></li>\n<li><a href=\"http://resume.github.io/\">resume.github.com</a></li>\n</ul>\n<h1 id=\"前端开发工具\"><a href=\"#前端开发工具\" class=\"headerlink\" title=\"前端开发工具\"></a>前端开发工具</h1><h2 id=\"1-开发工具\"><a href=\"#1-开发工具\" class=\"headerlink\" title=\"1. 开发工具\"></a>1. 开发工具</h2><ul>\n<li><a href=\"http://www.sublimetext.com/\">Sublime Text</a></li>\n</ul>\n<h2 id=\"2-调试工具\"><a href=\"#2-调试工具\" class=\"headerlink\" title=\"2. 调试工具\"></a>2. 调试工具</h2><ul>\n<li><a href=\"http://www.telerik.com/fiddler\">Fiddler</a></li>\n<li><a href=\"http://people.apache.org/~pmuellr/weinre-docs/latest/Home.html\">Weinre</a></li>\n<li><a href=\"http://www.alloyteam.com/2012/05/web-front-end-tool-rythem-1/\">Rythem</a></li>\n<li><a href=\"https://github.com/zmoazeni/csscss\">csscss - 用于检查css代码冗余</a></li>\n<li><a href=\"http://fecs.baidu.com/\">FECS - 基于 Node.js 的前端代码检查工具</a></li>\n<li><a href=\"https://github.com/typicode/json-server\">JSON Server - 模拟 API</a></li>\n<li><a href=\"https://github.com/swagger-api/swagger-ui\">swagger-ui - 基于REST的API测试&#x2F;文档</a></li>\n</ul>\n<h2 id=\"3-模拟数据-Fake\"><a href=\"#3-模拟数据-Fake\" class=\"headerlink\" title=\"3. 模拟数据( Fake )\"></a>3. 模拟数据( Fake )</h2><ul>\n<li><a href=\"http://jsonplaceholder.typicode.com/\">JSONPlaceholder</a></li>\n<li><a href=\"https://github.com/typicode/json-server\">json-server - Get a full fake REST API</a></li>\n<li><a href=\"https://github.com/typicode/lowdb\">lowdb -  A small local JSON database powered by lodash</a></li>\n</ul>\n<h2 id=\"4-浏览器扩展-Chrome-Extensions\"><a href=\"#4-浏览器扩展-Chrome-Extensions\" class=\"headerlink\" title=\"4. 浏览器扩展(Chrome Extensions)\"></a>4. 浏览器扩展(Chrome Extensions)</h2><ul>\n<li><a href=\"https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm\">Postman - REST Client</a></li>\n<li><a href=\"http://welefen.github.io/Fiddler/\">Fiddler - Fiddler for Chrome Extension</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/web%E5%89%8D%E7%AB%AF%E5%8A%A9%E6%89%8Bfehelper/pkgccpejnmalmdinmhkkfafefagiiiad\">WEB前端助手(FeHelper)</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm\">Web Developer</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/chrome-logger/noaneddfkdjfnfdakjjmocngnfkfehhd\">Chrome Logger</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp\">ColorZilla</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg?hl=en\">ColorPick Eyedropper</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/code-cola/lomkpheldlbkkfiifcbfifipaofnmnkn\">Code Cola</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/1px/gebccnmciopflhcdihopmphapifkkfdh\">1px</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/alloydesigner/ojooeaohlmgpcjajikhmibcnbebfenid\">AlloyDesigner - 前端重构开发辅助工具</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/fontface-ninja/eljapbgkmlngdpckoiiibecpemleclhh\">Fontface Ninja</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/pagespeed-insights-by-goo/gplegfbjlmmehdoakndmohflojccocli\">PageSpeed Insights (by Google)</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/http-status/cknfnacbckhfpjahnmkblajcpledpfnp/related\">HTTP Status</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/redirect-path/aomidfkchockcldhbkggjokdkkebmdll/related\">Redirect Path</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/responsive-web-design-tes/objclahbaimlfnbjdeobicmmlnbhamkg?hl=en\">Responsive Web Design Tester</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh?hl=en\">Window Resizer</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce?hl=en\">CSSViewer</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd?hl=en\">IE Tab</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?hl=en\">Clear Cache</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn/related?hl=en\">JSONView</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/image-downloader/cnpniohnfphhjihaiiggeabnkjhpaldj\">Image Downloader</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/pretty-beautiful-javascri/piekbefgpgdecckjcpffhnacjflfoddg/related?utm_source=chrome-ntp-icon\">Pretty Beautiful Javascript - 可以自动格式化混淆的js文件</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/javascript-errors-notifie/jafmfknfnkoekkdocjiaipcnmkklaajd?utm_source=chrome-ntp-icon\">JavaScript Errors Notifier</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/css-diff/pefnhibkhcfooofgmgoipfpcojnhhljm/related\">CSS Diff - 在线比对页面上两个元素的CSS样式差异</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm\">WhatFont- 识别网页所使用的字体</a></li>\n</ul>\n<h1 id=\"前端参考集\"><a href=\"#前端参考集\" class=\"headerlink\" title=\"前端参考集\"></a>前端参考集</h1><ul>\n<li><a href=\"https://github.com/bendc/frontend-guidelines\">frontend-guidelines - Some HTML, CSS and JS best practices.</a></li>\n<li><a href=\"https://github.com/dypsilon/frontend-dev-bookmarks\">frontend-dev-bookmarks</a></li>\n<li><a href=\"https://github.com/codrops\">Codrops - Useful resources</a></li>\n<li><a href=\"http://isobar-idev.github.io/code-standards/\">Front-end Code Standards &amp; Best Practices</a></li>\n<li><a href=\"https://github.com/dypsilon/frontend-dev-bookmarks\">frontend-dev-bookmarks</a></li>\n<li><a href=\"https://github.com/wwsun/awesome-javascript\">awesome-javascript</a></li>\n<li><a href=\"https://github.com/nicejade/Front-end-tutorial\">Front-end-tutorial - 前端涉及的所有知识体系</a></li>\n<li><a href=\"https://github.com/vuejs/awesome-vue\">awesome-vue</a></li>\n<li>前端编码规范( Standard Style ) <ul>\n<li><a href=\"https://github.com/airbnb/javascript\">Airbnb 的 JavaScript 编码规范</a></li>\n<li><a href=\"https://github.com/feross/standard\">JavaScript Standard Style</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>from <a href=\"https://github.com/JingwenTian\">github.com&#x2F;JingwenTian</a></p>\n","site":{"data":{}},"length":14478,"excerpt":"<blockquote>\n<p>搭建web app常用的样式&#x2F;组件等收集列表(移动优先)</p>\n</blockquote>","more":"<h2 id=\"0-前端自动化-Workflow\"><a href=\"#0-前端自动化-Workflow\" class=\"headerlink\" title=\"0. 前端自动化(Workflow)\"></a>0. 前端自动化(Workflow)</h2><ul>\n<li>前端构建工具<ul>\n<li><a href=\"https://github.com/webpack/webpack\">Webpack - module bundler</a></li>\n<li><a href=\"https://github.com/yeoman/yeoman\">Yeoman - a set of tools for automating development workflow</a> </li>\n<li><a href=\"http://gulpjs.com/\">gulp - The streaming build system</a> <ul>\n<li><a href=\"https://github.com/Platform-CUF/use-gulp\">use-gulp</a></li>\n</ul>\n</li>\n<li><a href=\"http://gruntjs.com/\">grunt - the JavaScript Task Runner</a></li>\n<li><a href=\"https://github.com/fex-team/fis\">F.I.S - 前端集成解决方案</a></li>\n<li><a href=\"https://github.com/google/web-starter-kit\">Web Starter Kit - 一个Google 提供的帮助开发者快速设置项目的工具集</a></li>\n</ul>\n</li>\n<li>前端模块管理器<ul>\n<li><a href=\"http://bower.io/\">Bower - A package manager for the web</a></li>\n<li><a href=\"http://browserify.org/\">Browserify</a></li>\n<li><a href=\"https://github.com/componentjs/component\">Component</a></li>\n<li><a href=\"http://duojs.org/\">Duo</a></li>\n<li><a href=\"http://requirejs.org/\">RequireJS</a></li>\n<li><a href=\"http://seajs.org/\">Sea.js</a></li>\n<li><a href=\"https://github.com/getify/LABjs\">LABjs - 文件加载器</a></li>\n<li><a href=\"https://github.com/css-modules/css-modulesify\">css-modulesify - CSS模块加载器</a></li>\n</ul>\n</li>\n<li>css预处理器<ul>\n<li><a href=\"http://lesscss.org/\">Less - Less is More , Than CSS</a> </li>\n<li><a href=\"http://sass-lang.com/\">Sass - Syntactically Awesome Style Sheets</a></li>\n<li><a href=\"http://learnboost.github.io/stylus/\">Stylus - Expressive, dynamic, robust CSS</a></li>\n</ul>\n</li>\n<li>前端性能分析工具<ul>\n<li><a href=\"https://github.com/macbre/analyze-css\">analyze-css - CSS 选择器的复杂度和性能分析器</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-前端框架-Frameworks\"><a href=\"#1-前端框架-Frameworks\" class=\"headerlink\" title=\"1. 前端框架(Frameworks)\"></a>1. 前端框架(Frameworks)</h2><ul>\n<li><a href=\"https://github.com/twbs/bootstrap\">Bootstrap</a></li>\n<li><a href=\"https://github.com/zurb/foundation\">Foundation</a></li>\n<li><a href=\"http://amazeui.org/\">Amaze UI</a></li>\n<li><a href=\"https://github.com/semantic-org/semantic-ui\">Semantic UI</a></li>\n<li><a href=\"http://purecss.io/\">Pure CSS</a></li>\n<li><a href=\"https://github.com/topcoat/topcoat\">topcoat</a></li>\n<li><a href=\"https://github.com/uikit/uikit\">UIkit</a></li>\n<li><a href=\"https://github.com/callemall/material-ui\">Material UI</a></li>\n<li><a href=\"https://github.com/Dogfalo/materialize\">Materialize - 一个基于 Material Design 的 CSS 框架</a></li>\n<li><a href=\"http://www.idangero.us/framework7\">Framework7</a></li>\n<li><a href=\"https://github.com/dcloudio/mui\">mui</a></li>\n<li><a href=\"http://ionicframework.com/\">ionic framework</a></li>\n<li><a href=\"https://github.com/jaunesarmiento/fries\">Fries</a></li>\n<li><a href=\"http://jquerymobile.com/\">jQuery Mobile</a></li>\n<li><a href=\"https://github.com/kikinteractive/app\">App.js</a></li>\n<li><a href=\"https://github.com/OfficeDev/Office-UI-Fabric\">Office UI Fabric - 微软 Office 前端团队的框架</a></li>\n<li><a href=\"https://www.polymer-project.org/\">Polymer - Google发布的Web组件构建框架</a></li>\n<li><a href=\"https://github.com/sentsin/layui/\">Layui - 经典模块化前端UI框架</a></li>\n</ul>\n<h2 id=\"2-JavaScript-框架汇总\"><a href=\"#2-JavaScript-框架汇总\" class=\"headerlink\" title=\"2. JavaScript 框架汇总\"></a>2. JavaScript 框架汇总</h2><ul>\n<li>JavaScript 框架<ul>\n<li><a href=\"https://github.com/facebook/react\">react</a></li>\n<li><a href=\"https://github.com/angular/angular\">Angular</a></li>\n<li><a href=\"https://github.com/jquery/jquery\">jQuery</a></li>\n<li><a href=\"https://github.com/jashkenas/backbone\">Backbone.js</a></li>\n<li><a href=\"https://github.com/emberjs/ember.js\">ember.js</a></li>\n<li><a href=\"https://github.com/ractivejs/ractive\">Ractive.js</a></li>\n<li><a href=\"https://github.com/kissyteam/kissy\">KISSY</a></li>\n<li><a href=\"https://github.com/madrobby/zepto\">Zepto.js</a></li>\n<li><a href=\"http://vanilla-js.com/\">Vanilla JS</a></li>\n<li><a href=\"https://github.com/yyx990803/vue\">Vue.js - 数据驱动的组件化MVVM库(用于创建web交互界面和数据双向绑定)</a><ul>\n<li><a href=\"https://github.com/vuejs/awesome-vue\">awesome-vue</a></li>\n<li><a href=\"http://element.eleme.io/#/\">Element - 基于 Vue 2.0 构建了一套完整的桌面 UI 组件库</a></li>\n<li><a href=\"https://github.com/vuejs/vuex\">Vuex - 一个专门为 Vue.js 应用设计的状态管理架构</a></li>\n<li><a href=\"https://github.com/ElemeFE/mint-ui\">Mint UI：基于 Vue.js 的移动端组件库</a></li>\n<li><a href=\"https://github.com/airyland/vux\">Vux - 基于 Vue 和 WeUI 的 UI 组件库</a></li>\n<li><a href=\"https://github.com/wangdahoo/vonic\">vonic - 基于 Vue.js 和 Ionic 的移动 UI 组件库</a><br>    - <a href=\"https://github.com/vuetifyjs/vuetify\">vuetify - vue2.0组件库</a></li>\n<li><a href=\"https://github.com/iview/iview\">iView - 一套基于 Vue.js 的高质量 UI 组件库</a></li>\n<li><a href=\"https://github.com/kazupon/vue-i18n\">vue-i18n</a></li>\n</ul>\n</li>\n<li><a href=\"http://canjs.com/guides/Utilities.html\">Can.js</a></li>\n<li><a href=\"https://github.com/RubyLouvre/avalon\">Avalon</a></li>\n<li><a href=\"https://github.com/box/t3js/\">T3 JavaScript Framework - 一个用于搭建大型Web应用的客户端JS框架</a></li>\n<li><a href=\"https://github.com/astoilkov/jsblocks\">jsblocks - Better MV-ish Framework 从简单 UI 到复杂单页应用都适用</a></li>\n</ul>\n</li>\n<li>轻量级JavaScript框架<ul>\n<li><a href=\"https://github.com/remy/min.js\">Min.js - Super minimal selector and event library</a> </li>\n<li><a href=\"https://github.com/n33/skel\">skel.js - A lightweight responsive framework</a></li>\n<li><a href=\"https://github.com/bendc/sprint\">Sprint.js - 一个高性能、小体积的 DOM 操作库</a></li>\n<li><a href=\"https://github.com/knockout/knockout\">knockout</a></li>\n<li><a href=\"https://github.com/ariya/phantomjs/\">PhantomJS - 一个基于 WebKit 的服务器端 JavaScript API</a></li>\n</ul>\n</li>\n<li>函数式反应型编程框架 FRP (Functional Reactive Programming) library<ul>\n<li><a href=\"https://github.com/baconjs/bacon.js/\">Bacon.js - A small functional reactive programming lib for JavaScript.</a> </li>\n<li><a href=\"http://www.flapjax-lang.org/\">Flapjax - 一个支持FRP的JavaScript框架</a></li>\n</ul>\n</li>\n<li>JavaScript 工具库<ul>\n<li><a href=\"https://github.com/jashkenas/underscore\">underscore.js</a></li>\n<li><a href=\"https://github.com/epeli/underscore.string\">Underscore.string.js字符串操作库</a></li>\n<li><a href=\"https://github.com/leecrossley/functional-js/\">functional.js</a></li>\n<li><a href=\"https://github.com/lodash/lodash\">Lo-Dash - A JavaScript utility library</a></li>\n<li><a href=\"https://github.com/dtao/lazy.js\">Lazy.js - a functional utility library for JavaScript</a></li>\n<li><a href=\"https://github.com/eliperelman/fn.js\">Fn.js</a></li>\n<li><a href=\"https://github.com/gwendall/way.js\">Way.js - 双向数据绑定库</a></li>\n<li><a href=\"https://github.com/Xaxis/boiler\">boiler - a utility library that makes tasks in JavaScript easier</a></li>\n<li>快捷键操作<ul>\n<li><a href=\"https://github.com/bitwalker/keys.js\">Keys.js - 应用快捷键</a></li>\n<li><a href=\"https://github.com/mycolorway/simple-hotkeys\">simple-hotkeys</a></li>\n<li><a href=\"https://github.com/jeresig/jquery.hotkeys\">jquery.hotkeys</a></li>\n<li><a href=\"https://github.com/ccampbell/mousetrap\">Mousetrap - 键盘快捷键操作</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/WechatFE/vConsole\">vConsole - 一个针对手机网页的前端 console 调试面板</a></li>\n<li><a href=\"https://github.com/AlloyTeam/AlloyLever\">AlloyLever - 移动web开发者工具面板</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-前端游戏框架\"><a href=\"#3-前端游戏框架\" class=\"headerlink\" title=\"3. 前端游戏框架\"></a>3. 前端游戏框架</h2><ul>\n<li><a href=\"https://github.com/cocos2d/cocos2d-html5\">cocos2d-html5</a></li>\n<li><a href=\"http://www.egret-labs.org/\">Egret Engine</a></li>\n<li><a href=\"https://github.com/digitalfruit/limejs\">LimeJS</a></li>\n<li><a href=\"https://github.com/CreateJS/EaselJS\">EaselJS</a></li>\n<li><a href=\"https://github.com/mrdoob/three.js\">three.js</a></li>\n<li><a href=\"https://github.com/AlloyTeam/AlloyStick\">AlloyStick</a></li>\n<li><a href=\"https://github.com/finscn/The-Best-JS-Game-Framework\">The-Best-JS-Game-Framework</a></li>\n<li><a href=\"https://github.com/RSamaium/CanvasEngine\">CanvasEngine</a></li>\n<li><a href=\"https://github.com/cykod/Quintus\">Quintus</a></li>\n<li><a href=\"https://github.com/piqnt/stage.js/\">Stage.js</a></li>\n<li><a href=\"https://github.com/photonstorm/phaser/\">phaser - 一个快速、免费、开源的 HTML5 游戏框架</a></li>\n</ul>\n<h2 id=\"4-ui组件库-CSS-Framework\"><a href=\"#4-ui组件库-CSS-Framework\" class=\"headerlink\" title=\"4. ui组件库(CSS Framework)\"></a>4. ui组件库(CSS Framework)</h2><ul>\n<li><a href=\"https://github.com/weui/weui\">WeUI - 微信官方UI库</a><ul>\n<li><a href=\"https://github.com/lihongxun945/jquery-weui\">jQuery WeUI - WeUI的jQuery版本</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/fex-team/GMU\">GMU - 基于zepto的ui组件库，适用于移动端</a></li>\n<li><a href=\"https://github.com/frozenui/frozenui\">FrozenUI - 腾讯移动端组件库</a></li>\n<li><a href=\"http://nec.netease.com/\">NEC - 更好的CSS方案 </a></li>\n<li><a href=\"http://nej.netease.com/\">NEJ - 更好的JS解决方案</a></li>\n<li><a href=\"https://github.com/LFeh/css-components/\">Pure CSS Components</a></li>\n<li><a href=\"https://github.com/adamschwartz/magic-of-css\">magic-of-css</a></li>\n<li><a href=\"https://github.com/primer/primer\">Primer - The CSS toolkit and guidelines that power GitHub</a></li>\n<li><a href=\"https://github.com/lihongxun945/light7\">light7 - A Light and easy to use UI Lib</a></li>\n<li><a href=\"https://github.com/picturepan2/spectre\">Spectre.css - 轻量、响应式的现代 CSS 框架</a></li>\n<li><a href=\"https://github.com/xcatliu/mobi.css\">mobi.css - 一个轻量、灵活的移动端 CSS 框架</a></li>\n</ul>\n<h2 id=\"5-基础模版\"><a href=\"#5-基础模版\" class=\"headerlink\" title=\"5. 基础模版\"></a>5. 基础模版</h2><ul>\n<li>浏览器统一(Cross Browser)<ul>\n<li><a href=\"https://github.com/h5bp/html5-boilerplate\">HTML5 BOILERPLATE</a></li>\n<li><a href=\"https://github.com/Modernizr/Modernizr\">Modernizr</a></li>\n<li><a href=\"https://github.com/necolas/normalize.css/\">Normalize.css</a></li>\n<li><a href=\"https://github.com/afarkas/html5shiv\">HTML5 Shiv - 让ie浏览器成为支持html5的浏览器的解决方法</a></li>\n<li><a href=\"https://github.com/imsky/cssFx\">cssFx - 为CSS3自动生成浏览器前缀</a></li>\n<li><a href=\"https://github.com/LeaVerou/prefixfree\">-prefix-free - Break free from CSS prefix hell</a></li>\n<li><a href=\"https://github.com/zhangxinxu/ieBetter.js\">ieBetter.js - make ie browser like a morden browser main for ie6~ie8</a></li>\n<li><a href=\"https://github.com/stefanpenner/es6-promise\">es6-promise - Promise 对象的兼容</a></li>\n</ul>\n</li>\n<li>响应式<ul>\n<li><a href=\"https://github.com/ResponsiveBP/Responsive\">Responsive - 响应式布局</a></li>\n<li><a href=\"https://github.com/WickyNilliams/enquire.js\">Enquire.js - Awesome Media Queries in JavaScript</a></li>\n<li><a href=\"https://github.com/kombai/freewall\">Free Wall - 创建桌面，移动和平板的动态网格布局</a></li>\n</ul>\n</li>\n<li>适配方案<ul>\n<li><a href=\"https://github.com/unbug/generator-webappstarter/blob/master/app/templates/app/src/util/MetaHandler.js\">MetaHandler.js：移动端适配各种屏幕无痛工具脚本</a></li>\n<li><a href=\"https://github.com/amfe/lib-flexible\">lib-flexible: 移动端自适应方案</a><ul>\n<li><a href=\"https://github.com/amfe/article/issues/17?hmsr=toutiao.io&utm_medium=toutiao.io&utm_source=toutiao.io\">参考: 使用Flexible实现手淘H5页面的终端适配</a></li>\n<li><a href=\"http://ufologist.github.io/responsive-page/others-responsive/flexible.html\">flexible demo 1</a></li>\n<li><a href=\"http://huodong.m.taobao.com/act/yibo.html\">flexible demo 2</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/peunzhang/pageResponse\">pageResponse</a></li>\n<li><a href=\"https://github.com/ufologist/responsive-page\">responsive-page</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-排版\"><a href=\"#6-排版\" class=\"headerlink\" title=\"6. 排版\"></a>6. 排版</h2><ul>\n<li><a href=\"https://github.com/lepture/yue.css\">yue.css</a></li>\n<li><a href=\"https://github.com/sofish/typo.css\">typo.css</a></li>\n<li><a href=\"https://github.com/sparanoid/chinese-copywriting-guidelines\">chinese-copywriting-guidelines - 中文文案排版指南</a></li>\n</ul>\n<h2 id=\"7-网格系统\"><a href=\"#7-网格系统\" class=\"headerlink\" title=\"7. 网格系统\"></a>7. 网格系统</h2><ul>\n<li><a href=\"https://github.com/aekaplan/grid\">grid</a></li>\n<li><a href=\"https://github.com/kristoferjoseph/flexboxgrid\">Flexbox Grid</a></li>\n<li><a href=\"https://github.com/DrewDahlman/Mason\">MasonJS - creating a perfect grid</a></li>\n</ul>\n<h2 id=\"8-路由和链接-Routing-And-URLs\"><a href=\"#8-路由和链接-Routing-And-URLs\" class=\"headerlink\" title=\"8. 路由和链接(Routing And URLs)\"></a>8. 路由和链接(Routing And URLs)</h2><ul>\n<li><a href=\"https://github.com/browserstate/history.js\">History.js - gracefully supports the HTML5 History&#x2F;State APIs</a></li>\n<li><a href=\"https://github.com/defunkt/jquery-pjax\">jquery-pjax - pushState+ajax</a></li>\n<li><a href=\"https://github.com/asual/jquery-address\">jquery-address - Deep Linking</a></li>\n<li><a href=\"https://github.com/visionmedia/page.js\">page.js - Micro client-side router</a></li>\n<li><a href=\"https://github.com/millermedeiros/crossroads.js\">crossroads.js</a></li>\n<li><a href=\"https://github.com/javve/hash.js\">hash.js</a>  </li>\n<li><a href=\"https://github.com/mtrpcic/pathjs\">path.js</a></li>\n<li><a href=\"https://github.com/flatiron/director\">director.js - 前端路由库(通过#符号进行路径组织,结合vue的component可进行单页的局部模块刷新)</a></li>\n<li><a href=\"https://github.com/medialize/URI.js\">URI.js</a></li>\n<li><a href=\"https://github.com/grobmeier/Roadcrew.js\">Roadcrew.js</a></li>\n<li><a href=\"https://github.com/pid/speakingurl\">SpeakingURL</a></li>\n<li><a href=\"https://github.com/YanagiEiichi/uparams\">uparams - An URL params parser</a></li>\n<li><a href=\"https://github.com/leeluolee/stateman\">StateMan - 一个处理深层次单页系统的路由库</a></li>\n</ul>\n<h2 id=\"9-UA-识别\"><a href=\"#9-UA-识别\" class=\"headerlink\" title=\"9. UA 识别\"></a>9. UA 识别</h2><ul>\n<li><a href=\"https://github.com/hotoo/detector\">detector</a></li>\n<li><a href=\"https://github.com/faisalman/ua-parser-js/\">ua-parser-js</a></li>\n</ul>\n<h2 id=\"10-表单处理\"><a href=\"#10-表单处理\" class=\"headerlink\" title=\"10. 表单处理\"></a>10. 表单处理</h2><h3 id=\"10-1-表单验证-Form-Validator-x2F-表单提示\"><a href=\"#10-1-表单验证-Form-Validator-x2F-表单提示\" class=\"headerlink\" title=\"10.1 表单验证(Form Validator)&#x2F;表单提示\"></a>10.1 表单验证(Form Validator)&#x2F;表单提示</h3><ul>\n<li><a href=\"https://github.com/niceue/validator\">Validator</a></li>\n<li><a href=\"https://github.com/guillaumepotier/Parsley.js\">Parsley</a></li>\n<li><a href=\"https://github.com/malsup/form\">jquery.form.js - jQuery Form Plugin</a></li>\n<li><a href=\"https://github.com/haiercdboy/Validform\">Validform</a></li>\n<li><a href=\"https://github.com/sofish/validator.js\">validator.js</a></li>\n<li><a href=\"https://github.com/jzaefferer/jquery-validation\">jquery-validation - jQuery Validation Plugin</a></li>\n<li><a href=\"https://github.com/victorjonsson/jQuery-Form-Validator\">formvalidator.js</a></li>\n<li><a href=\"http://github.com/Colourity/Fort.js\">Fort.js – 表单填写进度提示</a></li>\n<li><a href=\"https://github.com/mailcheck/mailcheck\">mailcheck - 用于检测email地址的域名</a></li>\n<li><a href=\"https://github.com/clubdesign/floatlabels.js\">Floatlable.js - 输入时显示placeholder文本</a></li>\n<li><a href=\"https://github.com/peachananr/label_better\">jQuery Label Better</a></li>\n<li><a href=\"https://github.com/ppoffice/validator.js\">validator.js</a></li>\n</ul>\n<h3 id=\"10-2-lt-input-gt-相关\"><a href=\"#10-2-lt-input-gt-相关\" class=\"headerlink\" title=\"10.2 &lt; input &gt; 相关\"></a>10.2 &lt; input &gt; 相关</h3><ul>\n<li><a href=\"https://github.com/nosir/cleave.js\">cleave.js - 格式化你的输入内容</a></li>\n</ul>\n<h3 id=\"10-3-lt-select-gt-相关\"><a href=\"#10-3-lt-select-gt-相关\" class=\"headerlink\" title=\"10.3 &lt; select &gt; 相关\"></a>10.3 &lt; select &gt; 相关</h3><ul>\n<li><a href=\"https://github.com/harvesthq/chosen\">Chosen</a></li>\n<li><a href=\"https://github.com/select2/select2\">Select2</a></li>\n<li><a href=\"https://github.com/silviomoreto/bootstrap-select\">bootstrap-select</a></li>\n</ul>\n<h3 id=\"10-4-单选框-x2F-复选框相关\"><a href=\"#10-4-单选框-x2F-复选框相关\" class=\"headerlink\" title=\"10.4 单选框&#x2F;复选框相关\"></a>10.4 单选框&#x2F;复选框相关</h3><ul>\n<li><a href=\"https://github.com/fronteed/iCheck\">iCheck - 增强复选框和单选按钮</a></li>\n<li><a href=\"https://github.com/abpetkov/switchery\">Switchery - iOS 7 style switches for your checkboxes</a></li>\n</ul>\n<h3 id=\"10-5-上传组件\"><a href=\"#10-5-上传组件\" class=\"headerlink\" title=\"10.5 上传组件\"></a>10.5 上传组件</h3><ul>\n<li><a href=\"https://github.com/blueimp/jQuery-File-Upload\">jQuery File Upload Plugin</a></li>\n<li><a href=\"http://fex-team.github.io/webuploader/\">百度 Web Uploader</a></li>\n<li><a href=\"http://www.uploadify.com/\">uploadify</a></li>\n<li><a href=\"https://github.com/moxiecode/plupload\">Plupload</a></li>\n<li><a href=\"http://fineuploader.com/index.html\">Fine Uploader</a></li>\n<li><a href=\"https://github.com/aralejs/upload\">arale-upload - 轻量级 iframe and html5 file uploader</a></li>\n<li><a href=\"https://github.com/enyo/dropzone\">Dropzone.js - 文件上传库(可获取文件mime, 文件大小等; 针对图片可生成缩略图,获取图片宽度,高度)</a></li>\n<li><a href=\"https://github.com/flowjs/flow.js\">flow.js</a></li>\n<li><a href=\"https://github.com/think2011/localResizeIMG\">localResizeIMG - 前端本地客户端压缩图片，兼容IOS，Android，PC</a></li>\n<li><a href=\"https://github.com/mycolorway/simple-uploader\">simple-uploader</a></li>\n</ul>\n<h3 id=\"10-6-日期选择\"><a href=\"#10-6-日期选择\" class=\"headerlink\" title=\"10.6 日期选择\"></a>10.6 日期选择</h3><ul>\n<li><a href=\"https://github.com/smalot/bootstrap-datetimepicker\">Both Date and Time picker widget based on twitter bootstrap</a></li>\n<li><a href=\"http://gmu.baidu.com/demo/widget/calendar/calendar.html\">GMU 日历组件</a></li>\n<li><a href=\"https://github.com/acidb/mobiscroll\">Mobiscroll</a></li>\n<li><a href=\"https://github.com/dbushell/Pikaday\">Pikaday - 日期选择器</a></li>\n<li>价格日历<ul>\n<li><a href=\"https://github.com/fugm/PriceCalendar\">PriceCalendar - 酒店价格日历</a><ul>\n<li><a href=\"http://fgm.cc/learn/calendar/price-calendar/api.html\">API文档</a>  </li>\n<li><a href=\"http://fgm.cc/learn/calendar/price-calendar/\">DEMO</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/wind-stone/price-calendar\">price-calendar - 价格日历</a></li>\n<li><a href=\"https://github.com/zhangyi5628/price_calendar\">price_calendar - 含有商品价格的日历控件</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-7-取色\"><a href=\"#10-7-取色\" class=\"headerlink\" title=\"10.7 取色\"></a>10.7 取色</h3><ul>\n<li><a href=\"https://github.com/mjolnic/bootstrap-colorpicker\">Colorpicker plugin for Twitter Bootstrap</a></li>\n</ul>\n<h3 id=\"10-8-标签插件-Tag\"><a href=\"#10-8-标签插件-Tag\" class=\"headerlink\" title=\"10.8 标签插件(Tag)\"></a>10.8 标签插件(Tag)</h3><ul>\n<li><a href=\"https://github.com/sniperwolf/taggingJS\">TaggingJS – 可以灵活定制的 jQuery 标签系统插件</a></li>\n<li><a href=\"https://github.com/brianreavis/selectize.js\">selectize.js</a></li>\n<li><a href=\"https://github.com/timschlechter/bootstrap-tagsinput/\">Bootstrap Tags Input</a></li>\n<li><a href=\"https://github.com/xoxco/jQuery-Tags-Input\">jQuery-Tags-Input</a></li>\n</ul>\n<h3 id=\"10-9-自动完成插件\"><a href=\"#10-9-自动完成插件\" class=\"headerlink\" title=\"10.9 自动完成插件\"></a>10.9 自动完成插件</h3><ul>\n<li><a href=\"https://github.com/ichord/At.js\">At.js - 一个Twitter&#x2F;微博样式的@自动完成插件</a></li>\n<li><a href=\"https://github.com/yuku-t/jquery-textcomplete\">jquery-textcomplete - 智能搜索提示框&#x2F;自动补全</a></li>\n<li><a href=\"https://github.com/twitter/typeahead.js\">typeahead.js - a fast and fully-featured autocomplete library</a></li>\n</ul>\n<h3 id=\"10-10-样式修正\"><a href=\"#10-10-样式修正\" class=\"headerlink\" title=\"10.10 样式修正\"></a>10.10 样式修正</h3><ul>\n<li><a href=\"https://github.com/jackmoore/autosize\">autosize - 使文本框自动适应所输入的内容</a></li>\n</ul>\n<h2 id=\"11-图表绘制-x2F-图形库-Graphics\"><a href=\"#11-图表绘制-x2F-图形库-Graphics\" class=\"headerlink\" title=\"11. 图表绘制&#x2F;图形库(Graphics)\"></a>11. 图表绘制&#x2F;图形库(Graphics)</h2><ul>\n<li><a href=\"https://github.com/highslide-software/highcharts.com\">Highcharts</a></li>\n<li><a href=\"https://github.com/nnnick/Chart.js\">Chart.js - Simple HTML5 Charts using Canvas</a></li>\n<li><a href=\"https://github.com/ecomfe/echarts\">百度 ECharts</a></li>\n<li><a href=\"https://github.com/gionkunz/chartist-js\">Chartist.js</a></li>\n<li><a href=\"https://github.com/mbostock/d3\">D3.js - A JavaScript visualization library for HTML and SVG.</a><ul>\n<li><a href=\"https://github.com/square/intro-to-d3\">intro-to-d3 - a D3.js tutorial</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/uxebu/bonsai\">Bonsai - 一个功能强大的JavaScript图形库</a></li>\n<li><a href=\"https://github.com/fastly/epoch/\">epoch - 数据图表可视化</a></li>\n<li><a href=\"https://github.com/almende/vis\">Vis.js</a></li>\n<li><a href=\"https://github.com/forio/contour\">Coutour.js</a></li>\n<li><a href=\"https://github.com/ecomfe/zrender\">zrender - 一个轻量级的Canvas类库，MVC封装，数据驱动，提供类Dom事件模型，让canvas绘图大不同！</a></li>\n</ul>\n<h2 id=\"12-日期格式化-amp-时间轴\"><a href=\"#12-日期格式化-amp-时间轴\" class=\"headerlink\" title=\"12. 日期格式化 &amp; 时间轴\"></a>12. 日期格式化 &amp; 时间轴</h2><ul>\n<li><a href=\"http://momentjs.com/\">Moment.js - 日期处理</a></li>\n<li><a href=\"https://github.com/pragmaticly/smart-time-ago\">Smart Time Ago - 显示相对时间</a></li>\n<li><a href=\"https://github.com/vorg/timeline.js\">timeline.js</a></li>\n<li><a href=\"https://github.com/hustcc/timeago.js\">timeago.js</a></li>\n</ul>\n<h2 id=\"13-页面交互\"><a href=\"#13-页面交互\" class=\"headerlink\" title=\"13. 页面交互\"></a>13. 页面交互</h2><h3 id=\"13-1-Slider\"><a href=\"#13-1-Slider\" class=\"headerlink\" title=\"13.1 Slider\"></a>13.1 Slider</h3><ul>\n<li><a href=\"https://github.com/kenwheeler/slick/\">slick - the last carousel you’ll ever need</a></li>\n<li><a href=\"https://github.com/thebird/Swipe\">Swipe - the most accurate touch slider</a></li>\n<li><a href=\"https://github.com/nolimits4web/Swiper\">Swiper - Most modern mobile touch slider</a></li>\n<li><a href=\"https://github.com/cubiq/iscroll\">iscroll - Smooth scrolling for the web</a></li>\n<li><a href=\"https://github.com/BE-FE/iSlider\">iSlider - 移动端滑动组件</a></li>\n<li><a href=\"https://github.com/OwlFonk/OwlCarousel\">OwlCarousel - create beautiful responsive carousel slider</a></li>\n<li><a href=\"https://github.com/jquery/jquery-mousewheel/\">jquery-mousewheel - jQuery鼠标滚轮滚动侦测插件</a></li>\n<li><a href=\"https://github.com/jedrzejchalubek/Glide.js\">Glide.js - 轻量级滑块组件</a></li>\n<li><a href=\"https://github.com/dimsemenov/photoswipe\">PhotoSwipe</a></li>\n<li><a href=\"http://www.superslide2.com/TouchSlide/\">TouchSlide - 触屏滑动特效(焦点图,Tab切换)</a></li>\n</ul>\n<h3 id=\"13-2-瀑布流\"><a href=\"#13-2-瀑布流\" class=\"headerlink\" title=\"13.2 瀑布流\"></a>13.2 瀑布流</h3><ul>\n<li><a href=\"http://masonry.desandro.com/\">Masonry</a></li>\n<li><a href=\"http://isotope.metafizzy.co/\">Isotope - Filter &amp; sort magical layouts</a></li>\n<li><a href=\"https://github.com/ademilter/bricklayer\">Bricklayer</a></li>\n</ul>\n<h3 id=\"13-3-懒加载-x2F-加载监听-x2F-预加载\"><a href=\"#13-3-懒加载-x2F-加载监听-x2F-预加载\" class=\"headerlink\" title=\"13.3 懒加载&#x2F;加载监听&#x2F;预加载\"></a>13.3 懒加载&#x2F;加载监听&#x2F;预加载</h3><ul>\n<li><a href=\"https://github.com/desandro/imagesloaded\">imagesLoaded</a></li>\n<li><a href=\"https://github.com/toddmotto/echo\">Echo.js</a></li>\n<li><a href=\"https://github.com/aFarkas/lazysizes\">lazySizes</a></li>\n<li><a href=\"https://github.com/tuupola/jquery_lazyload\">jquery_lazyload</a></li>\n<li><a href=\"https://github.com/shprink/bttrlazyloading/\">BttrLazyLoading</a></li>\n<li><a href=\"https://github.com/vvo/lazyload\">lazyload.js</a></li>\n<li><a href=\"https://github.com/callmecavs/layzr.js\">layzr.js - 一个小巧快速的图片懒加载库</a></li>\n<li><a href=\"https://github.com/alexanderdickson/waitForImages\">waitForImages - 图片加载监听库</a></li>\n<li><a href=\"https://github.com/thinkpixellab/PxLoader\">PxLoader - JS预加载库:实现图片、声音等各种文件的预加载功能</a></li>\n<li><a href=\"https://github.com/bgrins/bindWithDelay\">bindWithDelay - jQuery Plugin For Delayed Event Execution</a></li>\n<li><a href=\"https://github.com/dennyferra/TypeWatch\">TypeWatch - 停止输入时调用</a></li>\n</ul>\n<h3 id=\"13-4-图片轮播-幻灯片-x2F-图片展示\"><a href=\"#13-4-图片轮播-幻灯片-x2F-图片展示\" class=\"headerlink\" title=\"13.4 图片轮播(幻灯片)&#x2F;图片展示\"></a>13.4 图片轮播(幻灯片)&#x2F;图片展示</h3><ul>\n<li><a href=\"https://github.com/woothemes/FlexSlider\">FlexSlider</a></li>\n<li><a href=\"https://github.com/idiot/unslider\">unslider - 小而美的轮播库</a></li>\n<li><a href=\"https://github.com/scaron/prettyphoto\">prettyPhoto</a></li>\n<li><a href=\"https://github.com/chrishumboldt/Flickerplate\">FlickerPlate - A cool jQuery plugin that lets you flick through content.</a></li>\n<li><a href=\"https://github.com/imsky/holder\">Holder.js - Client-side image placeholders.</a></li>\n<li><a href=\"https://github.com/brunjo/rowGrid.js\">RowGrid.js - 在径直的行里放置图片</a></li>\n<li><a href=\"http://osvaldas.info/examples/image-lightbox-responsive-touch-friendly/\">ImageLightbox.js - 灯箱效果</a></li>\n<li><a href=\"https://github.com/peachananr/panorama_viewer\">JQuery Panorama Viewer - 全景视图</a></li>\n<li><a href=\"https://github.com/tholman/intense-images\">Intense Images - 全屏查看图片</a></li>\n<li><a href=\"http://scottjehl.github.io/picturefill/\">Picturefill - 一个响应式图片 JS 插件</a></li>\n<li><a href=\"https://github.com/fat/zoom.js\">zoom.js - 一个 jQuery 图片放大插件</a></li>\n<li><a href=\"https://github.com/brianium/watermarkjs\">watermarkjs - 一个在浏览器中添加图片水印的 JS 库</a></li>\n<li><a href=\"https://github.com/kvendrik/responsive-images.js\">responsive-images.js</a></li>\n<li><a href=\"https://github.com/polarnotion/turntable\">Turntable.js - 轻易实现图像的3D旋转</a></li>\n<li><a href=\"https://github.com/wentin/ResponsifyJS\">ResponsifyJS - 让图像完全响应式而不会牺牲图像的主要部分</a></li>\n</ul>\n<h3 id=\"13-5-图片剪裁-x2F-图片处理\"><a href=\"#13-5-图片剪裁-x2F-图片处理\" class=\"headerlink\" title=\"13.5 图片剪裁&#x2F;图片处理\"></a>13.5 图片剪裁&#x2F;图片处理</h3><ul>\n<li><a href=\"https://github.com/tapmodo/Jcrop\">Jcrop -  Image Cropping Plugin for jQuery</a></li>\n<li><a href=\"https://github.com/sconsult/croppic\">croppic - an image cropping jquery plugin</a></li>\n<li><a href=\"https://github.com/jwagner/smartcrop.js\">smartcrop.js - 智能图片裁剪库</a></li>\n<li><a href=\"https://github.com/boblemarin/jQuery.eraser\">jQuery.eraser - 图像擦除插件</a></li>\n<li><a href=\"http://www.dillerdesign.com/experiment/DD_belatedPNG/\">DD_belatedPNG.js - 让IE6支持透明PNG图片</a></li>\n<li><a href=\"https://github.com/jonom/jquery-focuspoint\">FocusPoint.js 实现图片的响应式裁剪</a></li>\n<li><a href=\"https://github.com/odyniec/imgareaselect\">imgareaselect</a></li>\n<li><a href=\"https://github.com/una/CSSgram\">CSSgram - CSS 实现的 Instagram 滤镜库</a></li>\n<li><a href=\"https://github.com/whackashoe/antimoderate\">antimoderate - 图片模糊库</a></li>\n</ul>\n<h3 id=\"13-6-进度条-x2F-加载动画-Loading\"><a href=\"#13-6-进度条-x2F-加载动画-Loading\" class=\"headerlink\" title=\"13.6 进度条&#x2F;加载动画(Loading)\"></a>13.6 进度条&#x2F;加载动画(Loading)</h3><ul>\n<li><a href=\"http://ricostacruz.com/nprogress/\">NProgress.js</a></li>\n<li><a href=\"https://github.com/usablica/progress.js\">progress.js</a></li>\n<li><a href=\"https://github.com/HubSpot/pace\">Pace - Automatic page load progress bar</a></li>\n<li><a href=\"https://github.com/englercj/jquery-ajax-progress\">jquery-ajax-progress</a></li>\n<li><a href=\"https://github.com/jacoborus/nanobar\">nanobar - Very lightweight progress bars.</a></li>\n<li><a href=\"https://github.com/vadimsva/waitMe\">waitMe - 很漂亮的loading效果</a></li>\n<li><a href=\"https://github.com/fgnass/spin.js\">spin.js</a></li>\n<li><a href=\"https://github.com/padolsey/sonic.js\">sonic.js</a></li>\n<li><a href=\"https://github.com/joaopereirawd/fakeLoader.js\">fakeLoader.js</a></li>\n<li><a href=\"https://github.com/ConnorAtherton/loaders.css\">loaders.css - 一个为性能优化的实现加载动画效果的 CSS 框架</a></li>\n<li><a href=\"https://github.com/lukehaas/css-loaders\">css-loaders</a></li>\n<li><a href=\"https://github.com/christophercliff/sausage\">Sausage - 跟踪滚动条并记录当前阅读所处节点</a></li>\n</ul>\n<h3 id=\"13-7-侧滑插件-offcancas\"><a href=\"#13-7-侧滑插件-offcancas\" class=\"headerlink\" title=\"13.7 侧滑插件(offcancas)\"></a>13.7 侧滑插件(offcancas)</h3><ul>\n<li><a href=\"https://github.com/christophery/pushy\">pushy -  a responsive off-canvas navigation menu </a></li>\n<li><a href=\"https://github.com/mango/slideout\">Slideout.js - 一个用于移动 Web 应用的触摸滑出式导航菜单</a></li>\n</ul>\n<h3 id=\"13-8-菜单-Menu\"><a href=\"#13-8-菜单-Menu\" class=\"headerlink\" title=\"13.8 菜单(Menu)\"></a>13.8 菜单(Menu)</h3><ul>\n<li><a href=\"https://github.com/joeldbirch/superfish\">SuperFish - 基于jQuery的级联下拉菜单</a></li>\n<li><a href=\"https://github.com/viljamis/responsive-nav.js\">Responsive Nav - 响应式导航</a></li>\n<li><a href=\"https://github.com/onokumus/metisMenu\">metisMenu - A jQuery menu plugin</a></li>\n</ul>\n<h3 id=\"13-9-滚动侦测-ScrollSpy\"><a href=\"#13-9-滚动侦测-ScrollSpy\" class=\"headerlink\" title=\"13.9 滚动侦测(ScrollSpy)\"></a>13.9 滚动侦测(ScrollSpy)</h3><ul>\n<li><a href=\"https://github.com/sxalexander/jquery-scrollspy\">jquery-scrollspy(1)</a></li>\n<li><a href=\"https://github.com/thesmart/jquery-scrollspy\">jquery-scrollspy(2)</a></li>\n<li><a href=\"https://github.com/imakewebthings/waypoints\">Waypoints</a></li>\n<li><a href=\"https://github.com/janpaepke/ScrollMagic\">ScrollMagic - 像进度条一样使用滚动条</a></li>\n</ul>\n<h3 id=\"13-10-滚动加载更多-x2F-下拉刷新-Pull-to-Refresh\"><a href=\"#13-10-滚动加载更多-x2F-下拉刷新-Pull-to-Refresh\" class=\"headerlink\" title=\"13.10 滚动加载更多&#x2F;下拉刷新(Pull to Refresh)\"></a>13.10 滚动加载更多&#x2F;下拉刷新(Pull to Refresh)</h3><ul>\n<li><a href=\"https://github.com/pklauzinski/jscroll\">jScroll</a></li>\n<li><a href=\"https://github.com/apeatling/web-pull-to-refresh\">web-pull-to-refresh</a></li>\n<li><a href=\"https://github.com/dwcares/pulltorefresh\">pulltorefresh</a></li>\n<li><a href=\"https://github.com/ThrivingKings/RubberBand.js\">RubberBand.js - add pull-to-refresh functionality to any page.</a></li>\n</ul>\n<h3 id=\"13-11-平滑滚动插件-Smooth-Scroll\"><a href=\"#13-11-平滑滚动插件-Smooth-Scroll\" class=\"headerlink\" title=\"13.11 平滑滚动插件(Smooth Scroll)\"></a>13.11 平滑滚动插件(Smooth Scroll)</h3><ul>\n<li><a href=\"https://github.com/kswedberg/jquery-smooth-scroll\">jquery-smooth-scroll</a></li>\n<li><a href=\"https://github.com/flesler/jquery.scrollTo\">jquery.scrollTo - 平滑滚动到页面指定位置</a></li>\n<li><a href=\"https://github.com/cferdinandi/smooth-scroll\">smooth-scroll</a></li>\n<li><a href=\"https://github.com/markgoodyear/scrollup\">scrollUp</a></li>\n<li><a href=\"https://github.com/tholman/elevator.js\">elevator.js - 一个模拟电梯运行“返回顶部”的 JS 插件</a></li>\n</ul>\n<h3 id=\"13-12-全屏滚动-x2F-全屏切换\"><a href=\"#13-12-全屏滚动-x2F-全屏切换\" class=\"headerlink\" title=\"13.12 全屏滚动&#x2F;全屏切换\"></a>13.12 全屏滚动&#x2F;全屏切换</h3><ul>\n<li><a href=\"https://github.com/alvarotrigo/pagePiling.js\">pagePiling.js - 全屏滚动效果</a></li>\n<li><a href=\"https://github.com/alvarotrigo/fullPage.js/\">fullPage.js</a></li>\n<li><a href=\"https://github.com/peachananr/onepage-scroll\">onepage-scroll</a></li>\n<li><a href=\"https://github.com/yanhaijing/zepto.fullpage\">zepto.fullpage - 专注于移动端的fullPage.js</a></li>\n<li><a href=\"https://github.com/sindresorhus/screenfull.js\">screenfull.js - 切换全屏模式</a></li>\n</ul>\n<h3 id=\"13-13-分屏滚动\"><a href=\"#13-13-分屏滚动\" class=\"headerlink\" title=\"13.13 分屏滚动\"></a>13.13 分屏滚动</h3><ul>\n<li><a href=\"https://github.com/alvarotrigo/multiscroll.js\">multiscroll.js - 分屏滚动效果</a></li>\n</ul>\n<h3 id=\"13-14-转场效果\"><a href=\"#13-14-转场效果\" class=\"headerlink\" title=\"13.14 转场效果\"></a>13.14 转场效果</h3><ul>\n<li><a href=\"https://github.com/blivesta/animsition\">Animsition - 页面切换时的过渡效果</a></li>\n</ul>\n<h3 id=\"13-15-固定元素-Sticky\"><a href=\"#13-15-固定元素-Sticky\" class=\"headerlink\" title=\"13.15 固定元素(Sticky)\"></a>13.15 固定元素(Sticky)</h3><ul>\n<li><a href=\"https://github.com/garand/sticky\">sticky - jQuery Plugin for Sticky Objects</a></li>\n<li><a href=\"https://github.com/webpop/jquery.pin\">jquery.pin - 固定页面元素</a></li>\n<li><a href=\"https://github.com/LiranCohen/stickUp\">stickUp</a></li>\n<li><a href=\"https://github.com/iclanzan/slinky\">Slinky.js - 堆叠头部创建滑动导航列表</a></li>\n</ul>\n<h3 id=\"13-16-触控事件\"><a href=\"#13-16-触控事件\" class=\"headerlink\" title=\"13.16 触控事件\"></a>13.16 触控事件</h3><ul>\n<li><a href=\"https://github.com/hammerjs/hammer.js\">Hammer.js</a></li>\n<li><a href=\"https://github.com/stephband/jquery.event.move\">jquery.event.move.js</a></li>\n</ul>\n<h3 id=\"13-17-拖拽组件\"><a href=\"#13-17-拖拽组件\" class=\"headerlink\" title=\"13.17 拖拽组件\"></a>13.17 拖拽组件</h3><ul>\n<li><a href=\"https://github.com/desandro/draggabilly\">Draggabilly - 专注于拖拽功能的 JS 库</a></li>\n<li><a href=\"https://github.com/bevacqua/dragula\">dragula - 一个让拖放操作变简单的 JS 库</a></li>\n<li><a href=\"https://github.com/uberVU/grid\">GridList - 可拖拉的响应式列表库</a></li>\n</ul>\n<h3 id=\"13-18-隐藏或展示页面元素\"><a href=\"#13-18-隐藏或展示页面元素\" class=\"headerlink\" title=\"13.18 隐藏或展示页面元素\"></a>13.18 隐藏或展示页面元素</h3><ul>\n<li><a href=\"http://www.bootcss.com/p/headroom.js/\">Headroom.js - 在不需要页头时将其隐藏</a></li>\n<li><a href=\"https://github.com/jedfoster/Readmore.js\">Readmore.js - 内容显示与隐藏插件</a></li>\n<li><a href=\"https://github.com/dmotz/oriDomi\">oriDomi - 像指一样折叠Dom元素</a></li>\n</ul>\n<h3 id=\"13-19-滚动条-Scrollbar\"><a href=\"#13-19-滚动条-Scrollbar\" class=\"headerlink\" title=\"13.19 滚动条(Scrollbar)\"></a>13.19 滚动条(Scrollbar)</h3><ul>\n<li><a href=\"https://github.com/vitch/jScrollPane\">jScrollPane</a></li>\n<li><a href=\"https://github.com/gromo/jquery.scrollbar\">jquery.scrollbar</a></li>\n<li><a href=\"https://github.com/noraesae/perfect-scrollbar\">perfect-scrollbar</a></li>\n<li><a href=\"https://github.com/jamesflorentino/nanoScrollerJS\">nanoScrollerJS</a></li>\n<li><a href=\"https://github.com/wieringen/tinyscrollbar\">tinyscrollbar</a></li>\n</ul>\n<h3 id=\"13-20-视差滚动-Parallax-Scrolling\"><a href=\"#13-20-视差滚动-Parallax-Scrolling\" class=\"headerlink\" title=\"13.20 视差滚动(Parallax Scrolling)\"></a>13.20 视差滚动(Parallax Scrolling)</h3><ul>\n<li><a href=\"https://github.com/wagerfield/parallax\">parallax.js</a></li>\n<li><a href=\"https://github.com/stephband/jparallax\">jparallax</a></li>\n<li><a href=\"https://github.com/Prinzhorn/skrollr\">skrollr</a></li>\n</ul>\n<h2 id=\"13-21-缩放-Zooming\"><a href=\"#13-21-缩放-Zooming\" class=\"headerlink\" title=\"13.21 缩放 (Zooming)\"></a>13.21 缩放 (Zooming)</h2><ul>\n<li><a href=\"https://github.com/hakimel/zoom.js\">zoom.js - 一款效果很独特的页面内容缩放插件</a></li>\n<li><a href=\"https://github.com/fat/zoom.js\">zoom.js - 一个 jQuery 图片放大插件</a></li>\n<li><a href=\"https://github.com/jackmoore/zoom\">jQuery Zoom - mouseover时图片缩放效果</a></li>\n</ul>\n<h2 id=\"14-代码高亮插件-x2F-代码编辑器\"><a href=\"#14-代码高亮插件-x2F-代码编辑器\" class=\"headerlink\" title=\"14. 代码高亮插件&#x2F;代码编辑器\"></a>14. 代码高亮插件&#x2F;代码编辑器</h2><ul>\n<li><a href=\"https://code.google.com/p/google-code-prettify/\">google-code-prettify</a></li>\n<li><a href=\"https://highlightjs.org/\">highlight.js</a></li>\n<li><a href=\"http://craig.is/making/rainbows\">Rainbow</a></li>\n<li><a href=\"https://github.com/ajaxorg/ace\">ACE</a></li>\n<li><a href=\"https://github.com/codemirror/codemirror\">CodeMirror</a></li>\n<li><a href=\"https://github.com/aramk/crayon-syntax-highlighter\">Crayon Syntax Highlighter</a></li>\n<li><a href=\"https://github.com/PrismJS/prism\">prism - Lightweight, robust, elegant syntax highlighting.</a></li>\n</ul>\n<h2 id=\"15-UI-Icon-组件\"><a href=\"#15-UI-Icon-组件\" class=\"headerlink\" title=\"15. UI Icon 组件\"></a>15. UI Icon 组件</h2><ul>\n<li><a href=\"http://fontawesome.io/icons/\">Font Awesome</a></li>\n<li><a href=\"http://glyphter.com/\">Glyphter: The SVG Font Machine</a></li>\n<li><a href=\"http://perfecticons.com/\">Perfect Icons</a></li>\n<li><a href=\"http://iconizr.com/\">iconizr</a></li>\n<li><a href=\"http://www.bootcss.com/p/cikonss/\">Cikonss - 纯CSS实现的响应式Icon</a></li>\n<li><a href=\"https://github.com/danleech/simple-icons\">Simple Icons</a></li>\n</ul>\n<h2 id=\"16-动画-Animate\"><a href=\"#16-动画-Animate\" class=\"headerlink\" title=\"16. 动画(Animate)\"></a>16. 动画(Animate)</h2><ul>\n<li><a href=\"https://github.com/daneden/animate.css\">animate.css - A cross-browser library of CSS animations.</a></li>\n<li><a href=\"https://github.com/rstacruz/jquery.transit\">Transit - CSS transitions and transformations for jQuery</a></li>\n<li><a href=\"https://github.com/juliangarnier/anime\">anime.js - Javascript 动画引擎</a></li>\n<li><a href=\"https://github.com/matthieua/WOW\">WOW - 在滚动过程中展示CSS动画效果(默认触发animate.css动画)</a></li>\n<li><a href=\"https://github.com/anijs/anijs/\">AniJS - A Library to Raise your Web Design without Coding</a></li>\n<li><a href=\"https://github.com/visionmedia/move.js\">Move.js - 简化CSS3动画的JS库</a></li>\n<li><a href=\"https://github.com/nckprsn/scrollme\">ScrollMe – 在网页中加入各种滚动动画效果</a></li>\n<li><a href=\"https://github.com/h5bp/Effeckt.css\">Effeckt.css - A Performant Transitions and Animations Library</a></li>\n<li><a href=\"http://nec.netease.com/library/category/#animation\">NEC动画库</a></li>\n<li><a href=\"https://github.com/elrumordelaluz/csshake\">csshake - CSS classes to move your DOM</a></li>\n<li><a href=\"https://github.com/miniMAC/magic\">magic - CSS3 Animations with special effects</a></li>\n<li><a href=\"https://github.com/tobiasahlin/SpinKit\">SpinKit</a></li>\n<li><a href=\"https://github.com/julianshapiro/velocity\">Velocity.js - 加速JavaScript动画</a></li>\n<li><a href=\"https://github.com/thomasxiii/lenticular.js\">lenticular.js - 响应倾斜或鼠标事件创建图片动画</a></li>\n<li><a href=\"https://github.com/peachananr/interactive_3d\">jQuery Interactive 3D - Create a 3D interactive object using images</a></li>\n<li><a href=\"https://github.com/ramswaroop/animatescroll.js\">AnimateScroll - A Simple jQuery Plugin for Animating Scroll</a></li>\n<li><a href=\"https://github.com/julianshapiro/blast\">Blast.js - 把动画和样式注入到文本中</a></li>\n<li><a href=\"https://github.com/tictail/bounce.js\">Bounce.js - 一个用于制作漂亮 CSS3 关键帧动画的 JS 库</a></li>\n<li><a href=\"https://github.com/cmiscm/stickerjs\">Sticker.js - create a Sticker Effect</a></li>\n<li><a href=\"https://github.com/julianlloyd/scrollReveal.js\">scrollReveal.js - 元素进入可视区域自动触发设置好的动画</a></li>\n<li><a href=\"https://github.com/hakimel/stroll.js\">stroll.js - CSS3 list scroll effects</a></li>\n<li><a href=\"https://github.com/gdsmith/jquery.easing\">jQuery Easing -  动画效果扩展</a></li>\n<li><a href=\"http://www.justinaguilar.com/animations/index.html\">animations - CSS3 ANIMATION CHEAT SHEET</a></li>\n<li><a href=\"https://github.com/bitshadow/iconate\">iconate.js：将 icons 增加动画效果的 JS 库</a></li>\n<li><a href=\"https://github.com/HubSpot/odometer\">Odometer - 数字之间的垂直切换</a></li>\n<li>Hover - 悬停效果<ul>\n<li><a href=\"https://github.com/IanLunn/Hover\">Hover.css - 很多鼠标Hover态的效果</a></li>\n<li><a href=\"https://github.com/ciar4n/imagehover.css\">imagehover.css - 为图片添加悬停效果</a></li>\n<li><a href=\"https://github.com/gudh/ihover\">iHover - 图片悬停效果</a></li>\n<li><a href=\"https://github.com/hasinhayder/ImageCaptionHoverAnimation\">ImageCaptionHoverAnimation</a></li>\n<li><a href=\"http://miketricking.github.io/dist/\">Bootstrap Hover Image Gallery</a></li>\n</ul>\n</li>\n<li>Multi-touch gestures library - Web手势库<ul>\n<li><a href=\"https://github.com/AlloyTeam/AlloyFinger\">AlloyFinger - 腾讯 AlloyTeam 出品的超级小的 Web 手势库</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"17-本地存储\"><a href=\"#17-本地存储\" class=\"headerlink\" title=\"17. 本地存储\"></a>17. 本地存储</h2><ul>\n<li><a href=\"https://github.com/zendesk/cross-storage\">cross-storage - Cross domain local storage</a></li>\n<li><a href=\"https://github.com/mozilla/localForage\">localForage</a></li>\n<li><a href=\"https://github.com/pouchdb/pouchdb\">pouchdb</a></li>\n<li><a href=\"https://github.com/Wisembly/basil.js\">basil.js</a></li>\n<li><a href=\"https://github.com/ClickerMonkey/neurosync\">Neurosync - JavaScript 本地离线 ORM 库</a></li>\n<li><a href=\"https://github.com/techfort/LokiJS\">LokiJS - 性能优先的 JavaScript 内存数据库</a></li>\n<li><a href=\"https://github.com/turbolinks/turbolinks\">turbolinks - Javascript pushState</a></li>\n</ul>\n<h2 id=\"18-模板引擎\"><a href=\"#18-模板引擎\" class=\"headerlink\" title=\"18. 模板引擎\"></a>18. 模板引擎</h2><ul>\n<li><a href=\"https://github.com/olado/doT\">doT.js</a></li>\n<li><a href=\"https://github.com/janl/mustache.js\">mustache.js</a></li>\n<li><a href=\"http://www.jingwentian.com/t-66\">Handlebars.js</a></li>\n<li><a href=\"https://github.com/aui/artTemplate\">artTemplate</a></li>\n<li><a href=\"https://github.com/wangxiao/BaiduTemplate\">baiduTemplate</a></li>\n<li><a href=\"https://github.com/BorisMoore/jsrender\">JSRender</a></li>\n<li><a href=\"https://github.com/tj/ejs\">EJS - JavaScript Templates</a></li>\n<li><a href=\"https://github.com/PaulGuo/Juicer\">Juicer - A Light Javascript Templete Engine.</a></li>\n<li><a href=\"https://github.com/twigkit/tempo\">Tempo</a></li>\n<li><a href=\"https://github.com/moappi/json2html\">json2html</a></li>\n<li><a href=\"https://github.com/twitter/hogan.js\">Hogan.js - JavaScript templating from Twitter.</a></li>\n<li><a href=\"https://github.com/linkedin/dustjs\">Dust.js - Linkedin维护的项目</a></li>\n</ul>\n<h2 id=\"19-通知组件-x2F-弹框组件-x2F-模态窗口\"><a href=\"#19-通知组件-x2F-弹框组件-x2F-模态窗口\" class=\"headerlink\" title=\"19. 通知组件&#x2F;弹框组件&#x2F;模态窗口\"></a>19. 通知组件&#x2F;弹框组件&#x2F;模态窗口</h2><ul>\n<li><a href=\"https://github.com/alexgibson/notify.js\">Notify.js(Web Notifications API)</a></li>\n<li><a href=\"https://github.com/fabien-d/alertify.js\">alertify.js</a></li>\n<li><a href=\"https://github.com/MohammadYounes/AlertifyJS\">AlertifyJS</a></li>\n<li><a href=\"https://github.com/t4t5/sweetalert\">SweetAlert</a></li>\n<li><a href=\"https://github.com/HubSpot/messenger\">Messenger - 非常酷的弹框组件</a></li>\n<li><a href=\"https://github.com/sciactive/pnotify\">PNotify</a></li>\n<li><a href=\"https://github.com/jpillora/notifyjs\">Notify.js - A simple, versatile notification library</a></li>\n<li><a href=\"https://github.com/VodkaBears/Remodal\">Remodal - 模态窗口插件</a></li>\n<li><a href=\"https://github.com/egoist/action.js\">action.js - 极简的tip和Modal弹窗效果</a></li>\n<li><a href=\"https://github.com/humaan/Modaal\">Modaal - 一个创建弹出窗口的jQuery插件</a></li>\n<li><a href=\"https://github.com/hubspot/vex\">Vex - 可以实现3D动效的弹出对话框堆叠效果</a></li>\n</ul>\n<h2 id=\"20-提示控件-Tooltips\"><a href=\"#20-提示控件-Tooltips\" class=\"headerlink\" title=\"20. 提示控件(Tooltips)\"></a>20. 提示控件(Tooltips)</h2><ul>\n<li><a href=\"https://github.com/chinchang/hint.css\">hint.css - 一款非常小巧的提示框效果</a></li>\n<li><a href=\"https://github.com/qTip2/qTip2\">qTip2 - Pretty powerful tooltips</a></li>\n<li><a href=\"https://github.com/HubSpot/tooltip\">tooltip - CSS Tooltips</a></li>\n<li><a href=\"https://github.com/iamceege/tooltipster\">tooltipster - A jQuery tooltip plugin</a></li>\n<li><a href=\"https://github.com/jamescryer/grumble.js\">grumble.js - 气泡形状的提示（Tooltip）控件</a></li>\n<li><a href=\"https://github.com/carlsednaoui/ouibounce\">Ouibounce - 离站提示控件</a></li>\n<li><a href=\"https://github.com/usablica/intro.js\">intro.js - 一个创建引导式网站介绍功能的 JS 库</a></li>\n<li><a href=\"https://github.com/egoist/data-tip.css\">data-tip.css - 纯 CSS 实现的工具提示</a></li>\n</ul>\n<h2 id=\"21-对话框-x2F-遮罩层-x2F-弹出层-lightbox\"><a href=\"#21-对话框-x2F-遮罩层-x2F-弹出层-lightbox\" class=\"headerlink\" title=\"21. 对话框&#x2F;遮罩层&#x2F;弹出层(lightbox)\"></a>21. 对话框&#x2F;遮罩层&#x2F;弹出层(lightbox)</h2><ul>\n<li><a href=\"https://github.com/fancyapps/fancyBox\">fancyBox - Fancy jQuery lightbox</a></li>\n<li><a href=\"https://github.com/krewenki/jquery-lightbox\">jquery-lightbox - The popular lightbox script, ported to jQuery</a></li>\n<li><a href=\"https://github.com/jackmoore/colorbox\">Colorbox - a jQuery lightbox</a></li>\n<li><a href=\"https://github.com/aui/artDialog\">artDialog - 经典的网页对话框组件</a></li>\n<li><a href=\"https://github.com/codrops/DialogEffects\">DialogEffects</a></li>\n<li><a href=\"https://github.com/malsup/blockui/\">jQuery blockUI - Page or element overlay</a></li>\n<li><a href=\"https://github.com/sentsin/layer/\">layer - web弹出窗&#x2F;层</a></li>\n</ul>\n<h2 id=\"22-文档-x2F-表格-x2F-PDF\"><a href=\"#22-文档-x2F-表格-x2F-PDF\" class=\"headerlink\" title=\"22. 文档&#x2F;表格&#x2F;PDF\"></a>22. 文档&#x2F;表格&#x2F;PDF</h2><ul>\n<li><a href=\"https://github.com/wyuenho/backgrid\">Backgrid.js - 强大的表格组件</a></li>\n<li><a href=\"https://github.com/handsontable/handsontable\">handsontable - 在线可编辑excel表格</a></li>\n<li><a href=\"https://github.com/rstaib/jquery-bootgrid\">jQuery Bootgrid - 用于ajax生成动态表格</a></li>\n<li><a href=\"https://github.com/DataTables/DataTables\">DataTables - Table plug-in for jQuery</a></li>\n<li><a href=\"https://github.com/mozilla/pdf.js\">PDF.js - 一个 JavaScript 编写的 PDF 阅读器</a></li>\n<li><a href=\"https://github.com/MrRio/jsPDF\">jsPDF - Generate PDF files in JavaScript</a></li>\n<li><a href=\"https://github.com/okfn/recline/\">Recline.js - 灵活操作和展示数据</a></li>\n<li><a href=\"https://github.com/alfajango/jquery-dynatable\">Dynatable - 交互式表格插件</a></li>\n<li><a href=\"https://github.com/fulmicoton/fattable\">fattable - 创建无限滚动无限行列数的表格</a></li>\n<li><a href=\"https://github.com/NeXTs/Clusterize.js\">Clusterize.js - 一个轻松显示大数据集的 JS 插件</a></li>\n<li><a href=\"https://github.com/AudithSoftworks/Uniform\">Uniform -表单美化插件</a></li>\n</ul>\n<h2 id=\"23-目录树插件\"><a href=\"#23-目录树插件\" class=\"headerlink\" title=\"23. 目录树插件\"></a>23. 目录树插件</h2><ul>\n<li><a href=\"https://github.com/zTree/zTree_v3\">zTree_v3 - jQuery Tree Plugin</a></li>\n<li><a href=\"https://github.com/vakata/jstree\">jstree - jQuery Tree Plugin</a></li>\n<li><a href=\"https://github.com/mar10/fancytree\">fancytree - Tree plugin for jQuery</a></li>\n</ul>\n<h2 id=\"24-前后端交互\"><a href=\"#24-前后端交互\" class=\"headerlink\" title=\"24. 前后端交互\"></a>24. 前后端交互</h2><h3 id=\"24-1-Ajax模块\"><a href=\"#24-1-Ajax模块\" class=\"headerlink\" title=\"24.1 Ajax模块\"></a>24.1 Ajax模块</h3><ul>\n<li><a href=\"https://github.com/github/fetch\">fetch - A window.fetch JavaScript polyfill</a></li>\n<li><a href=\"https://github.com/ded/reqwest\">reqwest - browser asynchronous http requests</a></li>\n<li><a href=\"https://github.com/ForbesLindesay/ajax\">ajax - Standalone AJAX library</a></li>\n<li><a href=\"https://github.com/then/then-request\">then-request</a></li>\n<li><a href=\"https://github.com/iriscouch/browser-request\">browser-request</a></li>\n<li><a href=\"https://github.com/visionmedia/superagent\">superagent</a></li>\n<li><a href=\"https://github.com/argunner/minAjax.js/\">minAjax.js</a></li>\n<li><a href=\"https://github.com/pyrsmk/qwest\">qwest - 第三方的Ajax库</a></li>\n<li><a href=\"https://github.com/mzabriskie/axios\">axios - Promise based HTTP client for the browser and node.js</a></li>\n<li><a href=\"https://github.com/fis-components/whatwg-fetch\">whatwg-fetch</a></li>\n</ul>\n<h3 id=\"24-2-SSE-Server-Sent-Events\"><a href=\"#24-2-SSE-Server-Sent-Events\" class=\"headerlink\" title=\"24.2 SSE (Server-Sent Events)\"></a>24.2 SSE (Server-Sent Events)</h3><blockquote>\n<p>SSE API用于创建到服务器的单向连接，服务器通过这个连接可以发送任意数量的数据.</p>\n</blockquote>\n<ul>\n<li><a href=\"https://github.com/Yaffle/EventSource\">EventSource</a></li>\n</ul>\n<h3 id=\"24-3-Web-Sockets\"><a href=\"#24-3-Web-Sockets\" class=\"headerlink\" title=\"24.3 Web Sockets\"></a>24.3 Web Sockets</h3><h2 id=\"25-音频-x2F-视频\"><a href=\"#25-音频-x2F-视频\" class=\"headerlink\" title=\"25. 音频&#x2F;视频\"></a>25. 音频&#x2F;视频</h2><ul>\n<li><a href=\"https://github.com/happyworm/jPlayer\">jPlayer -  HTML5 Audio &amp; Video for jQuery</a></li>\n<li><a href=\"https://github.com/videojs/video.js\">video.js - HTML5 &amp; Flash video player</a></li>\n<li><a href=\"https://github.com/paypal/accessible-html5-video-player\">Accessible HTML5 Video Player - PayPal 开源的 HTML5 视频播放器</a></li>\n<li><a href=\"https://github.com/clappr/clappr\">Clappr - 开源的Web视频播放器</a></li>\n<li><a href=\"https://github.com/selz/plyr\">Plyr - A simple HTML5 media player</a></li>\n<li><a href=\"https://github.com/davatron5000/FitVids.js\">FitVids.js - A lightweight, easy-to-use jQuery plugin for fluid width video embeds.</a></li>\n<li><a href=\"https://github.com/dfcb/BigVideo.js\">BigVideo.js - The jQuery Plugin for Big Background Video</a></li>\n<li><a href=\"https://github.com/bdougherty/BigScreen\">BigScreen - A simple library for using the JavaScript Full Screen API</a></li>\n<li><a href=\"https://github.com/VodkaBears/Vide\">Vide - 视频背景</a></li>\n<li><a href=\"https://github.com/captbaritone/winamp2-js\">winamp2-js</a></li>\n<li><a href=\"https://github.com/jaysalvat/buzz\">Buzz - A Javascript HTML5 Audio library</a></li>\n<li><a href=\"http://github.com/johndyer/mediaelement/\">MediaElement.js</a></li>\n</ul>\n<h2 id=\"26-按钮\"><a href=\"#26-按钮\" class=\"headerlink\" title=\"26. 按钮\"></a>26. 按钮</h2><ul>\n<li><a href=\"https://github.com/alexwolfe/Buttons\">Buttons - A CSS button library</a></li>\n<li><a href=\"https://github.com/codrops/ButtonComponentMorph\">ButtonComponentMorph</a></li>\n<li><a href=\"https://github.com/codrops/ProgressButtonStyles\">ProgressButtonStyles</a></li>\n<li><a href=\"https://github.com/codrops/CreativeButtons\">CreativeButtons</a></li>\n<li><a href=\"https://github.com/ubuwaits/css3-buttons\">CSS3 buttons</a></li>\n<li><a href=\"https://github.com/timmywil/jquery.onoff\">jquery.onoff - Interactive, accessible toggle switches for the web.</a></li>\n<li><a href=\"https://github.com/hakimel/css/tree/master/flipside\">Flipside - 一个能过渡到对话框的按钮</a></li>\n</ul>\n<h2 id=\"27-富文本编辑器-x2F-Markdown编辑器-x2F-Markdown解析器\"><a href=\"#27-富文本编辑器-x2F-Markdown编辑器-x2F-Markdown解析器\" class=\"headerlink\" title=\"27. 富文本编辑器&#x2F;Markdown编辑器&#x2F;Markdown解析器\"></a>27. 富文本编辑器&#x2F;Markdown编辑器&#x2F;Markdown解析器</h2><ul>\n<li><a href=\"https://github.com/mycolorway/simditor\">Simditor - 简单快速的富文本编辑器</a></li>\n<li><a href=\"https://github.com/Integ/BachEditor\">BachEditor - 一个有情怀的编辑器</a></li>\n<li><a href=\"https://github.com/tinymce/tinymce\">TinyMCE</a></li>\n<li><a href=\"https://github.com/toopay/bootstrap-markdown\">bootstrap-markdown</a></li>\n<li><a href=\"https://github.com/chjj/marked\">marked - markdown解析器</a></li>\n<li><a href=\"https://github.com/tylingsoft/markdown-plus\">Markdown Plus</a></li>\n<li><a href=\"https://github.com/pandao/editor.md\">Editor.md - 开源在线Markdown编辑器</a></li>\n<li><a href=\"https://github.com/benweet/stackedit\">stackedit</a></li>\n<li><a href=\"http://imperavi.com/redactor/\">Redactor Text Editor</a></li>\n<li><a href=\"https://github.com/simonwaldherr/micromarkdown.js/\">micromarkdown.js - 轻量级的md解析器</a></li>\n<li><a href=\"https://github.com/wangfupeng1988/wangEditor\">wangEditor - 支持移动端的轻量级web富文本框</a></li>\n<li><a href=\"https://github.com/ckeditor/ckeditor-dev\">CKEditor - 可视化 HTML 编辑器</a></li>\n<li><a href=\"https://github.com/quilljs/quill\">Quill - 富文本编辑器</a></li>\n</ul>\n<h2 id=\"28-内容提取-Readability\"><a href=\"#28-内容提取-Readability\" class=\"headerlink\" title=\"28. 内容提取(Readability)\"></a>28. 内容提取(Readability)</h2><ul>\n<li><a href=\"https://code.google.com/p/arc90labs-readability/\">Readability</a></li>\n<li><a href=\"https://github.com/marianoguerra/json.human.js\">json.human.js - Json Formatting for Human Beings</a></li>\n</ul>\n<h2 id=\"29-颜色-CSS-Colors-x2F-SVG-x2F-Canvas\"><a href=\"#29-颜色-CSS-Colors-x2F-SVG-x2F-Canvas\" class=\"headerlink\" title=\"29. 颜色(CSS Colors)&#x2F;SVG&#x2F;Canvas\"></a>29. 颜色(CSS Colors)&#x2F;SVG&#x2F;Canvas</h2><ul>\n<li><a href=\"http://colours.neilorangepeel.com/\">CSS Colours</a></li>\n<li><a href=\"http://www.svgeneration.com/\">SVGeneration</a></li>\n<li><a href=\"https://github.com/dirkgroenen/SVGMagic\">SVGMagic - 自动的创建PNG来兼容不支持SVG的浏览器</a></li>\n<li><a href=\"https://github.com/briangonzalez/jquery.adaptive-backgrounds.js\">Adaptive Backgrounds - 从图片抽取主要颜色和应用到父元素</a></li>\n<li><a href=\"https://github.com/themadcreator/seen\">Seen.js - 渲染3D场景为SVG或者HTML Canvas</a></li>\n<li><a href=\"https://github.com/jquery/jquery-color/\">jquery-color - 可以动态改动颜色</a></li>\n</ul>\n<h2 id=\"30-选项卡-Tabs\"><a href=\"#30-选项卡-Tabs\" class=\"headerlink\" title=\"30. 选项卡(Tabs)\"></a>30. 选项卡(Tabs)</h2><ul>\n<li><a href=\"https://github.com/samsono/Easy-Responsive-Tabs-to-Accordion\">Easy Responsive Tabs to Accordion</a></li>\n<li><a href=\"https://github.com/jellekralt/Responsive-Tabs\">Responsive-Tabs</a></li>\n<li><a href=\"https://github.com/IonDen/ion.tabs\">ion.tabs - jQuery tabs plugin</a></li>\n<li><a href=\"https://github.com/JangoSteve/jQuery-EasyTabs\">jQuery-EasyTabs</a></li>\n<li><a href=\"https://github.com/aarondo/tabulous.js\">tabulous.js</a></li>\n</ul>\n<h2 id=\"31-文本处理\"><a href=\"#31-文本处理\" class=\"headerlink\" title=\"31. 文本处理\"></a>31. 文本处理</h2><ul>\n<li><a href=\"https://github.com/zeroclipboard/zeroclipboard\">ZeroClipboard - 文本复制插件</a></li>\n<li><a href=\"https://github.com/zenorocha/clipboard.js/\">clipboard.js</a></li>\n<li><a href=\"https://github.com/lemonmade/bigfoot\">Bigfoot - 点击文章中的脚注弹窗显示</a></li>\n<li><a href=\"https://github.com/openannotation/annotator\">Annotator - 文本注解插件，可以包括注释、标签、用户等</a></li>\n<li><a href=\"https://github.com/micjamking/Succinct\">Succinct - 用作截断多行文本,后面添加省略号</a></li>\n<li><a href=\"https://github.com/simplefocus/FlowType.JS\">Flowtype.js - 自动调整字体大小和行号</a></li>\n<li><a href=\"https://github.com/peachananr/flat-shadow\">flat-shadow</a></li>\n<li><a href=\"https://github.com/davatron5000/FitText.js\">FitText - A jQuery plugin for inflating web type</a></li>\n<li><a href=\"https://github.com/bigspaceship/shine.js\">shine.js - 实现漂亮阴影</a></li>\n<li><a href=\"https://github.com/bramstein/trmix/\">Type Rendering Mix - 文本渲染引擎</a></li>\n<li><a href=\"https://github.com/kswedberg/jquery-expander\">jquery-expander - 阅读更多</a></li>\n<li><a href=\"https://github.com/mattboldt/typed.js/\">Typed.js - 输入模拟插件</a></li>\n<li><a href=\"https://github.com/FrDH/jQuery.dotdotdot\">jQuery.dotdotdot - 多行文本溢出显示省略号</a></li>\n<li><a href=\"https://github.com/camwiegert/baffle\">baffle.js - 文本互动效果</a></li>\n</ul>\n<h2 id=\"32-布局-Layout\"><a href=\"#32-布局-Layout\" class=\"headerlink\" title=\"32. 布局(Layout)\"></a>32. 布局(Layout)</h2><ul>\n<li>分隔面板(Split Panel)<ul>\n<li><a href=\"https://github.com/shagstrom/split-pane\">split-pane</a></li>\n<li><a href=\"http://layout.jquery-dev.com/\">jQuery UI Layout</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"33-演示-x2F-幻灯片\"><a href=\"#33-演示-x2F-幻灯片\" class=\"headerlink\" title=\"33. 演示&#x2F;幻灯片\"></a>33. 演示&#x2F;幻灯片</h2><ul>\n<li><a href=\"https://github.com/hakimel/reveal.js\">reveal.js - The HTML Presentation Framework</a></li>\n<li><a href=\"https://github.com/markdalgleish/bespoke.js\">bespoke.js - DIY Presentation Micro-Framework</a></li>\n<li><a href=\"https://github.com/bartaz/impress.js\">impress.js</a></li>\n<li><a href=\"https://github.com/shower/shower\">shower</a></li>\n<li><a href=\"https://github.com/imakewebthings/deck.js\">deck.js</a></li>\n</ul>\n<h2 id=\"34-国际化-i18n\"><a href=\"#34-国际化-i18n\" class=\"headerlink\" title=\"34. 国际化(i18n)\"></a>34. 国际化(i18n)</h2><ul>\n<li><a href=\"https://github.com/recurser/jquery-i18n\">jquery-i18n</a></li>\n<li><a href=\"https://github.com/i18next/i18next\">i18next.js</a></li>\n<li><a href=\"https://github.com/jpjoyal/jsperanto\">jsperanto.js</a></li>\n<li><a href=\"https://github.com/SlexAxton/Jed\">jed.js</a></li>\n<li><a href=\"https://github.com/SlexAxton/messageformat.js\">messageformat.js</a></li>\n<li><a href=\"https://github.com/airbnb/polyglot.js\">Polyglot.js</a></li>\n</ul>\n<h2 id=\"35-邮件模板-Email-Templates\"><a href=\"#35-邮件模板-Email-Templates\" class=\"headerlink\" title=\"35. 邮件模板(Email Templates)\"></a>35. 邮件模板(Email Templates)</h2><ul>\n<li><a href=\"https://github.com/leemunroe/responsive-html-email-template\">responsive-html-email-template</a></li>\n</ul>\n<h2 id=\"36-移动端优化-Optimizing-Mobile-Performance\"><a href=\"#36-移动端优化-Optimizing-Mobile-Performance\" class=\"headerlink\" title=\"36. 移动端优化(Optimizing Mobile Performance)\"></a>36. 移动端优化(Optimizing Mobile Performance)</h2><ul>\n<li><a href=\"https://github.com/ftlabs/fastclick\">FastClick - 处理移动端 click 事件 300 毫秒延迟</a></li>\n<li><a href=\"https://github.com/filamentgroup/tappy/\">tappy</a></li>\n<li><a href=\"https://github.com/dave1010/jquery-fast-click\">jquery-fast-click</a></li>\n</ul>\n<h2 id=\"37-HTTP请求相关\"><a href=\"#37-HTTP请求相关\" class=\"headerlink\" title=\"37. HTTP请求相关\"></a>37. HTTP请求相关</h2><ul>\n<li><a href=\"https://github.com/nodeca/pako\">pako - HTTP 请求正文压缩</a><ul>\n<li><a href=\"https://imququ.com/post/how-to-compress-http-request-body.html\">参考阅读: 如何压缩 HTTP 请求正文</a></li>\n<li><a href=\"https://qgy18.com/request-compress/\">HTTP 请求正文压缩 DEMO</a></li>\n</ul>\n</li>\n<li><a href=\"http://www.ohdave.com/rsa/\">RSA in JavaScript - 用RSA加密实现Web数据加密传输</a></li>\n</ul>\n<h2 id=\"38-下载组件\"><a href=\"#38-下载组件\" class=\"headerlink\" title=\"38. 下载组件\"></a>38. 下载组件</h2><ul>\n<li><a href=\"https://github.com/rndme/download\">download</a></li>\n<li><a href=\"https://github.com/dcneiner/Downloadify\">Downloadify</a></li>\n</ul>\n<h2 id=\"39-实用工具-x2F-其他插件\"><a href=\"#39-实用工具-x2F-其他插件\" class=\"headerlink\" title=\"39. 实用工具&#x2F;其他插件\"></a>39. 实用工具&#x2F;其他插件</h2><ul>\n<li><a href=\"https://github.com/carhartl/jquery-cookie\">jquery-cookie</a></li>\n<li><a href=\"https://github.com/js-cookie/js-cookie\">JavaScript Cookie</a></li>\n<li><a href=\"https://github.com/dieulot/instantclick/\">InstantClick - 预加载用户可能会点击的一些链接</a></li>\n<li><a href=\"https://github.com/caolan/async\">Async.js - 异步操作</a></li>\n<li><a href=\"https://github.com/niklasvh/html2canvas\">html2canvas - 实现纯JS网页截图</a></li>\n<li><a href=\"https://github.com/jeromeetienne/jquery-qrcode\">jquery.qrcode.js - 生成二维码的 jQuery 插件</a></li>\n<li><a href=\"https://github.com/davidshimjs/qrcodejs\">qrcodejs - JS生成QRCode的库</a></li>\n<li><a href=\"https://github.com/platform45/nakedpassword\">nakedpassword - 用脱衣女帮助检测密码强度</a></li>\n<li><a href=\"https://github.com/fex-team/kityminder\">KityMinder - 脑图编辑工具</a></li>\n<li><a href=\"https://github.com/patrickkunka/mixitup\">MixitUp - 动画过滤和排序</a></li>\n<li><a href=\"https://github.com/peachananr/tip_cards\">JQuery Tip Cards - 创建卡片交互的cards布局</a></li>\n<li><a href=\"https://github.com/dolox/fallback/\">Fallback.js - JavaScript library for dynamically loading CSS and JS files.</a></li>\n<li><a href=\"https://github.com/swfobject/swfobject\">swfobject</a></li>\n<li><a href=\"https://github.com/padolsey-archive/prettyprint.js\">prettyprint.js - An in-browser JavaScript variable dumper</a></li>\n<li><a href=\"https://github.com/HubSpot/shepherd\">Shepherd - 为应用创建用户指南</a></li>\n<li><a href=\"https://github.com/mark-rolich/RulersGuides.js\">RulersGuide.js - 类似PhotoShop标尺的js库</a></li>\n<li><a href=\"https://github.com/marmelab/gremlins.js\">Gremlins.js - Monkey 测试库</a></li>\n<li><a href=\"https://github.com/ndreckshage/roughdraft.js/\">RoughDraft.js - 简单快速的创建交互式的 HTML 模型的原型工具</a></li>\n<li><a href=\"https://github.com/ejci/favico.js\">favico.js - 动态改变浏览器标签栏中的网站图标</a></li>\n<li><a href=\"https://github.com/tracelytics/pageguide\">pageguide - 网页向导</a></li>\n<li><a href=\"https://github.com/kpdecker/jsdiff\">jsdiff - js diff 算法</a></li>\n</ul>\n<h1 id=\"ES6-ECMAScript-2015\"><a href=\"#ES6-ECMAScript-2015\" class=\"headerlink\" title=\"ES6( ECMAScript 2015 )\"></a>ES6( ECMAScript 2015 )</h1><h2 id=\"ES6转码器-ES6-to-ES5\"><a href=\"#ES6转码器-ES6-to-ES5\" class=\"headerlink\" title=\"ES6转码器(ES6 to ES5)\"></a>ES6转码器(ES6 to ES5)</h2><ul>\n<li><a href=\"https://github.com/babel/babel/\">Babel</a> - 一个广泛使用的ES6转码器，可以将ES6代码转为ES5代码，从而在现有环境执行</li>\n<li><a href=\"https://github.com/babel/babelify\">babelify</a> - 将babel引入到Gulp, Grunt, npm run等构建过程</li>\n<li><a href=\"https://github.com/google/traceur-compiler\">traceur-compiler</a> - Traceur is a JavaScript.next-to-JavaScript-of-today compiler</li>\n</ul>\n<h2 id=\"ES6入门\"><a href=\"#ES6入门\" class=\"headerlink\" title=\"ES6入门\"></a>ES6入门</h2><ul>\n<li><a href=\"http://es6.ruanyifeng.com/\">ECMAScript 6入门</a> - 阮一峰老师的开源的JavaScript语言教程</li>\n<li><a href=\"https://babeljs.io/docs/learn-es2015/\">Learn ES2015</a></li>\n<li><a href=\"http://es6-features.org/\">ES6 - New features Overview &amp; Comparison</a></li>\n<li><a href=\"https://ponyfoo.com/articles/es6\">ES6 Overview in 350 Bullet Points</a></li>\n<li><a href=\"https://github.com/lukehoban/es6features\">es6features</a></li>\n</ul>\n<h1 id=\"设计模式-JavaScript-Patterns\"><a href=\"#设计模式-JavaScript-Patterns\" class=\"headerlink\" title=\"设计模式( JavaScript Patterns )\"></a>设计模式( JavaScript Patterns )</h1><ul>\n<li><a href=\"https://github.com/shichuan/javascript-patterns\">javascript-patterns</a></li>\n<li><a href=\"https://github.com/jquery-boilerplate/jquery-patterns\">jquery-patterns - A variety of jQuery plugin patterns</a></li>\n<li><a href=\"http://addyosmani.com/resources/essentialjsdesignpatterns/book/\">Learning JavaScript Design Patterns</a></li>\n</ul>\n<h1 id=\"在线工具-Online-Tools\"><a href=\"#在线工具-Online-Tools\" class=\"headerlink\" title=\"在线工具( Online Tools )\"></a>在线工具( Online Tools )</h1><ul>\n<li><a href=\"http://jsbin.com/\">jsbin - Collaborative JavaScript Debugging App</a><ul>\n<li><a href=\"https://github.com/jsbin/jsbin\">jsbin@Github</a></li>\n</ul>\n</li>\n<li><a href=\"http://jsfiddle.net/\">jsfiddle</a></li>\n<li><a href=\"http://jsbeautifier.org/\">jsbeautifier - Online JavaScript beautifier</a></li>\n<li><a href=\"http://resume.github.io/\">resume.github.com</a></li>\n</ul>\n<h1 id=\"前端开发工具\"><a href=\"#前端开发工具\" class=\"headerlink\" title=\"前端开发工具\"></a>前端开发工具</h1><h2 id=\"1-开发工具\"><a href=\"#1-开发工具\" class=\"headerlink\" title=\"1. 开发工具\"></a>1. 开发工具</h2><ul>\n<li><a href=\"http://www.sublimetext.com/\">Sublime Text</a></li>\n</ul>\n<h2 id=\"2-调试工具\"><a href=\"#2-调试工具\" class=\"headerlink\" title=\"2. 调试工具\"></a>2. 调试工具</h2><ul>\n<li><a href=\"http://www.telerik.com/fiddler\">Fiddler</a></li>\n<li><a href=\"http://people.apache.org/~pmuellr/weinre-docs/latest/Home.html\">Weinre</a></li>\n<li><a href=\"http://www.alloyteam.com/2012/05/web-front-end-tool-rythem-1/\">Rythem</a></li>\n<li><a href=\"https://github.com/zmoazeni/csscss\">csscss - 用于检查css代码冗余</a></li>\n<li><a href=\"http://fecs.baidu.com/\">FECS - 基于 Node.js 的前端代码检查工具</a></li>\n<li><a href=\"https://github.com/typicode/json-server\">JSON Server - 模拟 API</a></li>\n<li><a href=\"https://github.com/swagger-api/swagger-ui\">swagger-ui - 基于REST的API测试&#x2F;文档</a></li>\n</ul>\n<h2 id=\"3-模拟数据-Fake\"><a href=\"#3-模拟数据-Fake\" class=\"headerlink\" title=\"3. 模拟数据( Fake )\"></a>3. 模拟数据( Fake )</h2><ul>\n<li><a href=\"http://jsonplaceholder.typicode.com/\">JSONPlaceholder</a></li>\n<li><a href=\"https://github.com/typicode/json-server\">json-server - Get a full fake REST API</a></li>\n<li><a href=\"https://github.com/typicode/lowdb\">lowdb -  A small local JSON database powered by lodash</a></li>\n</ul>\n<h2 id=\"4-浏览器扩展-Chrome-Extensions\"><a href=\"#4-浏览器扩展-Chrome-Extensions\" class=\"headerlink\" title=\"4. 浏览器扩展(Chrome Extensions)\"></a>4. 浏览器扩展(Chrome Extensions)</h2><ul>\n<li><a href=\"https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm\">Postman - REST Client</a></li>\n<li><a href=\"http://welefen.github.io/Fiddler/\">Fiddler - Fiddler for Chrome Extension</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/web%E5%89%8D%E7%AB%AF%E5%8A%A9%E6%89%8Bfehelper/pkgccpejnmalmdinmhkkfafefagiiiad\">WEB前端助手(FeHelper)</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm\">Web Developer</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/chrome-logger/noaneddfkdjfnfdakjjmocngnfkfehhd\">Chrome Logger</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/colorzilla/bhlhnicpbhignbdhedgjhgdocnmhomnp\">ColorZilla</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg?hl=en\">ColorPick Eyedropper</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/code-cola/lomkpheldlbkkfiifcbfifipaofnmnkn\">Code Cola</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/1px/gebccnmciopflhcdihopmphapifkkfdh\">1px</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/alloydesigner/ojooeaohlmgpcjajikhmibcnbebfenid\">AlloyDesigner - 前端重构开发辅助工具</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/fontface-ninja/eljapbgkmlngdpckoiiibecpemleclhh\">Fontface Ninja</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/pagespeed-insights-by-goo/gplegfbjlmmehdoakndmohflojccocli\">PageSpeed Insights (by Google)</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/http-status/cknfnacbckhfpjahnmkblajcpledpfnp/related\">HTTP Status</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/redirect-path/aomidfkchockcldhbkggjokdkkebmdll/related\">Redirect Path</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/responsive-web-design-tes/objclahbaimlfnbjdeobicmmlnbhamkg?hl=en\">Responsive Web Design Tester</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh?hl=en\">Window Resizer</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce?hl=en\">CSSViewer</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd?hl=en\">IE Tab</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?hl=en\">Clear Cache</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn/related?hl=en\">JSONView</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/image-downloader/cnpniohnfphhjihaiiggeabnkjhpaldj\">Image Downloader</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/pretty-beautiful-javascri/piekbefgpgdecckjcpffhnacjflfoddg/related?utm_source=chrome-ntp-icon\">Pretty Beautiful Javascript - 可以自动格式化混淆的js文件</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/javascript-errors-notifie/jafmfknfnkoekkdocjiaipcnmkklaajd?utm_source=chrome-ntp-icon\">JavaScript Errors Notifier</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/css-diff/pefnhibkhcfooofgmgoipfpcojnhhljm/related\">CSS Diff - 在线比对页面上两个元素的CSS样式差异</a></li>\n<li><a href=\"https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm\">WhatFont- 识别网页所使用的字体</a></li>\n</ul>\n<h1 id=\"前端参考集\"><a href=\"#前端参考集\" class=\"headerlink\" title=\"前端参考集\"></a>前端参考集</h1><ul>\n<li><a href=\"https://github.com/bendc/frontend-guidelines\">frontend-guidelines - Some HTML, CSS and JS best practices.</a></li>\n<li><a href=\"https://github.com/dypsilon/frontend-dev-bookmarks\">frontend-dev-bookmarks</a></li>\n<li><a href=\"https://github.com/codrops\">Codrops - Useful resources</a></li>\n<li><a href=\"http://isobar-idev.github.io/code-standards/\">Front-end Code Standards &amp; Best Practices</a></li>\n<li><a href=\"https://github.com/dypsilon/frontend-dev-bookmarks\">frontend-dev-bookmarks</a></li>\n<li><a href=\"https://github.com/wwsun/awesome-javascript\">awesome-javascript</a></li>\n<li><a href=\"https://github.com/nicejade/Front-end-tutorial\">Front-end-tutorial - 前端涉及的所有知识体系</a></li>\n<li><a href=\"https://github.com/vuejs/awesome-vue\">awesome-vue</a></li>\n<li>前端编码规范( Standard Style ) <ul>\n<li><a href=\"https://github.com/airbnb/javascript\">Airbnb 的 JavaScript 编码规范</a></li>\n<li><a href=\"https://github.com/feross/standard\">JavaScript Standard Style</a></li>\n</ul>\n</li>\n</ul>\n<hr>\n<p>from <a href=\"https://github.com/JingwenTian\">github.com&#x2F;JingwenTian</a></p>"},{"title":"国庆之后，还剩下什么？","date":"2018-10-09T16:00:00.000Z","description":"最近几个月好像一直是行尸走肉状态，也不知道是哪里出了问题。","_content":"### 思考思考人生吧\n<!-- more -->\n国庆一过去基本上今年也差不多快过完了，时间还真是溜得快啊，一下子他么的我都快25了，不可思议。\n今年的目标呢？恩，好像还有些没有实现，有些已经差不多了。总感觉精神层面上少了点什么。\n有些国外文学真的难啃，没啥耐心看下去了，不知道是我认知不够还是确实是书的道理太深，太晦涩。\n然后就是现实点目标，距离还有点远，可能一开始把自己想的太尼玛吊了，然后事实上还的远，漂浮的厉害。\n导致好像还在原地踏步。我的天。想想就很可怕，自己也是毕业一年的人了啊。是该有点社会生活压力了吧。\n恩，已经有了。\n国庆回了趟家，大多是参加朋友的婚礼，看到别人个个房子车子都齐全了，我X，自己还啥都没有，还是个月光。\n顿时觉得自己好像个懵逼的傻X~~真是没有对比就没有伤害啊。哎，这年代还是现实点好过日子，理想主义不容易。\n总结下上半年吧，其实早该总结的，不是加班就是在打游戏或者是在干别的啥的，其实时常回头看看自己，挺好的。\n上半年中规中矩吧，读书的目标完成了一半，练琴一周也至少一次，健身也有去公司健身房，还有些其他啥的。\n唯一做的不好的就是码代码的空余时间比较少，基本上每个周末也就一两个小时，工作日基本上没有时间。。。\n下半年重心转移，老老实实搞技术，还有很多玩意都没弄懂呢。精通NODE呢？另一门语言PY呢？NPL呢？一大堆的东西呢。\n踏实是我对自己的唯一要求，求你别在天上飞了。老铁，是时候下来了。。。","source":"_posts/国庆之后，还剩下什么.md","raw":"---\ntitle: 国庆之后，还剩下什么？\ndate: 2018-10-10\ncategories: 生活随笔\ntags: [随笔]\ndescription: 最近几个月好像一直是行尸走肉状态，也不知道是哪里出了问题。\n---\n### 思考思考人生吧\n<!-- more -->\n国庆一过去基本上今年也差不多快过完了，时间还真是溜得快啊，一下子他么的我都快25了，不可思议。\n今年的目标呢？恩，好像还有些没有实现，有些已经差不多了。总感觉精神层面上少了点什么。\n有些国外文学真的难啃，没啥耐心看下去了，不知道是我认知不够还是确实是书的道理太深，太晦涩。\n然后就是现实点目标，距离还有点远，可能一开始把自己想的太尼玛吊了，然后事实上还的远，漂浮的厉害。\n导致好像还在原地踏步。我的天。想想就很可怕，自己也是毕业一年的人了啊。是该有点社会生活压力了吧。\n恩，已经有了。\n国庆回了趟家，大多是参加朋友的婚礼，看到别人个个房子车子都齐全了，我X，自己还啥都没有，还是个月光。\n顿时觉得自己好像个懵逼的傻X~~真是没有对比就没有伤害啊。哎，这年代还是现实点好过日子，理想主义不容易。\n总结下上半年吧，其实早该总结的，不是加班就是在打游戏或者是在干别的啥的，其实时常回头看看自己，挺好的。\n上半年中规中矩吧，读书的目标完成了一半，练琴一周也至少一次，健身也有去公司健身房，还有些其他啥的。\n唯一做的不好的就是码代码的空余时间比较少，基本上每个周末也就一两个小时，工作日基本上没有时间。。。\n下半年重心转移，老老实实搞技术，还有很多玩意都没弄懂呢。精通NODE呢？另一门语言PY呢？NPL呢？一大堆的东西呢。\n踏实是我对自己的唯一要求，求你别在天上飞了。老铁，是时候下来了。。。","slug":"国庆之后，还剩下什么","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7ww003dr2ufenwfd08o","content":"<h3 id=\"思考思考人生吧\"><a href=\"#思考思考人生吧\" class=\"headerlink\" title=\"思考思考人生吧\"></a>思考思考人生吧</h3><span id=\"more\"></span>\n<p>国庆一过去基本上今年也差不多快过完了，时间还真是溜得快啊，一下子他么的我都快25了，不可思议。<br>今年的目标呢？恩，好像还有些没有实现，有些已经差不多了。总感觉精神层面上少了点什么。<br>有些国外文学真的难啃，没啥耐心看下去了，不知道是我认知不够还是确实是书的道理太深，太晦涩。<br>然后就是现实点目标，距离还有点远，可能一开始把自己想的太尼玛吊了，然后事实上还的远，漂浮的厉害。<br>导致好像还在原地踏步。我的天。想想就很可怕，自己也是毕业一年的人了啊。是该有点社会生活压力了吧。<br>恩，已经有了。<br>国庆回了趟家，大多是参加朋友的婚礼，看到别人个个房子车子都齐全了，我X，自己还啥都没有，还是个月光。<br>顿时觉得自己好像个懵逼的傻X~~真是没有对比就没有伤害啊。哎，这年代还是现实点好过日子，理想主义不容易。<br>总结下上半年吧，其实早该总结的，不是加班就是在打游戏或者是在干别的啥的，其实时常回头看看自己，挺好的。<br>上半年中规中矩吧，读书的目标完成了一半，练琴一周也至少一次，健身也有去公司健身房，还有些其他啥的。<br>唯一做的不好的就是码代码的空余时间比较少，基本上每个周末也就一两个小时，工作日基本上没有时间。。。<br>下半年重心转移，老老实实搞技术，还有很多玩意都没弄懂呢。精通NODE呢？另一门语言PY呢？NPL呢？一大堆的东西呢。<br>踏实是我对自己的唯一要求，求你别在天上飞了。老铁，是时候下来了。。。</p>\n","site":{"data":{}},"length":587,"excerpt":"<h3 id=\"思考思考人生吧\"><a href=\"#思考思考人生吧\" class=\"headerlink\" title=\"思考思考人生吧\"></a>思考思考人生吧</h3>","more":"<p>国庆一过去基本上今年也差不多快过完了，时间还真是溜得快啊，一下子他么的我都快25了，不可思议。<br>今年的目标呢？恩，好像还有些没有实现，有些已经差不多了。总感觉精神层面上少了点什么。<br>有些国外文学真的难啃，没啥耐心看下去了，不知道是我认知不够还是确实是书的道理太深，太晦涩。<br>然后就是现实点目标，距离还有点远，可能一开始把自己想的太尼玛吊了，然后事实上还的远，漂浮的厉害。<br>导致好像还在原地踏步。我的天。想想就很可怕，自己也是毕业一年的人了啊。是该有点社会生活压力了吧。<br>恩，已经有了。<br>国庆回了趟家，大多是参加朋友的婚礼，看到别人个个房子车子都齐全了，我X，自己还啥都没有，还是个月光。<br>顿时觉得自己好像个懵逼的傻X~~真是没有对比就没有伤害啊。哎，这年代还是现实点好过日子，理想主义不容易。<br>总结下上半年吧，其实早该总结的，不是加班就是在打游戏或者是在干别的啥的，其实时常回头看看自己，挺好的。<br>上半年中规中矩吧，读书的目标完成了一半，练琴一周也至少一次，健身也有去公司健身房，还有些其他啥的。<br>唯一做的不好的就是码代码的空余时间比较少，基本上每个周末也就一两个小时，工作日基本上没有时间。。。<br>下半年重心转移，老老实实搞技术，还有很多玩意都没弄懂呢。精通NODE呢？另一门语言PY呢？NPL呢？一大堆的东西呢。<br>踏实是我对自己的唯一要求，求你别在天上飞了。老铁，是时候下来了。。。</p>"},{"title":"如何从0-1开发团队脚手架工具","date":"2021-08-25T16:00:00.000Z","description":"前端项目基础脚手架","_content":"\n<a name=\"N4qT1\"></a>\n### 背景\n目前团队新建项目基本靠人肉手工copy，为了解决这些重复无脑的事情，决定搞一个工具。<br />​\n<!-- more -->\n\n<a name=\"fNTxf\"></a>\n### 码前思考\n做之前，理一下思路，思路清晰之后，写代码就顺其自然了~<br />简单画个流程图。\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/53C2D2BB-3837-4A01-AA64-70F372332235.png)\n<a name=\"falQG\"></a>\n### 实现\n知识点如下：\n\n1. node基础知识，相关api。\n1. 工具\n- [@gitbeaker/node](https://npm.alibaba-inc.com/package/@gitbeaker/node) gitlabapi交互库\n- [bluebird](https://npm.alibaba-inc.com/package/bluebird) 三方Promise库\n- [chalk](https://npm.alibaba-inc.com/package/chalk) 修改控制台字符样式\n- [commander](https://npm.alibaba-inc.com/package/commander) 命令行工具开发组件\n- [download-git-repo](https://npm.alibaba-inc.com/package/download-git-repo) 下载git远程仓库\n- [inquirer](https://npm.alibaba-inc.com/package/inquirer) 控制台问询交互\n- [ora](https://npm.alibaba-inc.com/package/ora) loading\n3. 本地测试\n   1. tnpm link\n4. 发布\n   1. tnpm publish\n\n​<br />\n<a name=\"gsPoA\"></a>\n### 使用\n```bash\nsudo tnpm i @alife/bqcli -g\nbqcli create <project>\n```\n例如：<br />![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/279A0224-A202-4E9B-9DBE-951BA2B40440.png)<br />![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/AD03CD8F-3F76-499E-A9C8-0CFE18989CFF.png)<br />![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/945461ED-A844-4327-AC14-D9042814EB07.png)\n","source":"_posts/如何从0-1开发团队脚手架工具.md","raw":"---\ntitle: 如何从0-1开发团队脚手架工具\ndate: 2021-08-26\ncategories: 前端\ntags: [前端]\ndescription: 前端项目基础脚手架\n---\n\n<a name=\"N4qT1\"></a>\n### 背景\n目前团队新建项目基本靠人肉手工copy，为了解决这些重复无脑的事情，决定搞一个工具。<br />​\n<!-- more -->\n\n<a name=\"fNTxf\"></a>\n### 码前思考\n做之前，理一下思路，思路清晰之后，写代码就顺其自然了~<br />简单画个流程图。\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/53C2D2BB-3837-4A01-AA64-70F372332235.png)\n<a name=\"falQG\"></a>\n### 实现\n知识点如下：\n\n1. node基础知识，相关api。\n1. 工具\n- [@gitbeaker/node](https://npm.alibaba-inc.com/package/@gitbeaker/node) gitlabapi交互库\n- [bluebird](https://npm.alibaba-inc.com/package/bluebird) 三方Promise库\n- [chalk](https://npm.alibaba-inc.com/package/chalk) 修改控制台字符样式\n- [commander](https://npm.alibaba-inc.com/package/commander) 命令行工具开发组件\n- [download-git-repo](https://npm.alibaba-inc.com/package/download-git-repo) 下载git远程仓库\n- [inquirer](https://npm.alibaba-inc.com/package/inquirer) 控制台问询交互\n- [ora](https://npm.alibaba-inc.com/package/ora) loading\n3. 本地测试\n   1. tnpm link\n4. 发布\n   1. tnpm publish\n\n​<br />\n<a name=\"gsPoA\"></a>\n### 使用\n```bash\nsudo tnpm i @alife/bqcli -g\nbqcli create <project>\n```\n例如：<br />![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/279A0224-A202-4E9B-9DBE-951BA2B40440.png)<br />![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/AD03CD8F-3F76-499E-A9C8-0CFE18989CFF.png)<br />![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/945461ED-A844-4327-AC14-D9042814EB07.png)\n","slug":"如何从0-1开发团队脚手架工具","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7ww003gr2ufgflzf3zt","content":"<p><a name=\"N4qT1\"></a></p>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>目前团队新建项目基本靠人肉手工copy，为了解决这些重复无脑的事情，决定搞一个工具。<br />​</p>\n<span id=\"more\"></span>\n\n<p><a name=\"fNTxf\"></a></p>\n<h3 id=\"码前思考\"><a href=\"#码前思考\" class=\"headerlink\" title=\"码前思考\"></a>码前思考</h3><p>做之前，理一下思路，思路清晰之后，写代码就顺其自然了~<br />简单画个流程图。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/53C2D2BB-3837-4A01-AA64-70F372332235.png\" alt=\"image.png\"><br><a name=\"falQG\"></a></p>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><p>知识点如下：</p>\n<ol>\n<li>node基础知识，相关api。</li>\n<li>工具</li>\n</ol>\n<ul>\n<li><a href=\"https://npm.alibaba-inc.com/package/@gitbeaker/node\">@gitbeaker&#x2F;node</a> gitlabapi交互库</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/bluebird\">bluebird</a> 三方Promise库</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/chalk\">chalk</a> 修改控制台字符样式</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/commander\">commander</a> 命令行工具开发组件</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/download-git-repo\">download-git-repo</a> 下载git远程仓库</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/inquirer\">inquirer</a> 控制台问询交互</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/ora\">ora</a> loading</li>\n</ul>\n<ol start=\"3\">\n<li>本地测试<ol>\n<li>tnpm link</li>\n</ol>\n</li>\n<li>发布<ol>\n<li>tnpm publish</li>\n</ol>\n</li>\n</ol>\n<p>​<br /><br><a name=\"gsPoA\"></a></p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tnpm i @alife/bqcli -g</span><br><span class=\"line\">bqcli create &lt;project&gt;</span><br></pre></td></tr></table></figure>\n<p>例如：<br /><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/279A0224-A202-4E9B-9DBE-951BA2B40440.png\" alt=\"image.png\"><br /><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/AD03CD8F-3F76-499E-A9C8-0CFE18989CFF.png\" alt=\"image.png\"><br /><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/945461ED-A844-4327-AC14-D9042814EB07.png\" alt=\"image.png\"></p>\n","site":{"data":{}},"length":324,"excerpt":"<p><a name=\"N4qT1\"></a></p>\n<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>目前团队新建项目基本靠人肉手工copy，为了解决这些重复无脑的事情，决定搞一个工具。<br />​</p>","more":"<p><a name=\"fNTxf\"></a></p>\n<h3 id=\"码前思考\"><a href=\"#码前思考\" class=\"headerlink\" title=\"码前思考\"></a>码前思考</h3><p>做之前，理一下思路，思路清晰之后，写代码就顺其自然了~<br />简单画个流程图。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/53C2D2BB-3837-4A01-AA64-70F372332235.png\" alt=\"image.png\"><br><a name=\"falQG\"></a></p>\n<h3 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h3><p>知识点如下：</p>\n<ol>\n<li>node基础知识，相关api。</li>\n<li>工具</li>\n</ol>\n<ul>\n<li><a href=\"https://npm.alibaba-inc.com/package/@gitbeaker/node\">@gitbeaker&#x2F;node</a> gitlabapi交互库</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/bluebird\">bluebird</a> 三方Promise库</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/chalk\">chalk</a> 修改控制台字符样式</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/commander\">commander</a> 命令行工具开发组件</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/download-git-repo\">download-git-repo</a> 下载git远程仓库</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/inquirer\">inquirer</a> 控制台问询交互</li>\n<li><a href=\"https://npm.alibaba-inc.com/package/ora\">ora</a> loading</li>\n</ul>\n<ol start=\"3\">\n<li>本地测试<ol>\n<li>tnpm link</li>\n</ol>\n</li>\n<li>发布<ol>\n<li>tnpm publish</li>\n</ol>\n</li>\n</ol>\n<p>​<br /><br><a name=\"gsPoA\"></a></p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tnpm i @alife/bqcli -g</span><br><span class=\"line\">bqcli create &lt;project&gt;</span><br></pre></td></tr></table></figure>\n<p>例如：<br /><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/279A0224-A202-4E9B-9DBE-951BA2B40440.png\" alt=\"image.png\"><br /><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/AD03CD8F-3F76-499E-A9C8-0CFE18989CFF.png\" alt=\"image.png\"><br /><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/945461ED-A844-4327-AC14-D9042814EB07.png\" alt=\"image.png\"></p>"},{"title":"对于国庆加班的一些想法","date":"2021-10-13T08:55:03.000Z","description":"加班","_content":"### 加班文化是什么\n每个公司都会有自己的加班文化，甚至来说每个团队都不一样，之前在某公司时，团队的加班文化就很难受，明明白天8小时就能搞定的事，硬要拖到晚上来加班，甚至到最后大家默认下班时间就是8.30。到现在也还没想明白，这样卷不累吗，收益很高吗？\n​<!-- more -->\n\n> **另一个，当团队出现大量「努力的表现努力」时，团队内卷就会加剧。**明明能 8 个小时的工作，最后都拖到 12 个小时完成，最后导致劣币驱逐良币，优秀的员工不断外逃。\n\n当然上述这种是不良的加班文化。\n也会有正向的加班氛围，19年996时老板说过一些话，我还记得比较清楚【我们要尽量跑的比竞对快一点，这样打战才有优势。】这种因为业务发展需要，人手不够，或者是紧急事项的导致短期内加班，是无可厚非的。我相信大部分人也都是认可的。\n\n\n### 能否不加班\n取决于人员配置，需求紧张程度。\n\n1. 人员充足+需求稳定=不加班\n1. 人员充足+需求紧张=偶尔加班\n1. 人员不够+需求稳定=偶尔加班\n1. 人员不够+需求紧张=频繁加班\n\n​\n\n理想的情况是1，难受的情况是4，我想我们团队目前是属于2.3之间。总的来说也还算可以，该做的事情做好，有事需要加班那就加，无事就随意安排。\n\n\n### 经典面试问题： 你如何看待加班？\n### 我觉得\n![image.png](https://intranetproxy.alipay.com/skylark/lark/0/2021/png/346581/1633769084429-808efb56-835a-4ec2-8b70-dd6545948704.png#clientId=u0e9a55eb-44db-4&from=paste&height=113&id=ub2baf9e9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=226&originWidth=242&originalType=binary&ratio=1&size=52657&status=done&style=none&taskId=u2587be24-e868-49d1-a23f-ceb95d8960e&width=121)\n一直加班的团队肯定是有问题的， 一直不加班的团队可能是有问题的，🐶。\n","source":"_posts/对于国庆加班的一些想法.md","raw":"---\ntitle: 对于国庆加班的一些想法\ndate: 2021-10-13 16:55:03\ncategories: 生活随笔\ntags: [随笔]\ndescription: 加班\n---\n### 加班文化是什么\n每个公司都会有自己的加班文化，甚至来说每个团队都不一样，之前在某公司时，团队的加班文化就很难受，明明白天8小时就能搞定的事，硬要拖到晚上来加班，甚至到最后大家默认下班时间就是8.30。到现在也还没想明白，这样卷不累吗，收益很高吗？\n​<!-- more -->\n\n> **另一个，当团队出现大量「努力的表现努力」时，团队内卷就会加剧。**明明能 8 个小时的工作，最后都拖到 12 个小时完成，最后导致劣币驱逐良币，优秀的员工不断外逃。\n\n当然上述这种是不良的加班文化。\n也会有正向的加班氛围，19年996时老板说过一些话，我还记得比较清楚【我们要尽量跑的比竞对快一点，这样打战才有优势。】这种因为业务发展需要，人手不够，或者是紧急事项的导致短期内加班，是无可厚非的。我相信大部分人也都是认可的。\n\n\n### 能否不加班\n取决于人员配置，需求紧张程度。\n\n1. 人员充足+需求稳定=不加班\n1. 人员充足+需求紧张=偶尔加班\n1. 人员不够+需求稳定=偶尔加班\n1. 人员不够+需求紧张=频繁加班\n\n​\n\n理想的情况是1，难受的情况是4，我想我们团队目前是属于2.3之间。总的来说也还算可以，该做的事情做好，有事需要加班那就加，无事就随意安排。\n\n\n### 经典面试问题： 你如何看待加班？\n### 我觉得\n![image.png](https://intranetproxy.alipay.com/skylark/lark/0/2021/png/346581/1633769084429-808efb56-835a-4ec2-8b70-dd6545948704.png#clientId=u0e9a55eb-44db-4&from=paste&height=113&id=ub2baf9e9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=226&originWidth=242&originalType=binary&ratio=1&size=52657&status=done&style=none&taskId=u2587be24-e868-49d1-a23f-ceb95d8960e&width=121)\n一直加班的团队肯定是有问题的， 一直不加班的团队可能是有问题的，🐶。\n","slug":"对于国庆加班的一些想法","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7ww003lr2ufb7oxeke9","content":"<h3 id=\"加班文化是什么\"><a href=\"#加班文化是什么\" class=\"headerlink\" title=\"加班文化是什么\"></a>加班文化是什么</h3><p>每个公司都会有自己的加班文化，甚至来说每个团队都不一样，之前在某公司时，团队的加班文化就很难受，明明白天8小时就能搞定的事，硬要拖到晚上来加班，甚至到最后大家默认下班时间就是8.30。到现在也还没想明白，这样卷不累吗，收益很高吗？<br>​<span id=\"more\"></span></p>\n<blockquote>\n<p><strong>另一个，当团队出现大量「努力的表现努力」时，团队内卷就会加剧。</strong>明明能 8 个小时的工作，最后都拖到 12 个小时完成，最后导致劣币驱逐良币，优秀的员工不断外逃。</p>\n</blockquote>\n<p>当然上述这种是不良的加班文化。<br>也会有正向的加班氛围，19年996时老板说过一些话，我还记得比较清楚【我们要尽量跑的比竞对快一点，这样打战才有优势。】这种因为业务发展需要，人手不够，或者是紧急事项的导致短期内加班，是无可厚非的。我相信大部分人也都是认可的。</p>\n<h3 id=\"能否不加班\"><a href=\"#能否不加班\" class=\"headerlink\" title=\"能否不加班\"></a>能否不加班</h3><p>取决于人员配置，需求紧张程度。</p>\n<ol>\n<li>人员充足+需求稳定&#x3D;不加班</li>\n<li>人员充足+需求紧张&#x3D;偶尔加班</li>\n<li>人员不够+需求稳定&#x3D;偶尔加班</li>\n<li>人员不够+需求紧张&#x3D;频繁加班</li>\n</ol>\n<p>​</p>\n<p>理想的情况是1，难受的情况是4，我想我们团队目前是属于2.3之间。总的来说也还算可以，该做的事情做好，有事需要加班那就加，无事就随意安排。</p>\n<h3 id=\"经典面试问题：-你如何看待加班？\"><a href=\"#经典面试问题：-你如何看待加班？\" class=\"headerlink\" title=\"经典面试问题： 你如何看待加班？\"></a>经典面试问题： 你如何看待加班？</h3><h3 id=\"我觉得\"><a href=\"#我觉得\" class=\"headerlink\" title=\"我觉得\"></a>我觉得</h3><p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/346581/1633769084429-808efb56-835a-4ec2-8b70-dd6545948704.png#clientId=u0e9a55eb-44db-4&from=paste&height=113&id=ub2baf9e9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=226&originWidth=242&originalType=binary&ratio=1&size=52657&status=done&style=none&taskId=u2587be24-e868-49d1-a23f-ceb95d8960e&width=121\" alt=\"image.png\"><br>一直加班的团队肯定是有问题的， 一直不加班的团队可能是有问题的，🐶。</p>\n","site":{"data":{}},"length":543,"excerpt":"<h3 id=\"加班文化是什么\"><a href=\"#加班文化是什么\" class=\"headerlink\" title=\"加班文化是什么\"></a>加班文化是什么</h3><p>每个公司都会有自己的加班文化，甚至来说每个团队都不一样，之前在某公司时，团队的加班文化就很难受，明明白天8小时就能搞定的事，硬要拖到晚上来加班，甚至到最后大家默认下班时间就是8.30。到现在也还没想明白，这样卷不累吗，收益很高吗？<br>​","more":"</p>\n<blockquote>\n<p><strong>另一个，当团队出现大量「努力的表现努力」时，团队内卷就会加剧。</strong>明明能 8 个小时的工作，最后都拖到 12 个小时完成，最后导致劣币驱逐良币，优秀的员工不断外逃。</p>\n</blockquote>\n<p>当然上述这种是不良的加班文化。<br>也会有正向的加班氛围，19年996时老板说过一些话，我还记得比较清楚【我们要尽量跑的比竞对快一点，这样打战才有优势。】这种因为业务发展需要，人手不够，或者是紧急事项的导致短期内加班，是无可厚非的。我相信大部分人也都是认可的。</p>\n<h3 id=\"能否不加班\"><a href=\"#能否不加班\" class=\"headerlink\" title=\"能否不加班\"></a>能否不加班</h3><p>取决于人员配置，需求紧张程度。</p>\n<ol>\n<li>人员充足+需求稳定&#x3D;不加班</li>\n<li>人员充足+需求紧张&#x3D;偶尔加班</li>\n<li>人员不够+需求稳定&#x3D;偶尔加班</li>\n<li>人员不够+需求紧张&#x3D;频繁加班</li>\n</ol>\n<p>​</p>\n<p>理想的情况是1，难受的情况是4，我想我们团队目前是属于2.3之间。总的来说也还算可以，该做的事情做好，有事需要加班那就加，无事就随意安排。</p>\n<h3 id=\"经典面试问题：-你如何看待加班？\"><a href=\"#经典面试问题：-你如何看待加班？\" class=\"headerlink\" title=\"经典面试问题： 你如何看待加班？\"></a>经典面试问题： 你如何看待加班？</h3><h3 id=\"我觉得\"><a href=\"#我觉得\" class=\"headerlink\" title=\"我觉得\"></a>我觉得</h3><p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2021/png/346581/1633769084429-808efb56-835a-4ec2-8b70-dd6545948704.png#clientId=u0e9a55eb-44db-4&from=paste&height=113&id=ub2baf9e9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=226&originWidth=242&originalType=binary&ratio=1&size=52657&status=done&style=none&taskId=u2587be24-e868-49d1-a23f-ceb95d8960e&width=121\" alt=\"image.png\"><br>一直加班的团队肯定是有问题的， 一直不加班的团队可能是有问题的，🐶。</p>"},{"title":"当你做一件事总被打断","date":"2022-01-10T16:00:00.000Z","description":"方法论~","top":null,"_content":"\n### 场景\n其实，我想说的是如何提高自己的专注力，因为被打断不可避免。\n最近工作中，经常有这样一些场景，思考 or coding时被各种打断，可能是外接的干扰，也可能是自我精神的神游。我觉得这大概就是专注力不够了，造成的原因分析下来有很多种，比如压力、焦虑、担忧和各种负面情绪，这些因素会直接影响人的专注能力。\n​\n<!-- more -->\n\n那么如何解决。。。\n​\n\n🤩。。。经过我多方调研和亲身实践后，有几种方法效果不错。\n### 大致的解法\n几个原则\n\n1. 设定具体目标，越细化越好\n1. 培养自己的潜意识\n1. 注意脑力放松\n\n​\n\n#### 设定具体目标\n设定具体目标这个原则，重点就是细化，要把目标完成时间细化到分钟级别内。这样目标就越清晰不容易丢失，也就不会出现容易神游的场面了。。比如我之前的场景，有个想法是想改版我的博客，然后一直没去细化要改版到什么程度，然后想着想着就神游了。后面细化后，就是我要改xxx，这些怎么做，那些怎么做，大概每个点要花多久，这些想清楚了就不容易神游了，也会更专注的处理每个节点。\n\n\n#### 潜意识\n人的潜意识是很重的。一般通过习惯养成，就是培养自己的固定时间段，比如工作日上午处理哪类事情，下午处理哪类事情等。习惯形成后，到了固定时间，潜意识就会提示你该专注干某个事情了。\n​\n\n#### 脑力放松\n研究表明，脑力会随时间越长专注度越低，尽量减少长时间用脑，容易造成损伤，脑力专注度不够等问题。\n一般集中脑力处理时长达到2小时，就应该让脑子休息了，休息时长也不宜过长，几分钟即可。\n​\n\n### 可实践的\n几类方式\n\n1. 冥想\n1. 有氧运动\n1. 训练\n\n冥想我试过，主要是脑力放松。效果还可以，当想专心做一件事之前，先冥想几分钟效果还可以。\n有氧运动我没啥感知，不过别人说效果挺好，据说能提升专注力。。\n训练方式，网上一搜一大堆，我这里说我实践过的，体验还行，有点效果，感觉明显比之前要好。。\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image-0111.png)\n闭上双眼,想象出一条两边都植了树的路。视线由近及远，一排一排地想过去。两棵、两棵、再两棵。\n随着视线慢慢远去，树之间的距离越来越短，直到尽头，那两棵树变成了一个点。\n​\n\n按照上面做完之后，可能会出现脑袋一片漆黑，过几分钟就明朗了。😂\n​\n\n### 参考\n[How To Concentrate Like Einstein](https://book.douban.com/subject/26698787/)\n","source":"_posts/当你做一件事总被打断.md","raw":"---\ntitle: 当你做一件事总被打断\ndate: 2022-01-11\ncategories: 生活随笔\ntags: [随笔]\ndescription: 方法论~\ntop:\n---\n\n### 场景\n其实，我想说的是如何提高自己的专注力，因为被打断不可避免。\n最近工作中，经常有这样一些场景，思考 or coding时被各种打断，可能是外接的干扰，也可能是自我精神的神游。我觉得这大概就是专注力不够了，造成的原因分析下来有很多种，比如压力、焦虑、担忧和各种负面情绪，这些因素会直接影响人的专注能力。\n​\n<!-- more -->\n\n那么如何解决。。。\n​\n\n🤩。。。经过我多方调研和亲身实践后，有几种方法效果不错。\n### 大致的解法\n几个原则\n\n1. 设定具体目标，越细化越好\n1. 培养自己的潜意识\n1. 注意脑力放松\n\n​\n\n#### 设定具体目标\n设定具体目标这个原则，重点就是细化，要把目标完成时间细化到分钟级别内。这样目标就越清晰不容易丢失，也就不会出现容易神游的场面了。。比如我之前的场景，有个想法是想改版我的博客，然后一直没去细化要改版到什么程度，然后想着想着就神游了。后面细化后，就是我要改xxx，这些怎么做，那些怎么做，大概每个点要花多久，这些想清楚了就不容易神游了，也会更专注的处理每个节点。\n\n\n#### 潜意识\n人的潜意识是很重的。一般通过习惯养成，就是培养自己的固定时间段，比如工作日上午处理哪类事情，下午处理哪类事情等。习惯形成后，到了固定时间，潜意识就会提示你该专注干某个事情了。\n​\n\n#### 脑力放松\n研究表明，脑力会随时间越长专注度越低，尽量减少长时间用脑，容易造成损伤，脑力专注度不够等问题。\n一般集中脑力处理时长达到2小时，就应该让脑子休息了，休息时长也不宜过长，几分钟即可。\n​\n\n### 可实践的\n几类方式\n\n1. 冥想\n1. 有氧运动\n1. 训练\n\n冥想我试过，主要是脑力放松。效果还可以，当想专心做一件事之前，先冥想几分钟效果还可以。\n有氧运动我没啥感知，不过别人说效果挺好，据说能提升专注力。。\n训练方式，网上一搜一大堆，我这里说我实践过的，体验还行，有点效果，感觉明显比之前要好。。\n![image.png](https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image-0111.png)\n闭上双眼,想象出一条两边都植了树的路。视线由近及远，一排一排地想过去。两棵、两棵、再两棵。\n随着视线慢慢远去，树之间的距离越来越短，直到尽头，那两棵树变成了一个点。\n​\n\n按照上面做完之后，可能会出现脑袋一片漆黑，过几分钟就明朗了。😂\n​\n\n### 参考\n[How To Concentrate Like Einstein](https://book.douban.com/subject/26698787/)\n","slug":"当你做一件事总被打断","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wx003or2ufdba51vva","content":"<h3 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h3><p>其实，我想说的是如何提高自己的专注力，因为被打断不可避免。<br>最近工作中，经常有这样一些场景，思考 or coding时被各种打断，可能是外接的干扰，也可能是自我精神的神游。我觉得这大概就是专注力不够了，造成的原因分析下来有很多种，比如压力、焦虑、担忧和各种负面情绪，这些因素会直接影响人的专注能力。<br>​</p>\n<span id=\"more\"></span>\n\n<p>那么如何解决。。。<br>​</p>\n<p>🤩。。。经过我多方调研和亲身实践后，有几种方法效果不错。</p>\n<h3 id=\"大致的解法\"><a href=\"#大致的解法\" class=\"headerlink\" title=\"大致的解法\"></a>大致的解法</h3><p>几个原则</p>\n<ol>\n<li>设定具体目标，越细化越好</li>\n<li>培养自己的潜意识</li>\n<li>注意脑力放松</li>\n</ol>\n<p>​</p>\n<h4 id=\"设定具体目标\"><a href=\"#设定具体目标\" class=\"headerlink\" title=\"设定具体目标\"></a>设定具体目标</h4><p>设定具体目标这个原则，重点就是细化，要把目标完成时间细化到分钟级别内。这样目标就越清晰不容易丢失，也就不会出现容易神游的场面了。。比如我之前的场景，有个想法是想改版我的博客，然后一直没去细化要改版到什么程度，然后想着想着就神游了。后面细化后，就是我要改xxx，这些怎么做，那些怎么做，大概每个点要花多久，这些想清楚了就不容易神游了，也会更专注的处理每个节点。</p>\n<h4 id=\"潜意识\"><a href=\"#潜意识\" class=\"headerlink\" title=\"潜意识\"></a>潜意识</h4><p>人的潜意识是很重的。一般通过习惯养成，就是培养自己的固定时间段，比如工作日上午处理哪类事情，下午处理哪类事情等。习惯形成后，到了固定时间，潜意识就会提示你该专注干某个事情了。<br>​</p>\n<h4 id=\"脑力放松\"><a href=\"#脑力放松\" class=\"headerlink\" title=\"脑力放松\"></a>脑力放松</h4><p>研究表明，脑力会随时间越长专注度越低，尽量减少长时间用脑，容易造成损伤，脑力专注度不够等问题。<br>一般集中脑力处理时长达到2小时，就应该让脑子休息了，休息时长也不宜过长，几分钟即可。<br>​</p>\n<h3 id=\"可实践的\"><a href=\"#可实践的\" class=\"headerlink\" title=\"可实践的\"></a>可实践的</h3><p>几类方式</p>\n<ol>\n<li>冥想</li>\n<li>有氧运动</li>\n<li>训练</li>\n</ol>\n<p>冥想我试过，主要是脑力放松。效果还可以，当想专心做一件事之前，先冥想几分钟效果还可以。<br>有氧运动我没啥感知，不过别人说效果挺好，据说能提升专注力。。<br>训练方式，网上一搜一大堆，我这里说我实践过的，体验还行，有点效果，感觉明显比之前要好。。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image-0111.png\" alt=\"image.png\"><br>闭上双眼,想象出一条两边都植了树的路。视线由近及远，一排一排地想过去。两棵、两棵、再两棵。<br>随着视线慢慢远去，树之间的距离越来越短，直到尽头，那两棵树变成了一个点。<br>​</p>\n<p>按照上面做完之后，可能会出现脑袋一片漆黑，过几分钟就明朗了。😂<br>​</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://book.douban.com/subject/26698787/\">How To Concentrate Like Einstein</a></p>\n","site":{"data":{}},"length":872,"excerpt":"<h3 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h3><p>其实，我想说的是如何提高自己的专注力，因为被打断不可避免。<br>最近工作中，经常有这样一些场景，思考 or coding时被各种打断，可能是外接的干扰，也可能是自我精神的神游。我觉得这大概就是专注力不够了，造成的原因分析下来有很多种，比如压力、焦虑、担忧和各种负面情绪，这些因素会直接影响人的专注能力。<br>​</p>","more":"<p>那么如何解决。。。<br>​</p>\n<p>🤩。。。经过我多方调研和亲身实践后，有几种方法效果不错。</p>\n<h3 id=\"大致的解法\"><a href=\"#大致的解法\" class=\"headerlink\" title=\"大致的解法\"></a>大致的解法</h3><p>几个原则</p>\n<ol>\n<li>设定具体目标，越细化越好</li>\n<li>培养自己的潜意识</li>\n<li>注意脑力放松</li>\n</ol>\n<p>​</p>\n<h4 id=\"设定具体目标\"><a href=\"#设定具体目标\" class=\"headerlink\" title=\"设定具体目标\"></a>设定具体目标</h4><p>设定具体目标这个原则，重点就是细化，要把目标完成时间细化到分钟级别内。这样目标就越清晰不容易丢失，也就不会出现容易神游的场面了。。比如我之前的场景，有个想法是想改版我的博客，然后一直没去细化要改版到什么程度，然后想着想着就神游了。后面细化后，就是我要改xxx，这些怎么做，那些怎么做，大概每个点要花多久，这些想清楚了就不容易神游了，也会更专注的处理每个节点。</p>\n<h4 id=\"潜意识\"><a href=\"#潜意识\" class=\"headerlink\" title=\"潜意识\"></a>潜意识</h4><p>人的潜意识是很重的。一般通过习惯养成，就是培养自己的固定时间段，比如工作日上午处理哪类事情，下午处理哪类事情等。习惯形成后，到了固定时间，潜意识就会提示你该专注干某个事情了。<br>​</p>\n<h4 id=\"脑力放松\"><a href=\"#脑力放松\" class=\"headerlink\" title=\"脑力放松\"></a>脑力放松</h4><p>研究表明，脑力会随时间越长专注度越低，尽量减少长时间用脑，容易造成损伤，脑力专注度不够等问题。<br>一般集中脑力处理时长达到2小时，就应该让脑子休息了，休息时长也不宜过长，几分钟即可。<br>​</p>\n<h3 id=\"可实践的\"><a href=\"#可实践的\" class=\"headerlink\" title=\"可实践的\"></a>可实践的</h3><p>几类方式</p>\n<ol>\n<li>冥想</li>\n<li>有氧运动</li>\n<li>训练</li>\n</ol>\n<p>冥想我试过，主要是脑力放松。效果还可以，当想专心做一件事之前，先冥想几分钟效果还可以。<br>有氧运动我没啥感知，不过别人说效果挺好，据说能提升专注力。。<br>训练方式，网上一搜一大堆，我这里说我实践过的，体验还行，有点效果，感觉明显比之前要好。。<br><img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/image-0111.png\" alt=\"image.png\"><br>闭上双眼,想象出一条两边都植了树的路。视线由近及远，一排一排地想过去。两棵、两棵、再两棵。<br>随着视线慢慢远去，树之间的距离越来越短，直到尽头，那两棵树变成了一个点。<br>​</p>\n<p>按照上面做完之后，可能会出现脑袋一片漆黑，过几分钟就明朗了。😂<br>​</p>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://book.douban.com/subject/26698787/\">How To Concentrate Like Einstein</a></p>"},{"title":"js计算网页滚动高度","date":"2017-03-17T16:00:00.000Z","description":"js中滚动条高度","_content":"### 网页滚动高度\n判断滚动条到底部，需要用到DOM的三个属性值，即scrollTop、clientHeight、scrollHeight。\n<!-- more -->\nscrollTop为滚动条在Y轴上的滚动距离。\nclientHeight为内容可视区域的高度。\nscrollHeight为内容可视区域的高度加上溢出（滚动）的距离。\n从这个三个属性的介绍就可以看出来，滚动条到底部的条件即为scrollTop + clientHeight == scrollHeight。\n废话不多少说，赶紧上代码（兼容不同的浏览器）。\n```javascript\n//滚动条在Y轴上的滚动距离\n\tfunction getScrollTop(){\n\t　　var scrollTop = 0, bodyScrollTop = 0, documentScrollTop = 0;\n\t　　if(document.body){\n\t　　　　bodyScrollTop = document.body.scrollTop;\n\t　　}\n\t　　if(document.documentElement){\n\t　　　　documentScrollTop = document.documentElement.scrollTop;\n\t　　}\n\t　　scrollTop = (bodyScrollTop - documentScrollTop > 0) ? bodyScrollTop : documentScrollTop;\n\t　　return scrollTop;\n\t}\n\t//文档的总高度\n\tfunction getScrollHeight(){\n\t　　var scrollHeight = 0, bodyScrollHeight = 0, documentScrollHeight = 0;\n\t　　if(document.body){\n\t　　　　bodyScrollHeight = document.body.scrollHeight;\n\t　　}\n\t　　if(document.documentElement){\n\t　　　　documentScrollHeight = document.documentElement.scrollHeight;\n\t　　}\n\t　　scrollHeight = (bodyScrollHeight - documentScrollHeight > 0) ? bodyScrollHeight : documentScrollHeight;\n\t　　return scrollHeight;\n\t}\n\t//浏览器视口的高度\n\tfunction getWindowHeight(){\n\t　　var windowHeight = 0;\n\t　　if(document.compatMode == \"CSS1Compat\"){\n\t　　　　windowHeight = document.documentElement.clientHeight;\n\t　　}else{\n\t　　　　windowHeight = document.body.clientHeight;\n\t　　}\n\t　　return windowHeight;\n\t}\n\twindow.onscroll = function(){\n\t　　if(getScrollTop() + getWindowHeight() == getScrollHeight()){\n\t　　　　alert(\"you are in the bottom!\");\n\t　　}\n\t};\n\t//Jq写法\n\t$(window).scroll(function(){\n\t　　var scrollTop = $(this).scrollTop();\n\t　　var scrollHeight = $(document).height();\n\t　　var windowHeight = $(this).height();\n\t　　if(scrollTop + windowHeight == scrollHeight){\n\t　　　　alert(\"you are in the bottom\");\n\t　　}\n\t});\n```\n如果要判断在某一个元素中的滚动条是否到底部，根据类似的思想，将document.body换成特定的元素即可，获取scrollTop和scrollHeight的方式是一样的，但是获取元素可见高度需要用到offsetHeight属性，直接依葫芦画瓢即可。\n>[http://www.jb51.net/article/42744.htm](http://www.jb51.net/article/42744.htm)\n","source":"_posts/网页滚动高度判断.md","raw":"---\ntitle: js计算网页滚动高度\ndate: 2017-03-18\ncategories: [前端,javascript]\ntags: [JavaScript]\ndescription: js中滚动条高度\n---\n### 网页滚动高度\n判断滚动条到底部，需要用到DOM的三个属性值，即scrollTop、clientHeight、scrollHeight。\n<!-- more -->\nscrollTop为滚动条在Y轴上的滚动距离。\nclientHeight为内容可视区域的高度。\nscrollHeight为内容可视区域的高度加上溢出（滚动）的距离。\n从这个三个属性的介绍就可以看出来，滚动条到底部的条件即为scrollTop + clientHeight == scrollHeight。\n废话不多少说，赶紧上代码（兼容不同的浏览器）。\n```javascript\n//滚动条在Y轴上的滚动距离\n\tfunction getScrollTop(){\n\t　　var scrollTop = 0, bodyScrollTop = 0, documentScrollTop = 0;\n\t　　if(document.body){\n\t　　　　bodyScrollTop = document.body.scrollTop;\n\t　　}\n\t　　if(document.documentElement){\n\t　　　　documentScrollTop = document.documentElement.scrollTop;\n\t　　}\n\t　　scrollTop = (bodyScrollTop - documentScrollTop > 0) ? bodyScrollTop : documentScrollTop;\n\t　　return scrollTop;\n\t}\n\t//文档的总高度\n\tfunction getScrollHeight(){\n\t　　var scrollHeight = 0, bodyScrollHeight = 0, documentScrollHeight = 0;\n\t　　if(document.body){\n\t　　　　bodyScrollHeight = document.body.scrollHeight;\n\t　　}\n\t　　if(document.documentElement){\n\t　　　　documentScrollHeight = document.documentElement.scrollHeight;\n\t　　}\n\t　　scrollHeight = (bodyScrollHeight - documentScrollHeight > 0) ? bodyScrollHeight : documentScrollHeight;\n\t　　return scrollHeight;\n\t}\n\t//浏览器视口的高度\n\tfunction getWindowHeight(){\n\t　　var windowHeight = 0;\n\t　　if(document.compatMode == \"CSS1Compat\"){\n\t　　　　windowHeight = document.documentElement.clientHeight;\n\t　　}else{\n\t　　　　windowHeight = document.body.clientHeight;\n\t　　}\n\t　　return windowHeight;\n\t}\n\twindow.onscroll = function(){\n\t　　if(getScrollTop() + getWindowHeight() == getScrollHeight()){\n\t　　　　alert(\"you are in the bottom!\");\n\t　　}\n\t};\n\t//Jq写法\n\t$(window).scroll(function(){\n\t　　var scrollTop = $(this).scrollTop();\n\t　　var scrollHeight = $(document).height();\n\t　　var windowHeight = $(this).height();\n\t　　if(scrollTop + windowHeight == scrollHeight){\n\t　　　　alert(\"you are in the bottom\");\n\t　　}\n\t});\n```\n如果要判断在某一个元素中的滚动条是否到底部，根据类似的思想，将document.body换成特定的元素即可，获取scrollTop和scrollHeight的方式是一样的，但是获取元素可见高度需要用到offsetHeight属性，直接依葫芦画瓢即可。\n>[http://www.jb51.net/article/42744.htm](http://www.jb51.net/article/42744.htm)\n","slug":"网页滚动高度判断","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wx003tr2uf806j915j","content":"<h3 id=\"网页滚动高度\"><a href=\"#网页滚动高度\" class=\"headerlink\" title=\"网页滚动高度\"></a>网页滚动高度</h3><p>判断滚动条到底部，需要用到DOM的三个属性值，即scrollTop、clientHeight、scrollHeight。</p>\n<span id=\"more\"></span>\n<p>scrollTop为滚动条在Y轴上的滚动距离。<br>clientHeight为内容可视区域的高度。<br>scrollHeight为内容可视区域的高度加上溢出（滚动）的距离。<br>从这个三个属性的介绍就可以看出来，滚动条到底部的条件即为scrollTop + clientHeight &#x3D;&#x3D; scrollHeight。<br>废话不多少说，赶紧上代码（兼容不同的浏览器）。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//滚动条在Y轴上的滚动距离</span></span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">getScrollTop</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>, bodyScrollTop = <span class=\"number\">0</span>, documentScrollTop = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>)&#123;</span><br><span class=\"line\">\t　　　　bodyScrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>)&#123;</span><br><span class=\"line\">\t　　　　documentScrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t　　scrollTop = (bodyScrollTop - documentScrollTop &gt; <span class=\"number\">0</span>) ? bodyScrollTop : documentScrollTop;</span><br><span class=\"line\">\t　　<span class=\"keyword\">return</span> scrollTop;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//文档的总高度</span></span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">getScrollHeight</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> scrollHeight = <span class=\"number\">0</span>, bodyScrollHeight = <span class=\"number\">0</span>, documentScrollHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>)&#123;</span><br><span class=\"line\">\t　　　　bodyScrollHeight = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollHeight</span>;</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>)&#123;</span><br><span class=\"line\">\t　　　　documentScrollHeight = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollHeight</span>;</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t　　scrollHeight = (bodyScrollHeight - documentScrollHeight &gt; <span class=\"number\">0</span>) ? bodyScrollHeight : documentScrollHeight;</span><br><span class=\"line\">\t　　<span class=\"keyword\">return</span> scrollHeight;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//浏览器视口的高度</span></span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">getWindowHeight</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> windowHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">compatMode</span> == <span class=\"string\">&quot;CSS1Compat&quot;</span>)&#123;</span><br><span class=\"line\">\t　　　　windowHeight = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>;</span><br><span class=\"line\">\t　　&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t　　　　windowHeight = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">clientHeight</span>;</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t　　<span class=\"keyword\">return</span> windowHeight;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"title function_\">getScrollTop</span>() + <span class=\"title function_\">getWindowHeight</span>() == <span class=\"title function_\">getScrollHeight</span>())&#123;</span><br><span class=\"line\">\t　　　　<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;you are in the bottom!&quot;</span>);</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t<span class=\"comment\">//Jq写法</span></span><br><span class=\"line\">\t$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">scroll</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> scrollTop = $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">scrollTop</span>();</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> scrollHeight = $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">height</span>();</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> windowHeight = $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">height</span>();</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(scrollTop + windowHeight == scrollHeight)&#123;</span><br><span class=\"line\">\t　　　　<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;you are in the bottom&quot;</span>);</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果要判断在某一个元素中的滚动条是否到底部，根据类似的思想，将document.body换成特定的元素即可，获取scrollTop和scrollHeight的方式是一样的，但是获取元素可见高度需要用到offsetHeight属性，直接依葫芦画瓢即可。</p>\n<blockquote>\n<p><a href=\"http://www.jb51.net/article/42744.htm\">http://www.jb51.net/article/42744.htm</a></p>\n</blockquote>\n","site":{"data":{}},"length":1874,"excerpt":"<h3 id=\"网页滚动高度\"><a href=\"#网页滚动高度\" class=\"headerlink\" title=\"网页滚动高度\"></a>网页滚动高度</h3><p>判断滚动条到底部，需要用到DOM的三个属性值，即scrollTop、clientHeight、scrollHeight。</p>","more":"<p>scrollTop为滚动条在Y轴上的滚动距离。<br>clientHeight为内容可视区域的高度。<br>scrollHeight为内容可视区域的高度加上溢出（滚动）的距离。<br>从这个三个属性的介绍就可以看出来，滚动条到底部的条件即为scrollTop + clientHeight &#x3D;&#x3D; scrollHeight。<br>废话不多少说，赶紧上代码（兼容不同的浏览器）。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//滚动条在Y轴上的滚动距离</span></span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">getScrollTop</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> scrollTop = <span class=\"number\">0</span>, bodyScrollTop = <span class=\"number\">0</span>, documentScrollTop = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>)&#123;</span><br><span class=\"line\">\t　　　　bodyScrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>)&#123;</span><br><span class=\"line\">\t　　　　documentScrollTop = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>;</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t　　scrollTop = (bodyScrollTop - documentScrollTop &gt; <span class=\"number\">0</span>) ? bodyScrollTop : documentScrollTop;</span><br><span class=\"line\">\t　　<span class=\"keyword\">return</span> scrollTop;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//文档的总高度</span></span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">getScrollHeight</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> scrollHeight = <span class=\"number\">0</span>, bodyScrollHeight = <span class=\"number\">0</span>, documentScrollHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>)&#123;</span><br><span class=\"line\">\t　　　　bodyScrollHeight = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollHeight</span>;</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>)&#123;</span><br><span class=\"line\">\t　　　　documentScrollHeight = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollHeight</span>;</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t　　scrollHeight = (bodyScrollHeight - documentScrollHeight &gt; <span class=\"number\">0</span>) ? bodyScrollHeight : documentScrollHeight;</span><br><span class=\"line\">\t　　<span class=\"keyword\">return</span> scrollHeight;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//浏览器视口的高度</span></span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">getWindowHeight</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> windowHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">compatMode</span> == <span class=\"string\">&quot;CSS1Compat&quot;</span>)&#123;</span><br><span class=\"line\">\t　　　　windowHeight = <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">clientHeight</span>;</span><br><span class=\"line\">\t　　&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t　　　　windowHeight = <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">clientHeight</span>;</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t　　<span class=\"keyword\">return</span> windowHeight;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"variable language_\">window</span>.<span class=\"property\">onscroll</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(<span class=\"title function_\">getScrollTop</span>() + <span class=\"title function_\">getWindowHeight</span>() == <span class=\"title function_\">getScrollHeight</span>())&#123;</span><br><span class=\"line\">\t　　　　<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;you are in the bottom!&quot;</span>);</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\t<span class=\"comment\">//Jq写法</span></span><br><span class=\"line\">\t$(<span class=\"variable language_\">window</span>).<span class=\"title function_\">scroll</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> scrollTop = $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">scrollTop</span>();</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> scrollHeight = $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">height</span>();</span><br><span class=\"line\">\t　　<span class=\"keyword\">var</span> windowHeight = $(<span class=\"variable language_\">this</span>).<span class=\"title function_\">height</span>();</span><br><span class=\"line\">\t　　<span class=\"keyword\">if</span>(scrollTop + windowHeight == scrollHeight)&#123;</span><br><span class=\"line\">\t　　　　<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;you are in the bottom&quot;</span>);</span><br><span class=\"line\">\t　　&#125;</span><br><span class=\"line\">\t&#125;);</span><br></pre></td></tr></table></figure>\n<p>如果要判断在某一个元素中的滚动条是否到底部，根据类似的思想，将document.body换成特定的元素即可，获取scrollTop和scrollHeight的方式是一样的，但是获取元素可见高度需要用到offsetHeight属性，直接依葫芦画瓢即可。</p>\n<blockquote>\n<p><a href=\"http://www.jb51.net/article/42744.htm\">http://www.jb51.net/article/42744.htm</a></p>\n</blockquote>"},{"title":"独处","date":"2018-11-01T16:00:00.000Z","description":"独处与反思~","_content":"\n### 思索\n你想要变成什么样的人？\n<!--more-->\n### 理想\n* 踏实\n* 上进\n* 有目标\n* 有计划\n---\n### 现实\n* 浮躁\n* 懒惰\n* 安于现状\n* 不思进取\n---\n### 身心疲惫\n生活本不应该是这样，没有认清自己？\n到底怎么了？有没有正视过自己的内心啊。\n加班成常态，晚上熬夜也成习惯，身体还能扛多久啊。\n内心煎熬，穷？感情？犹豫不决？\n\n---\n### 改变\n要去除一些杂乱的感情、\b放弃一些无意义的事情、不消沉\n要\b正视自我、追求自我内心、不迷茫\n要\b果敢、坚定、不优柔寡断\n要努力、踏实、不\b懒散\n我觉得这一年过的很一般，甚至有点难受。\n我要改变。\n\n\n\n\n","source":"_posts/独处与反思.md","raw":"---\ntitle: 独处\ndate: 2018-11-02\ncategories: 生活随笔\ntags: [随笔]\ndescription: 独处与反思~\n---\n\n### 思索\n你想要变成什么样的人？\n<!--more-->\n### 理想\n* 踏实\n* 上进\n* 有目标\n* 有计划\n---\n### 现实\n* 浮躁\n* 懒惰\n* 安于现状\n* 不思进取\n---\n### 身心疲惫\n生活本不应该是这样，没有认清自己？\n到底怎么了？有没有正视过自己的内心啊。\n加班成常态，晚上熬夜也成习惯，身体还能扛多久啊。\n内心煎熬，穷？感情？犹豫不决？\n\n---\n### 改变\n要去除一些杂乱的感情、\b放弃一些无意义的事情、不消沉\n要\b正视自我、追求自我内心、不迷茫\n要\b果敢、坚定、不优柔寡断\n要努力、踏实、不\b懒散\n我觉得这一年过的很一般，甚至有点难受。\n我要改变。\n\n\n\n\n","slug":"独处与反思","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wy003wr2uffd1w5zye","content":"<h3 id=\"思索\"><a href=\"#思索\" class=\"headerlink\" title=\"思索\"></a>思索</h3><p>你想要变成什么样的人？</p>\n<span id=\"more\"></span>\n<h3 id=\"理想\"><a href=\"#理想\" class=\"headerlink\" title=\"理想\"></a>理想</h3><ul>\n<li>踏实</li>\n<li>上进</li>\n<li>有目标</li>\n<li>有计划</li>\n</ul>\n<hr>\n<h3 id=\"现实\"><a href=\"#现实\" class=\"headerlink\" title=\"现实\"></a>现实</h3><ul>\n<li>浮躁</li>\n<li>懒惰</li>\n<li>安于现状</li>\n<li>不思进取</li>\n</ul>\n<hr>\n<h3 id=\"身心疲惫\"><a href=\"#身心疲惫\" class=\"headerlink\" title=\"身心疲惫\"></a>身心疲惫</h3><p>生活本不应该是这样，没有认清自己？<br>到底怎么了？有没有正视过自己的内心啊。<br>加班成常态，晚上熬夜也成习惯，身体还能扛多久啊。<br>内心煎熬，穷？感情？犹豫不决？</p>\n<hr>\n<h3 id=\"改变\"><a href=\"#改变\" class=\"headerlink\" title=\"改变\"></a>改变</h3><p>要去除一些杂乱的感情、\b放弃一些无意义的事情、不消沉<br>要\b正视自我、追求自我内心、不迷茫<br>要\b果敢、坚定、不优柔寡断<br>要努力、踏实、不\b懒散<br>我觉得这一年过的很一般，甚至有点难受。<br>我要改变。</p>\n","site":{"data":{}},"length":211,"excerpt":"<h3 id=\"思索\"><a href=\"#思索\" class=\"headerlink\" title=\"思索\"></a>思索</h3><p>你想要变成什么样的人？</p>","more":"<h3 id=\"理想\"><a href=\"#理想\" class=\"headerlink\" title=\"理想\"></a>理想</h3><ul>\n<li>踏实</li>\n<li>上进</li>\n<li>有目标</li>\n<li>有计划</li>\n</ul>\n<hr>\n<h3 id=\"现实\"><a href=\"#现实\" class=\"headerlink\" title=\"现实\"></a>现实</h3><ul>\n<li>浮躁</li>\n<li>懒惰</li>\n<li>安于现状</li>\n<li>不思进取</li>\n</ul>\n<hr>\n<h3 id=\"身心疲惫\"><a href=\"#身心疲惫\" class=\"headerlink\" title=\"身心疲惫\"></a>身心疲惫</h3><p>生活本不应该是这样，没有认清自己？<br>到底怎么了？有没有正视过自己的内心啊。<br>加班成常态，晚上熬夜也成习惯，身体还能扛多久啊。<br>内心煎熬，穷？感情？犹豫不决？</p>\n<hr>\n<h3 id=\"改变\"><a href=\"#改变\" class=\"headerlink\" title=\"改变\"></a>改变</h3><p>要去除一些杂乱的感情、\b放弃一些无意义的事情、不消沉<br>要\b正视自我、追求自我内心、不迷茫<br>要\b果敢、坚定、不优柔寡断<br>要努力、踏实、不\b懒散<br>我觉得这一年过的很一般，甚至有点难受。<br>我要改变。</p>"},{"title":"设计模式-观察者与发布订阅模式","date":"2021-01-02T16:00:00.000Z","description":"设计模式-观察者与发布订阅模式","_content":"\n<a name=\"xFhxr\"></a>\n### 观察者模式\n观察者模式定义了对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知，并自动更新。观察者模式属于行为型模式，行为型模式关注的是对象之间的通讯，观察者模式就是观察者和被观察者之间的通讯。\n<!-- more -->\n\n<a name=\"JARrz\"></a>\n### 发布-订阅模式\n观察者模式有一个别名叫“发布-订阅模式”，或者说是“订阅-发布模式”，订阅者和订阅目标是联系在一起的，当订阅目标发生改变时，逐个通知订阅者。我们可以用报纸期刊的订阅来形象的说明，当你订阅了一份报纸，每天都会有一份最新的报纸送到你手上，有多少人订阅报纸，报社就会发多少份报纸，报社和订报纸的客户就是上面文章开头所说的“一对多”的依赖关系。\n\n在现在的发布订阅模式中，称为发布者的消息发送者不会将消息直接发送给订阅者，这意味着发布者和订阅者不知道彼此的存在。在发布者和订阅者之间存在第三个组件，称为消息代理或调度中心或中间件，它维持着发布者和订阅者之间的联系，过滤所有发布者传入的消息并相应地分发它们给订阅者。\n\n举一个例子，你在微博上关注了A，同时其他很多人也关注了A，那么当A发布动态的时候，微博就会为你们推送这条动态。A就是发布者，你是订阅者，微博就是调度中心，你和A是没有直接的消息往来的，全是通过微博来协调的（你的关注，A的发布动态）。\n\n<a name=\"VBliz\"></a>\n### 二者之间的区别\n\n![设计模式-观察者.png](https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.png)\n\n\n**观察者模式：**观察者（Observer）直接订阅（Subscribe）主题（Subject），而当主题被激活的时候，会触发（Fire Event）观察者里的事件。\n\n**发布订阅模式：**订阅者（Subscriber）把自己想订阅的事件注册（Subscribe）到调度中心（Topic），当发布者（Publisher）发布该事件（Publish topic）到调度中心，也就是该事件触发时，由调度中心统一调度（Fire Event）订阅者注册到调度中心的处理代码。\n\n<a name=\"ZUPz3\"></a>\n### 从vue源码解读观察者模式\n> [https://github.com/vuejs/vue/tree/dev/src/core/observer](https://github.com/vuejs/vue/tree/dev/src/core/observer)\n> [https://blog.csdn.net/github_36369819/article/details/79201314](https://blog.csdn.net/github_36369819/article/details/79201314)\n\n","source":"_posts/设计模式-观察者与发布订阅模式.md","raw":"---\ntitle: 设计模式-观察者与发布订阅模式\ndate: 2021-01-03\ncategories: 设计模式\ntags: [设计模式,前端]\ndescription: 设计模式-观察者与发布订阅模式\n---\n\n<a name=\"xFhxr\"></a>\n### 观察者模式\n观察者模式定义了对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知，并自动更新。观察者模式属于行为型模式，行为型模式关注的是对象之间的通讯，观察者模式就是观察者和被观察者之间的通讯。\n<!-- more -->\n\n<a name=\"JARrz\"></a>\n### 发布-订阅模式\n观察者模式有一个别名叫“发布-订阅模式”，或者说是“订阅-发布模式”，订阅者和订阅目标是联系在一起的，当订阅目标发生改变时，逐个通知订阅者。我们可以用报纸期刊的订阅来形象的说明，当你订阅了一份报纸，每天都会有一份最新的报纸送到你手上，有多少人订阅报纸，报社就会发多少份报纸，报社和订报纸的客户就是上面文章开头所说的“一对多”的依赖关系。\n\n在现在的发布订阅模式中，称为发布者的消息发送者不会将消息直接发送给订阅者，这意味着发布者和订阅者不知道彼此的存在。在发布者和订阅者之间存在第三个组件，称为消息代理或调度中心或中间件，它维持着发布者和订阅者之间的联系，过滤所有发布者传入的消息并相应地分发它们给订阅者。\n\n举一个例子，你在微博上关注了A，同时其他很多人也关注了A，那么当A发布动态的时候，微博就会为你们推送这条动态。A就是发布者，你是订阅者，微博就是调度中心，你和A是没有直接的消息往来的，全是通过微博来协调的（你的关注，A的发布动态）。\n\n<a name=\"VBliz\"></a>\n### 二者之间的区别\n\n![设计模式-观察者.png](https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.png)\n\n\n**观察者模式：**观察者（Observer）直接订阅（Subscribe）主题（Subject），而当主题被激活的时候，会触发（Fire Event）观察者里的事件。\n\n**发布订阅模式：**订阅者（Subscriber）把自己想订阅的事件注册（Subscribe）到调度中心（Topic），当发布者（Publisher）发布该事件（Publish topic）到调度中心，也就是该事件触发时，由调度中心统一调度（Fire Event）订阅者注册到调度中心的处理代码。\n\n<a name=\"ZUPz3\"></a>\n### 从vue源码解读观察者模式\n> [https://github.com/vuejs/vue/tree/dev/src/core/observer](https://github.com/vuejs/vue/tree/dev/src/core/observer)\n> [https://blog.csdn.net/github_36369819/article/details/79201314](https://blog.csdn.net/github_36369819/article/details/79201314)\n\n","slug":"设计模式-观察者与发布订阅模式","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wy0041r2ufgqlm9wjc","content":"<p><a name=\"xFhxr\"></a></p>\n<h3 id=\"观察者模式\"><a href=\"#观察者模式\" class=\"headerlink\" title=\"观察者模式\"></a>观察者模式</h3><p>观察者模式定义了对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知，并自动更新。观察者模式属于行为型模式，行为型模式关注的是对象之间的通讯，观察者模式就是观察者和被观察者之间的通讯。</p>\n<span id=\"more\"></span>\n\n<p><a name=\"JARrz\"></a></p>\n<h3 id=\"发布-订阅模式\"><a href=\"#发布-订阅模式\" class=\"headerlink\" title=\"发布-订阅模式\"></a>发布-订阅模式</h3><p>观察者模式有一个别名叫“发布-订阅模式”，或者说是“订阅-发布模式”，订阅者和订阅目标是联系在一起的，当订阅目标发生改变时，逐个通知订阅者。我们可以用报纸期刊的订阅来形象的说明，当你订阅了一份报纸，每天都会有一份最新的报纸送到你手上，有多少人订阅报纸，报社就会发多少份报纸，报社和订报纸的客户就是上面文章开头所说的“一对多”的依赖关系。</p>\n<p>在现在的发布订阅模式中，称为发布者的消息发送者不会将消息直接发送给订阅者，这意味着发布者和订阅者不知道彼此的存在。在发布者和订阅者之间存在第三个组件，称为消息代理或调度中心或中间件，它维持着发布者和订阅者之间的联系，过滤所有发布者传入的消息并相应地分发它们给订阅者。</p>\n<p>举一个例子，你在微博上关注了A，同时其他很多人也关注了A，那么当A发布动态的时候，微博就会为你们推送这条动态。A就是发布者，你是订阅者，微博就是调度中心，你和A是没有直接的消息往来的，全是通过微博来协调的（你的关注，A的发布动态）。</p>\n<p><a name=\"VBliz\"></a></p>\n<h3 id=\"二者之间的区别\"><a href=\"#二者之间的区别\" class=\"headerlink\" title=\"二者之间的区别\"></a>二者之间的区别</h3><p><img src=\"https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.png\" alt=\"设计模式-观察者.png\"></p>\n<p><strong>观察者模式：</strong>观察者（Observer）直接订阅（Subscribe）主题（Subject），而当主题被激活的时候，会触发（Fire Event）观察者里的事件。</p>\n<p><strong>发布订阅模式：</strong>订阅者（Subscriber）把自己想订阅的事件注册（Subscribe）到调度中心（Topic），当发布者（Publisher）发布该事件（Publish topic）到调度中心，也就是该事件触发时，由调度中心统一调度（Fire Event）订阅者注册到调度中心的处理代码。</p>\n<p><a name=\"ZUPz3\"></a></p>\n<h3 id=\"从vue源码解读观察者模式\"><a href=\"#从vue源码解读观察者模式\" class=\"headerlink\" title=\"从vue源码解读观察者模式\"></a>从vue源码解读观察者模式</h3><blockquote>\n<p><a href=\"https://github.com/vuejs/vue/tree/dev/src/core/observer\">https://github.com/vuejs/vue/tree/dev/src/core/observer</a><br><a href=\"https://blog.csdn.net/github_36369819/article/details/79201314\">https://blog.csdn.net/github_36369819&#x2F;article&#x2F;details&#x2F;79201314</a></p>\n</blockquote>\n","site":{"data":{}},"length":913,"excerpt":"<p><a name=\"xFhxr\"></a></p>\n<h3 id=\"观察者模式\"><a href=\"#观察者模式\" class=\"headerlink\" title=\"观察者模式\"></a>观察者模式</h3><p>观察者模式定义了对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都将得到通知，并自动更新。观察者模式属于行为型模式，行为型模式关注的是对象之间的通讯，观察者模式就是观察者和被观察者之间的通讯。</p>","more":"<p><a name=\"JARrz\"></a></p>\n<h3 id=\"发布-订阅模式\"><a href=\"#发布-订阅模式\" class=\"headerlink\" title=\"发布-订阅模式\"></a>发布-订阅模式</h3><p>观察者模式有一个别名叫“发布-订阅模式”，或者说是“订阅-发布模式”，订阅者和订阅目标是联系在一起的，当订阅目标发生改变时，逐个通知订阅者。我们可以用报纸期刊的订阅来形象的说明，当你订阅了一份报纸，每天都会有一份最新的报纸送到你手上，有多少人订阅报纸，报社就会发多少份报纸，报社和订报纸的客户就是上面文章开头所说的“一对多”的依赖关系。</p>\n<p>在现在的发布订阅模式中，称为发布者的消息发送者不会将消息直接发送给订阅者，这意味着发布者和订阅者不知道彼此的存在。在发布者和订阅者之间存在第三个组件，称为消息代理或调度中心或中间件，它维持着发布者和订阅者之间的联系，过滤所有发布者传入的消息并相应地分发它们给订阅者。</p>\n<p>举一个例子，你在微博上关注了A，同时其他很多人也关注了A，那么当A发布动态的时候，微博就会为你们推送这条动态。A就是发布者，你是订阅者，微博就是调度中心，你和A是没有直接的消息往来的，全是通过微博来协调的（你的关注，A的发布动态）。</p>\n<p><a name=\"VBliz\"></a></p>\n<h3 id=\"二者之间的区别\"><a href=\"#二者之间的区别\" class=\"headerlink\" title=\"二者之间的区别\"></a>二者之间的区别</h3><p><img src=\"https://picture-1256757196.cos.ap-chengdu.myqcloud.com/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.png\" alt=\"设计模式-观察者.png\"></p>\n<p><strong>观察者模式：</strong>观察者（Observer）直接订阅（Subscribe）主题（Subject），而当主题被激活的时候，会触发（Fire Event）观察者里的事件。</p>\n<p><strong>发布订阅模式：</strong>订阅者（Subscriber）把自己想订阅的事件注册（Subscribe）到调度中心（Topic），当发布者（Publisher）发布该事件（Publish topic）到调度中心，也就是该事件触发时，由调度中心统一调度（Fire Event）订阅者注册到调度中心的处理代码。</p>\n<p><a name=\"ZUPz3\"></a></p>\n<h3 id=\"从vue源码解读观察者模式\"><a href=\"#从vue源码解读观察者模式\" class=\"headerlink\" title=\"从vue源码解读观察者模式\"></a>从vue源码解读观察者模式</h3><blockquote>\n<p><a href=\"https://github.com/vuejs/vue/tree/dev/src/core/observer\">https://github.com/vuejs/vue/tree/dev/src/core/observer</a><br><a href=\"https://blog.csdn.net/github_36369819/article/details/79201314\">https://blog.csdn.net/github_36369819&#x2F;article&#x2F;details&#x2F;79201314</a></p>\n</blockquote>"},{"title":"简单的JQ-alert插件","date":"2017-06-20T16:00:00.000Z","description":"最简单的alert插件","_content":"### 重写window.alert\n***\n其实主要还是想多练手，毕竟熟能生巧，看得多写得多了自然会的就多了。\n理解理解这简单的JQ插件思路，alert为例。\n<!-- more -->\n对于alert基本上前端汪都不会陌生了，简单的理解下封装的思路吧，虽然这个插件也非常简单，之前在职的公司在用的，大部分copy下来了。\n看了一遍之前的代码，利用js和css就可以了，插件封装的思想跟JQ插件一致，用extend函数整合用户传入的参数对象，然后实现定制alert。\n插件中先把弹窗dom结构写好，用append添加到body节点下，绑定按钮回调事件，根据调用参数动态的改变alert弹窗的宽高这些，非常实用。\n```javascript\n\twindow.alert = function(options){\n\t\tif(typeof(options) != 'object'){\n\t\t\toptions = {\n\t\t\t\tcon:options\n\t\t\t}\n\t\t}\n\t\tvar opts = $.extend({\n\t\t\ttit:'标题',\n\t\t\tcon:'内容',\n\t\t\tbtn:['确定'],\n\t\t\twidth:260,\n\t\t\theight:225,\n\t\t\ttClose: true, \n\t\t\tfClose: true, \n\t\t\tok: function() {}, \n\t\t\tno: function() {} \n\t\t},options);\n\t\tvar btnStr = '',\n\t\t\tbtnCount = opts.btn.length,\n\t\t\tbtnWidth = opts.width / btnCount;\n\t\tfor(var i = 0; i < btnCount; i++) {\n\t\t\tif(i == 0) {\n\t\t\t\tbtnStr += '<div style=\"display:inline-block;\"><button class=\"alert-btn trueBtn\" id=\"alertTrue\" style=\"width:' + btnWidth + 'px;\">' + opts.btn[i] + '</button></div >';\n\t\t\t} else {\n\t\t\t\tbtnStr = '<div style=\"display:inline-block;\"><button class=\"alert-btn falseBtn\" id=\"alertFalse\" style=\"width:' + btnWidth + 'px;\">' + opts.btn[i] + '</button></div >' + btnStr;\n\t\t\t}\n\t\t}\n\t \tvar alertStr = '' +\n\t\t'<div class=\"layout alert-layout\" id=\"alert-layout\">' +\n\t\t'<div class=\"alert\" style=\"width:' + opts.width + 'px; height:' + opts.height + 'px;\">' +\n\t\t'<div class=\"alert-tit\">' + opts.tit + '</div>' +\n\t\t'<section class=\"alert-con\" style=\"width:' + opts.width + 'px; height:' + (opts.height-65) + 'px;\">' + opts.con + '</section>' +\n\t\t'<div class=\"alert-btn-group\">' + btnStr + '</div>' +\n\t\t'</div>' +\n\t\t'</div>';\n\t\t$('body').append(alertStr);\n\t\t$('#alertTrue').click(function() {\n\t\t\tif(opts.tClose) {\n\t\t\t\talertClose();\n\t\t\t}\n\t\t\topts.ok();\n\t\t});\n\t\t$('#alertFalse').click(function() {\n\t\t\tif(opts.fClose) {\n\t\t\t\talertClose();\n\t\t\t}\n\t\t\topts.no();\n\t\t});\n\t\tfunction alertClose() {\n\t\t\t$('#alert-layout').remove();\n\t\t}\n\t}\n\t\n\talert({\n\t\ttit:'练习封装alert',\n\t\tcon:'点击OK跳转至blog',\n\t\tbtn:['OK','NO'],\n\t\tok:function(){\n\t\t\tlocation.href = 'https://tanelmer.github.io'\n\t\t}\n\t});\n```","source":"_posts/重写浏览器alert.md","raw":"---\ntitle: 简单的JQ-alert插件\ndate: 2017-06-21\ncategories: [前端,javascript]\ntags: [JavaScript]\ndescription: 最简单的alert插件\n---\n### 重写window.alert\n***\n其实主要还是想多练手，毕竟熟能生巧，看得多写得多了自然会的就多了。\n理解理解这简单的JQ插件思路，alert为例。\n<!-- more -->\n对于alert基本上前端汪都不会陌生了，简单的理解下封装的思路吧，虽然这个插件也非常简单，之前在职的公司在用的，大部分copy下来了。\n看了一遍之前的代码，利用js和css就可以了，插件封装的思想跟JQ插件一致，用extend函数整合用户传入的参数对象，然后实现定制alert。\n插件中先把弹窗dom结构写好，用append添加到body节点下，绑定按钮回调事件，根据调用参数动态的改变alert弹窗的宽高这些，非常实用。\n```javascript\n\twindow.alert = function(options){\n\t\tif(typeof(options) != 'object'){\n\t\t\toptions = {\n\t\t\t\tcon:options\n\t\t\t}\n\t\t}\n\t\tvar opts = $.extend({\n\t\t\ttit:'标题',\n\t\t\tcon:'内容',\n\t\t\tbtn:['确定'],\n\t\t\twidth:260,\n\t\t\theight:225,\n\t\t\ttClose: true, \n\t\t\tfClose: true, \n\t\t\tok: function() {}, \n\t\t\tno: function() {} \n\t\t},options);\n\t\tvar btnStr = '',\n\t\t\tbtnCount = opts.btn.length,\n\t\t\tbtnWidth = opts.width / btnCount;\n\t\tfor(var i = 0; i < btnCount; i++) {\n\t\t\tif(i == 0) {\n\t\t\t\tbtnStr += '<div style=\"display:inline-block;\"><button class=\"alert-btn trueBtn\" id=\"alertTrue\" style=\"width:' + btnWidth + 'px;\">' + opts.btn[i] + '</button></div >';\n\t\t\t} else {\n\t\t\t\tbtnStr = '<div style=\"display:inline-block;\"><button class=\"alert-btn falseBtn\" id=\"alertFalse\" style=\"width:' + btnWidth + 'px;\">' + opts.btn[i] + '</button></div >' + btnStr;\n\t\t\t}\n\t\t}\n\t \tvar alertStr = '' +\n\t\t'<div class=\"layout alert-layout\" id=\"alert-layout\">' +\n\t\t'<div class=\"alert\" style=\"width:' + opts.width + 'px; height:' + opts.height + 'px;\">' +\n\t\t'<div class=\"alert-tit\">' + opts.tit + '</div>' +\n\t\t'<section class=\"alert-con\" style=\"width:' + opts.width + 'px; height:' + (opts.height-65) + 'px;\">' + opts.con + '</section>' +\n\t\t'<div class=\"alert-btn-group\">' + btnStr + '</div>' +\n\t\t'</div>' +\n\t\t'</div>';\n\t\t$('body').append(alertStr);\n\t\t$('#alertTrue').click(function() {\n\t\t\tif(opts.tClose) {\n\t\t\t\talertClose();\n\t\t\t}\n\t\t\topts.ok();\n\t\t});\n\t\t$('#alertFalse').click(function() {\n\t\t\tif(opts.fClose) {\n\t\t\t\talertClose();\n\t\t\t}\n\t\t\topts.no();\n\t\t});\n\t\tfunction alertClose() {\n\t\t\t$('#alert-layout').remove();\n\t\t}\n\t}\n\t\n\talert({\n\t\ttit:'练习封装alert',\n\t\tcon:'点击OK跳转至blog',\n\t\tbtn:['OK','NO'],\n\t\tok:function(){\n\t\t\tlocation.href = 'https://tanelmer.github.io'\n\t\t}\n\t});\n```","slug":"重写浏览器alert","published":1,"updated":"2024-01-02T11:59:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clup4a7wy0044r2uf2vvx3c4b","content":"<h3 id=\"重写window-alert\"><a href=\"#重写window-alert\" class=\"headerlink\" title=\"重写window.alert\"></a>重写window.alert</h3><hr>\n<p>其实主要还是想多练手，毕竟熟能生巧，看得多写得多了自然会的就多了。<br>理解理解这简单的JQ插件思路，alert为例。</p>\n<span id=\"more\"></span>\n<p>对于alert基本上前端汪都不会陌生了，简单的理解下封装的思路吧，虽然这个插件也非常简单，之前在职的公司在用的，大部分copy下来了。<br>看了一遍之前的代码，利用js和css就可以了，插件封装的思想跟JQ插件一致，用extend函数整合用户传入的参数对象，然后实现定制alert。<br>插件中先把弹窗dom结构写好，用append添加到body节点下，绑定按钮回调事件，根据调用参数动态的改变alert弹窗的宽高这些，非常实用。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">alert</span> = <span class=\"keyword\">function</span>(<span class=\"params\">options</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"title function_\">typeof</span>(options) != <span class=\"string\">&#x27;object&#x27;</span>)&#123;</span><br><span class=\"line\">\t\toptions = &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">con</span>:options</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> opts = $.<span class=\"title function_\">extend</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">tit</span>:<span class=\"string\">&#x27;标题&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">con</span>:<span class=\"string\">&#x27;内容&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">btn</span>:[<span class=\"string\">&#x27;确定&#x27;</span>],</span><br><span class=\"line\">\t\t<span class=\"attr\">width</span>:<span class=\"number\">260</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">height</span>:<span class=\"number\">225</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">tClose</span>: <span class=\"literal\">true</span>, </span><br><span class=\"line\">\t\t<span class=\"attr\">fClose</span>: <span class=\"literal\">true</span>, </span><br><span class=\"line\">\t\t<span class=\"attr\">ok</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;, </span><br><span class=\"line\">\t\t<span class=\"attr\">no</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125; </span><br><span class=\"line\">\t&#125;,options);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> btnStr = <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">\t\tbtnCount = opts.<span class=\"property\">btn</span>.<span class=\"property\">length</span>,</span><br><span class=\"line\">\t\tbtnWidth = opts.<span class=\"property\">width</span> / btnCount;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; btnCount; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tbtnStr += <span class=\"string\">&#x27;&lt;div style=&quot;display:inline-block;&quot;&gt;&lt;button class=&quot;alert-btn trueBtn&quot; id=&quot;alertTrue&quot; style=&quot;width:&#x27;</span> + btnWidth + <span class=\"string\">&#x27;px;&quot;&gt;&#x27;</span> + opts.<span class=\"property\">btn</span>[i] + <span class=\"string\">&#x27;&lt;/button&gt;&lt;/div &gt;&#x27;</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tbtnStr = <span class=\"string\">&#x27;&lt;div style=&quot;display:inline-block;&quot;&gt;&lt;button class=&quot;alert-btn falseBtn&quot; id=&quot;alertFalse&quot; style=&quot;width:&#x27;</span> + btnWidth + <span class=\"string\">&#x27;px;&quot;&gt;&#x27;</span> + opts.<span class=\"property\">btn</span>[i] + <span class=\"string\">&#x27;&lt;/button&gt;&lt;/div &gt;&#x27;</span> + btnStr;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"> \t<span class=\"keyword\">var</span> alertStr = <span class=\"string\">&#x27;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;div class=&quot;layout alert-layout&quot; id=&quot;alert-layout&quot;&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;div class=&quot;alert&quot; style=&quot;width:&#x27;</span> + opts.<span class=\"property\">width</span> + <span class=\"string\">&#x27;px; height:&#x27;</span> + opts.<span class=\"property\">height</span> + <span class=\"string\">&#x27;px;&quot;&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;div class=&quot;alert-tit&quot;&gt;&#x27;</span> + opts.<span class=\"property\">tit</span> + <span class=\"string\">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;section class=&quot;alert-con&quot; style=&quot;width:&#x27;</span> + opts.<span class=\"property\">width</span> + <span class=\"string\">&#x27;px; height:&#x27;</span> + (opts.<span class=\"property\">height</span>-<span class=\"number\">65</span>) + <span class=\"string\">&#x27;px;&quot;&gt;&#x27;</span> + opts.<span class=\"property\">con</span> + <span class=\"string\">&#x27;&lt;/section&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;div class=&quot;alert-btn-group&quot;&gt;&#x27;</span> + btnStr + <span class=\"string\">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class=\"line\">\t$(<span class=\"string\">&#x27;body&#x27;</span>).<span class=\"title function_\">append</span>(alertStr);</span><br><span class=\"line\">\t$(<span class=\"string\">&#x27;#alertTrue&#x27;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(opts.<span class=\"property\">tClose</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"title function_\">alertClose</span>();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\topts.<span class=\"title function_\">ok</span>();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\t$(<span class=\"string\">&#x27;#alertFalse&#x27;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(opts.<span class=\"property\">fClose</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"title function_\">alertClose</span>();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\topts.<span class=\"title function_\">no</span>();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">alertClose</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t$(<span class=\"string\">&#x27;#alert-layout&#x27;</span>).<span class=\"title function_\">remove</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">tit</span>:<span class=\"string\">&#x27;练习封装alert&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">con</span>:<span class=\"string\">&#x27;点击OK跳转至blog&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">btn</span>:[<span class=\"string\">&#x27;OK&#x27;</span>,<span class=\"string\">&#x27;NO&#x27;</span>],</span><br><span class=\"line\">\t<span class=\"attr\">ok</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\tlocation.<span class=\"property\">href</span> = <span class=\"string\">&#x27;https://tanelmer.github.io&#x27;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":2520,"excerpt":"<h3 id=\"重写window-alert\"><a href=\"#重写window-alert\" class=\"headerlink\" title=\"重写window.alert\"></a>重写window.alert</h3><hr>\n<p>其实主要还是想多练手，毕竟熟能生巧，看得多写得多了自然会的就多了。<br>理解理解这简单的JQ插件思路，alert为例。</p>","more":"<p>对于alert基本上前端汪都不会陌生了，简单的理解下封装的思路吧，虽然这个插件也非常简单，之前在职的公司在用的，大部分copy下来了。<br>看了一遍之前的代码，利用js和css就可以了，插件封装的思想跟JQ插件一致，用extend函数整合用户传入的参数对象，然后实现定制alert。<br>插件中先把弹窗dom结构写好，用append添加到body节点下，绑定按钮回调事件，根据调用参数动态的改变alert弹窗的宽高这些，非常实用。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">alert</span> = <span class=\"keyword\">function</span>(<span class=\"params\">options</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"title function_\">typeof</span>(options) != <span class=\"string\">&#x27;object&#x27;</span>)&#123;</span><br><span class=\"line\">\t\toptions = &#123;</span><br><span class=\"line\">\t\t\t<span class=\"attr\">con</span>:options</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> opts = $.<span class=\"title function_\">extend</span>(&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">tit</span>:<span class=\"string\">&#x27;标题&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">con</span>:<span class=\"string\">&#x27;内容&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">btn</span>:[<span class=\"string\">&#x27;确定&#x27;</span>],</span><br><span class=\"line\">\t\t<span class=\"attr\">width</span>:<span class=\"number\">260</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">height</span>:<span class=\"number\">225</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">tClose</span>: <span class=\"literal\">true</span>, </span><br><span class=\"line\">\t\t<span class=\"attr\">fClose</span>: <span class=\"literal\">true</span>, </span><br><span class=\"line\">\t\t<span class=\"attr\">ok</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125;, </span><br><span class=\"line\">\t\t<span class=\"attr\">no</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;&#125; </span><br><span class=\"line\">\t&#125;,options);</span><br><span class=\"line\">\t<span class=\"keyword\">var</span> btnStr = <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">\t\tbtnCount = opts.<span class=\"property\">btn</span>.<span class=\"property\">length</span>,</span><br><span class=\"line\">\t\tbtnWidth = opts.<span class=\"property\">width</span> / btnCount;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; btnCount; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tbtnStr += <span class=\"string\">&#x27;&lt;div style=&quot;display:inline-block;&quot;&gt;&lt;button class=&quot;alert-btn trueBtn&quot; id=&quot;alertTrue&quot; style=&quot;width:&#x27;</span> + btnWidth + <span class=\"string\">&#x27;px;&quot;&gt;&#x27;</span> + opts.<span class=\"property\">btn</span>[i] + <span class=\"string\">&#x27;&lt;/button&gt;&lt;/div &gt;&#x27;</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tbtnStr = <span class=\"string\">&#x27;&lt;div style=&quot;display:inline-block;&quot;&gt;&lt;button class=&quot;alert-btn falseBtn&quot; id=&quot;alertFalse&quot; style=&quot;width:&#x27;</span> + btnWidth + <span class=\"string\">&#x27;px;&quot;&gt;&#x27;</span> + opts.<span class=\"property\">btn</span>[i] + <span class=\"string\">&#x27;&lt;/button&gt;&lt;/div &gt;&#x27;</span> + btnStr;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"> \t<span class=\"keyword\">var</span> alertStr = <span class=\"string\">&#x27;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;div class=&quot;layout alert-layout&quot; id=&quot;alert-layout&quot;&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;div class=&quot;alert&quot; style=&quot;width:&#x27;</span> + opts.<span class=\"property\">width</span> + <span class=\"string\">&#x27;px; height:&#x27;</span> + opts.<span class=\"property\">height</span> + <span class=\"string\">&#x27;px;&quot;&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;div class=&quot;alert-tit&quot;&gt;&#x27;</span> + opts.<span class=\"property\">tit</span> + <span class=\"string\">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;section class=&quot;alert-con&quot; style=&quot;width:&#x27;</span> + opts.<span class=\"property\">width</span> + <span class=\"string\">&#x27;px; height:&#x27;</span> + (opts.<span class=\"property\">height</span>-<span class=\"number\">65</span>) + <span class=\"string\">&#x27;px;&quot;&gt;&#x27;</span> + opts.<span class=\"property\">con</span> + <span class=\"string\">&#x27;&lt;/section&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;div class=&quot;alert-btn-group&quot;&gt;&#x27;</span> + btnStr + <span class=\"string\">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;/div&gt;&#x27;</span> +</span><br><span class=\"line\">\t<span class=\"string\">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class=\"line\">\t$(<span class=\"string\">&#x27;body&#x27;</span>).<span class=\"title function_\">append</span>(alertStr);</span><br><span class=\"line\">\t$(<span class=\"string\">&#x27;#alertTrue&#x27;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(opts.<span class=\"property\">tClose</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"title function_\">alertClose</span>();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\topts.<span class=\"title function_\">ok</span>();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\t$(<span class=\"string\">&#x27;#alertFalse&#x27;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(opts.<span class=\"property\">fClose</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"title function_\">alertClose</span>();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\topts.<span class=\"title function_\">no</span>();</span><br><span class=\"line\">\t&#125;);</span><br><span class=\"line\">\t<span class=\"keyword\">function</span> <span class=\"title function_\">alertClose</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">\t\t$(<span class=\"string\">&#x27;#alert-layout&#x27;</span>).<span class=\"title function_\">remove</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">tit</span>:<span class=\"string\">&#x27;练习封装alert&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">con</span>:<span class=\"string\">&#x27;点击OK跳转至blog&#x27;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">btn</span>:[<span class=\"string\">&#x27;OK&#x27;</span>,<span class=\"string\">&#x27;NO&#x27;</span>],</span><br><span class=\"line\">\t<span class=\"attr\">ok</span>:<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">\t\tlocation.<span class=\"property\">href</span> = <span class=\"string\">&#x27;https://tanelmer.github.io&#x27;</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>"},{"title":"2024 总结 | 来影 - 知足常乐","date":"2025-02-23T16:00:00.000Z","description":"年终总结~","top":null,"_content":"\n## 前言\n知足常乐并非安于现状，不思进取，而是在努力追求更好的同时，也能珍惜拥有，享受当下，保持内心的平和与喜悦。  \n**关键词：全情投入**\n> “鹪鹩巢于深林，不过一枝；偃鼠饮河，不过满腹。”——生命的丰盛，不在占有的多少，而在心境的宽广。  \n<!-- more -->\n> review下去年的Flag\n> 1. 减重10kg，完成度（0）\n> 2. 工作上，选择正确率80%。完成度（100%）\n> 3. 爱好上，深入音乐。完成度（10%）\n## 生活篇 \n- 今年，其宝宝她来了。角色发生了变化，身上担子又多了一些。  \n小家伙晚上特别磨人，但是看到她笑的时候，一切都值得了，可能就像哪些调研报告说的一样，做父母之后，人的大脑有块情感、育儿的区域会被激活，激活之后永远不会关闭或停止，大脑会根据新的角色和经验进行调整。\n<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/c5adbbb43a2c7d163936e3044d5c2184.JPG\" alt=\"其宝宝\">\n- 做了一些创业或投资的尝试，线上自媒体效果不佳，线下工厂销量较差，目前看起来不尽人意，但尽人事，听天命~，今年希望找更多的自己行业内的事情做吧，拥抱ai。跨行业成本和信息差都太大了。\n- 自身健康方面，公司的福利体检还没去做，但猜想会有一堆异常，毕竟去年一年猛猛加班，运动基本就停了，等体检报告出来之后好好针对性修复下，特别是BMI，身体是革命的本钱得重视。\n- 精神粮食缺失，内心逐渐迷失，放松的事情好像也只有打打游戏了，其他的活动都没有了以前的激情~\n  \n## 工作篇\n- 重新回到前端，专注前端团队建设培养，兼职pm角色梳理业产研规范协调流程<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/A974DFAD-1577-48E7-A39B-E9AF23517049.png\" alt=\"协同流程\">\n- 去年的核心工作，打造“安诊儿”明星产品。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/IMG_0740.JPG\" alt=\"安诊儿\">\n- 蚂蚁技术链路打通，rax迁移samllfish，云效迁移雨燕。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/595D0FF3-51D3-49EE-825A-12F9918B1D3F.png\" alt=\"协同流程\">\n- 去年一整年强度变化较大，希望今年能相对wlb。\n  \n## Flag\n1. 想清楚、规划下35岁前的人生应该是怎样的？\n2. 对于认定的事情，付诸实际行动，忌空想。\n3. 拥抱AI~","source":"_posts/2024 总结 | 来影 - 知足常乐.md","raw":"---\ntitle: 2024 总结 | 来影 - 知足常乐\ndate: 2025-02-24\ncategories: 生活随笔\ntags: [随笔]\ndescription: 年终总结~\ntop:\n---\n\n## 前言\n知足常乐并非安于现状，不思进取，而是在努力追求更好的同时，也能珍惜拥有，享受当下，保持内心的平和与喜悦。  \n**关键词：全情投入**\n> “鹪鹩巢于深林，不过一枝；偃鼠饮河，不过满腹。”——生命的丰盛，不在占有的多少，而在心境的宽广。  \n<!-- more -->\n> review下去年的Flag\n> 1. 减重10kg，完成度（0）\n> 2. 工作上，选择正确率80%。完成度（100%）\n> 3. 爱好上，深入音乐。完成度（10%）\n## 生活篇 \n- 今年，其宝宝她来了。角色发生了变化，身上担子又多了一些。  \n小家伙晚上特别磨人，但是看到她笑的时候，一切都值得了，可能就像哪些调研报告说的一样，做父母之后，人的大脑有块情感、育儿的区域会被激活，激活之后永远不会关闭或停止，大脑会根据新的角色和经验进行调整。\n<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/c5adbbb43a2c7d163936e3044d5c2184.JPG\" alt=\"其宝宝\">\n- 做了一些创业或投资的尝试，线上自媒体效果不佳，线下工厂销量较差，目前看起来不尽人意，但尽人事，听天命~，今年希望找更多的自己行业内的事情做吧，拥抱ai。跨行业成本和信息差都太大了。\n- 自身健康方面，公司的福利体检还没去做，但猜想会有一堆异常，毕竟去年一年猛猛加班，运动基本就停了，等体检报告出来之后好好针对性修复下，特别是BMI，身体是革命的本钱得重视。\n- 精神粮食缺失，内心逐渐迷失，放松的事情好像也只有打打游戏了，其他的活动都没有了以前的激情~\n  \n## 工作篇\n- 重新回到前端，专注前端团队建设培养，兼职pm角色梳理业产研规范协调流程<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/A974DFAD-1577-48E7-A39B-E9AF23517049.png\" alt=\"协同流程\">\n- 去年的核心工作，打造“安诊儿”明星产品。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/IMG_0740.JPG\" alt=\"安诊儿\">\n- 蚂蚁技术链路打通，rax迁移samllfish，云效迁移雨燕。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/595D0FF3-51D3-49EE-825A-12F9918B1D3F.png\" alt=\"协同流程\">\n- 去年一整年强度变化较大，希望今年能相对wlb。\n  \n## Flag\n1. 想清楚、规划下35岁前的人生应该是怎样的？\n2. 对于认定的事情，付诸实际行动，忌空想。\n3. 拥抱AI~","slug":"2024 总结 | 来影 - 知足常乐","published":1,"updated":"2025-02-26T03:40:51.798Z","_id":"cm7k31ax20000fiufcwng860y","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>知足常乐并非安于现状，不思进取，而是在努力追求更好的同时，也能珍惜拥有，享受当下，保持内心的平和与喜悦。<br><strong>关键词：全情投入</strong></p>\n<blockquote>\n<p>“鹪鹩巢于深林，不过一枝；偃鼠饮河，不过满腹。”——生命的丰盛，不在占有的多少，而在心境的宽广。  </p>\n</blockquote>\n<span id=\"more\"></span>\n<blockquote>\n<p>review下去年的Flag</p>\n<ol>\n<li>减重10kg，完成度（0）</li>\n<li>工作上，选择正确率80%。完成度（100%）</li>\n<li>爱好上，深入音乐。完成度（10%）</li>\n</ol>\n</blockquote>\n<h2 id=\"生活篇\"><a href=\"#生活篇\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h2><ul>\n<li>今年，其宝宝她来了。角色发生了变化，身上担子又多了一些。<br>小家伙晚上特别磨人，但是看到她笑的时候，一切都值得了，可能就像哪些调研报告说的一样，做父母之后，人的大脑有块情感、育儿的区域会被激活，激活之后永远不会关闭或停止，大脑会根据新的角色和经验进行调整。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/c5adbbb43a2c7d163936e3044d5c2184.JPG\" alt=\"其宝宝\"></li>\n<li>做了一些创业或投资的尝试，线上自媒体效果不佳，线下工厂销量较差，目前看起来不尽人意，但尽人事，听天命~，今年希望找更多的自己行业内的事情做吧，拥抱ai。跨行业成本和信息差都太大了。</li>\n<li>自身健康方面，公司的福利体检还没去做，但猜想会有一堆异常，毕竟去年一年猛猛加班，运动基本就停了，等体检报告出来之后好好针对性修复下，特别是BMI，身体是革命的本钱得重视。</li>\n<li>精神粮食缺失，内心逐渐迷失，放松的事情好像也只有打打游戏了，其他的活动都没有了以前的激情~</li>\n</ul>\n<h2 id=\"工作篇\"><a href=\"#工作篇\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h2><ul>\n<li>重新回到前端，专注前端团队建设培养，兼职pm角色梳理业产研规范协调流程<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/A974DFAD-1577-48E7-A39B-E9AF23517049.png\" alt=\"协同流程\"></li>\n<li>去年的核心工作，打造“安诊儿”明星产品。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/IMG_0740.JPG\" alt=\"安诊儿\"></li>\n<li>蚂蚁技术链路打通，rax迁移samllfish，云效迁移雨燕。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/595D0FF3-51D3-49EE-825A-12F9918B1D3F.png\" alt=\"协同流程\"></li>\n<li>去年一整年强度变化较大，希望今年能相对wlb。</li>\n</ul>\n<h2 id=\"Flag\"><a href=\"#Flag\" class=\"headerlink\" title=\"Flag\"></a>Flag</h2><ol>\n<li>想清楚、规划下35岁前的人生应该是怎样的？</li>\n<li>对于认定的事情，付诸实际行动，忌空想。</li>\n<li>拥抱AI~</li>\n</ol>\n","site":{"data":{}},"length":686,"excerpt":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>知足常乐并非安于现状，不思进取，而是在努力追求更好的同时，也能珍惜拥有，享受当下，保持内心的平和与喜悦。<br><strong>关键词：全情投入</strong></p>\n<blockquote>\n<p>“鹪鹩巢于深林，不过一枝；偃鼠饮河，不过满腹。”——生命的丰盛，不在占有的多少，而在心境的宽广。  </p>\n</blockquote>","more":"<blockquote>\n<p>review下去年的Flag</p>\n<ol>\n<li>减重10kg，完成度（0）</li>\n<li>工作上，选择正确率80%。完成度（100%）</li>\n<li>爱好上，深入音乐。完成度（10%）</li>\n</ol>\n</blockquote>\n<h2 id=\"生活篇\"><a href=\"#生活篇\" class=\"headerlink\" title=\"生活篇\"></a>生活篇</h2><ul>\n<li>今年，其宝宝她来了。角色发生了变化，身上担子又多了一些。<br>小家伙晚上特别磨人，但是看到她笑的时候，一切都值得了，可能就像哪些调研报告说的一样，做父母之后，人的大脑有块情感、育儿的区域会被激活，激活之后永远不会关闭或停止，大脑会根据新的角色和经验进行调整。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/c5adbbb43a2c7d163936e3044d5c2184.JPG\" alt=\"其宝宝\"></li>\n<li>做了一些创业或投资的尝试，线上自媒体效果不佳，线下工厂销量较差，目前看起来不尽人意，但尽人事，听天命~，今年希望找更多的自己行业内的事情做吧，拥抱ai。跨行业成本和信息差都太大了。</li>\n<li>自身健康方面，公司的福利体检还没去做，但猜想会有一堆异常，毕竟去年一年猛猛加班，运动基本就停了，等体检报告出来之后好好针对性修复下，特别是BMI，身体是革命的本钱得重视。</li>\n<li>精神粮食缺失，内心逐渐迷失，放松的事情好像也只有打打游戏了，其他的活动都没有了以前的激情~</li>\n</ul>\n<h2 id=\"工作篇\"><a href=\"#工作篇\" class=\"headerlink\" title=\"工作篇\"></a>工作篇</h2><ul>\n<li>重新回到前端，专注前端团队建设培养，兼职pm角色梳理业产研规范协调流程<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/A974DFAD-1577-48E7-A39B-E9AF23517049.png\" alt=\"协同流程\"></li>\n<li>去年的核心工作，打造“安诊儿”明星产品。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/IMG_0740.JPG\" alt=\"安诊儿\"></li>\n<li>蚂蚁技术链路打通，rax迁移samllfish，云效迁移雨燕。<img src=\"https://blog-1256757196.cos.ap-nanjing.myqcloud.com/595D0FF3-51D3-49EE-825A-12F9918B1D3F.png\" alt=\"协同流程\"></li>\n<li>去年一整年强度变化较大，希望今年能相对wlb。</li>\n</ul>\n<h2 id=\"Flag\"><a href=\"#Flag\" class=\"headerlink\" title=\"Flag\"></a>Flag</h2><ol>\n<li>想清楚、规划下35岁前的人生应该是怎样的？</li>\n<li>对于认定的事情，付诸实际行动，忌空想。</li>\n<li>拥抱AI~</li>\n</ol>"}],"PostAsset":[],"PostCategory":[{"post_id":"clup4a7wj0007r2ufg3x94gj2","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"clup4a7wk000fr2uf0vi07uog"},{"post_id":"clup4a7wg0001r2ufhklq25hn","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"clup4a7wl000kr2ufdid92qh2"},{"post_id":"clup4a7wj0008r2uf7i2lfc9o","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"clup4a7wl000nr2ufh23tfgzd"},{"post_id":"clup4a7wh0003r2uf1x2mgp82","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"clup4a7wm000sr2uf651u7gda"},{"post_id":"clup4a7wi0006r2ufaop3fhuh","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"clup4a7wm000ur2ufg18mceh9"},{"post_id":"clup4a7wk000er2uf2s1y9alh","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wo0017r2uf25w34100"},{"post_id":"clup4a7wo0019r2ufeihlh405","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wq001hr2ufgot6cjyx"},{"post_id":"clup4a7wp001er2uf8h5uatnm","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wq001nr2ufbz8a21uo"},{"post_id":"clup4a7wl000rr2uf9crq3i89","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wr001qr2uf3dckhlf8"},{"post_id":"clup4a7wl000rr2uf9crq3i89","category_id":"clup4a7wo001cr2uf8rd10wgk","_id":"clup4a7wr001ur2uf5msxecui"},{"post_id":"clup4a7wk000cr2ufbj9k5w7q","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wr001yr2uf1kvdbdcp"},{"post_id":"clup4a7wk000cr2ufbj9k5w7q","category_id":"clup4a7wo001cr2uf8rd10wgk","_id":"clup4a7ws0021r2ufbx518deg"},{"post_id":"clup4a7wm000tr2uf0hnpbik9","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7ws0024r2uf5pb86m3c"},{"post_id":"clup4a7wm000tr2uf0hnpbik9","category_id":"clup4a7wo001cr2uf8rd10wgk","_id":"clup4a7ws0028r2ufagr5b5qp"},{"post_id":"clup4a7wm000yr2uf48h20w4v","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7ws002cr2ufh91i06ep"},{"post_id":"clup4a7wm000yr2uf48h20w4v","category_id":"clup4a7wo001cr2uf8rd10wgk","_id":"clup4a7wt002fr2ufgooy3c08"},{"post_id":"clup4a7wn0010r2uf922bfgpt","category_id":"clup4a7ws0022r2uffiy65fop","_id":"clup4a7wt002ir2uf9v4r989g"},{"post_id":"clup4a7wn0013r2uf0s2d7a22","category_id":"clup4a7ws0022r2uffiy65fop","_id":"clup4a7wu002mr2uf0czafmzq"},{"post_id":"clup4a7wl000jr2uf04wkhpea","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wu002sr2uf5vuoarut"},{"post_id":"clup4a7wl000jr2uf04wkhpea","category_id":"clup4a7wo001cr2uf8rd10wgk","_id":"clup4a7wu002wr2ufghkn64wa"},{"post_id":"clup4a7wt002kr2ufe5pcd9z0","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wv0030r2uf6l0a82no"},{"post_id":"clup4a7wn0015r2ufc9hbgrwz","category_id":"clup4a7ws0022r2uffiy65fop","_id":"clup4a7wv0034r2uffwkyf2zr"},{"post_id":"clup4a7wu002pr2uf495g1i2s","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"clup4a7ww0038r2ufd2ow7k7b"},{"post_id":"clup4a7wu002tr2uf8jklcz03","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7ww003cr2ufe44sgem1"},{"post_id":"clup4a7wl000mr2uf7gs97qia","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7ww003fr2uf2ffk083s"},{"post_id":"clup4a7wl000mr2uf7gs97qia","category_id":"clup4a7wo001cr2uf8rd10wgk","_id":"clup4a7ww003kr2ufbw0d18q2"},{"post_id":"clup4a7wu002xr2ufauwyhf8l","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wx003nr2ufcj15caqc"},{"post_id":"clup4a7wo001br2uf8m1ve4uq","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wx003sr2uf6uk92sar"},{"post_id":"clup4a7wo001br2uf8m1ve4uq","category_id":"clup4a7wo001cr2uf8rd10wgk","_id":"clup4a7wy003vr2uf634m3dit"},{"post_id":"clup4a7wv0035r2uf7z221685","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wy0040r2ufg0qs2bno"},{"post_id":"clup4a7ww0039r2uf8hqo08dm","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wy0043r2uf9mhw19em"},{"post_id":"clup4a7ww003dr2ufenwfd08o","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"clup4a7wz0048r2ufdly296tr"},{"post_id":"clup4a7wq001gr2uf1gpufel6","category_id":"clup4a7wv0037r2uf761s7app","_id":"clup4a7wz004ar2uf64td2abv"},{"post_id":"clup4a7ww003gr2ufgflzf3zt","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wz004er2uffjsl0nol"},{"post_id":"clup4a7ww003lr2ufb7oxeke9","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"clup4a7wz004gr2ufebandg9a"},{"post_id":"clup4a7wq001lr2uf8q6icffm","category_id":"clup4a7wv0037r2uf761s7app","_id":"clup4a7wz004jr2uf7jo19hcq"},{"post_id":"clup4a7wx003or2ufdba51vva","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"clup4a7wz004mr2ufgmsz3rn4"},{"post_id":"clup4a7wx003tr2uf806j915j","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7wz004pr2ufa6g45l3s"},{"post_id":"clup4a7wx003tr2uf806j915j","category_id":"clup4a7wo001cr2uf8rd10wgk","_id":"clup4a7x0004sr2uf1d6y2kg5"},{"post_id":"clup4a7wq001mr2uf1tj1dg8w","category_id":"clup4a7wx003pr2uffrds6ozv","_id":"clup4a7x0004vr2ufb8jj3czz"},{"post_id":"clup4a7wy003wr2uffd1w5zye","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"clup4a7x0004yr2uf11qj3jdp"},{"post_id":"clup4a7wq001pr2uf3lkg12dg","category_id":"clup4a7wy003yr2uf56321set","_id":"clup4a7x00050r2uf4tf79887"},{"post_id":"clup4a7wy0044r2uf2vvx3c4b","category_id":"clup4a7wl000or2uf91jdgtdr","_id":"clup4a7x00054r2uf2keh5trf"},{"post_id":"clup4a7wy0044r2uf2vvx3c4b","category_id":"clup4a7wo001cr2uf8rd10wgk","_id":"clup4a7x00056r2uf2nz8639p"},{"post_id":"clup4a7wr001tr2uf8jznev3t","category_id":"clup4a7wz0046r2uf706jd66x","_id":"clup4a7x00059r2uff79v061d"},{"post_id":"clup4a7wr001xr2uf6ehb4abj","category_id":"clup4a7wz0046r2uf706jd66x","_id":"clup4a7x0005cr2ufbuvfap2l"},{"post_id":"clup4a7ws0020r2uffsur6x01","category_id":"clup4a7wz0046r2uf706jd66x","_id":"clup4a7x0005fr2ufaial4q2z"},{"post_id":"clup4a7ws0023r2uf3vzfcbr4","category_id":"clup4a7wz0046r2uf706jd66x","_id":"clup4a7x0005ir2ufavyg55f3"},{"post_id":"clup4a7ws0027r2ufdzso140p","category_id":"clup4a7x0004ur2uf60d718ws","_id":"clup4a7x1005kr2ufd43k73zl"},{"post_id":"clup4a7ws002br2uf6k09eu9i","category_id":"clup4a7x0004ur2uf60d718ws","_id":"clup4a7x1005nr2ufg9zg8oeg"},{"post_id":"clup4a7wt002er2uf4krm9nul","category_id":"clup4a7x00057r2uf9y9w97wf","_id":"clup4a7x1005pr2uf7ko03rp1"},{"post_id":"clup4a7wt002hr2ufd6559t99","category_id":"clup4a7x00057r2uf9y9w97wf","_id":"clup4a7x1005sr2uf6agh73bo"},{"post_id":"clup4a7wu002nr2uf950r9hnn","category_id":"clup4a7wv0037r2uf761s7app","_id":"clup4a7x1005ur2ufhk622rh5"},{"post_id":"clup4a7wv0031r2ufgvz5gke8","category_id":"clup4a7x1005or2ufbpbwc04m","_id":"clup4a7x1005xr2ufg97da19y"},{"post_id":"clup4a7wy0041r2ufgqlm9wjc","category_id":"clup4a7x1005tr2uf9gqaew4q","_id":"clup4a7x10060r2ufb1luerl4"},{"post_id":"cm7k31ax20000fiufcwng860y","category_id":"clup4a7wi0004r2uf1rz2fy43","_id":"cm7k31ax40002fiuf9gqd897h"}],"PostTag":[{"post_id":"clup4a7wj0007r2ufg3x94gj2","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"clup4a7wk000br2uf3fk6gdf2"},{"post_id":"clup4a7wg0001r2ufhklq25hn","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"clup4a7wk000dr2ufas3kacz8"},{"post_id":"clup4a7wj0008r2uf7i2lfc9o","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"clup4a7wk000ir2ufb7jp3ldv"},{"post_id":"clup4a7wh0003r2uf1x2mgp82","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"clup4a7wl000lr2uf2asj7rzt"},{"post_id":"clup4a7wi0006r2ufaop3fhuh","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"clup4a7wl000qr2uf4e822xpx"},{"post_id":"clup4a7wl000rr2uf9crq3i89","tag_id":"clup4a7wl000pr2uf0rttc8x8","_id":"clup4a7wm000xr2uff8oefkfa"},{"post_id":"clup4a7wk000cr2ufbj9k5w7q","tag_id":"clup4a7wl000pr2uf0rttc8x8","_id":"clup4a7wn000zr2uf9ikx805v"},{"post_id":"clup4a7wk000er2uf2s1y9alh","tag_id":"clup4a7wm000wr2uf6oagfrej","_id":"clup4a7wn0014r2ufd96a2cuv"},{"post_id":"clup4a7wl000jr2uf04wkhpea","tag_id":"clup4a7wl000pr2uf0rttc8x8","_id":"clup4a7wo001ar2ufgnljgigr"},{"post_id":"clup4a7wl000mr2uf7gs97qia","tag_id":"clup4a7wl000pr2uf0rttc8x8","_id":"clup4a7wp001fr2uf7yrah51d"},{"post_id":"clup4a7wo001br2uf8m1ve4uq","tag_id":"clup4a7wl000pr2uf0rttc8x8","_id":"clup4a7wq001ir2uff2p111qe"},{"post_id":"clup4a7wm000tr2uf0hnpbik9","tag_id":"clup4a7wp001dr2ufc3jt2wp7","_id":"clup4a7wr001sr2ufb1tc3rx2"},{"post_id":"clup4a7wm000tr2uf0hnpbik9","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7wr001wr2ufbvygaj55"},{"post_id":"clup4a7wm000yr2uf48h20w4v","tag_id":"clup4a7wp001dr2ufc3jt2wp7","_id":"clup4a7ws0026r2uf1ok94li4"},{"post_id":"clup4a7wm000yr2uf48h20w4v","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7ws002ar2uf9hh78pps"},{"post_id":"clup4a7wn0010r2uf922bfgpt","tag_id":"clup4a7ws0025r2ufgmgi5m90","_id":"clup4a7wu002qr2uferjq9wrs"},{"post_id":"clup4a7wn0010r2uf922bfgpt","tag_id":"clup4a7wp001dr2ufc3jt2wp7","_id":"clup4a7wu002ur2uf3a51ep9k"},{"post_id":"clup4a7wn0010r2uf922bfgpt","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7wv002yr2uf5uvw1au6"},{"post_id":"clup4a7wu002pr2uf495g1i2s","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"clup4a7wv0032r2uf3shb6fwo"},{"post_id":"clup4a7wu002tr2uf8jklcz03","tag_id":"clup4a7wl000pr2uf0rttc8x8","_id":"clup4a7wv0036r2ufhx7shich"},{"post_id":"clup4a7wu002tr2uf8jklcz03","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7ww003ar2uf83llco3w"},{"post_id":"clup4a7wn0013r2uf0s2d7a22","tag_id":"clup4a7ws0025r2ufgmgi5m90","_id":"clup4a7ww003er2uf1ezj4tpn"},{"post_id":"clup4a7wn0013r2uf0s2d7a22","tag_id":"clup4a7wp001dr2ufc3jt2wp7","_id":"clup4a7ww003ir2uf14cidpn2"},{"post_id":"clup4a7wn0013r2uf0s2d7a22","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7wx003mr2ufc7hcfmba"},{"post_id":"clup4a7ww0039r2uf8hqo08dm","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7wx003qr2ufbah83m8n"},{"post_id":"clup4a7ww003dr2ufenwfd08o","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"clup4a7wy003ur2uf9pce6246"},{"post_id":"clup4a7ww003gr2ufgflzf3zt","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7wy003xr2uffbnufl7j"},{"post_id":"clup4a7ww003lr2ufb7oxeke9","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"clup4a7wy0042r2ufbq9td91b"},{"post_id":"clup4a7wx003or2ufdba51vva","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"clup4a7wz0045r2uf44wy7mty"},{"post_id":"clup4a7wx003tr2uf806j915j","tag_id":"clup4a7wl000pr2uf0rttc8x8","_id":"clup4a7wz0049r2ufdn2kcxzh"},{"post_id":"clup4a7wn0015r2ufc9hbgrwz","tag_id":"clup4a7ws0025r2ufgmgi5m90","_id":"clup4a7wz004br2uf1m152j4i"},{"post_id":"clup4a7wn0015r2ufc9hbgrwz","tag_id":"clup4a7wp001dr2ufc3jt2wp7","_id":"clup4a7wz004fr2uf7xspcy4m"},{"post_id":"clup4a7wn0015r2ufc9hbgrwz","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7wz004hr2uf9bmqg9kx"},{"post_id":"clup4a7wy003wr2uffd1w5zye","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"clup4a7wz004lr2ufc2f0erdw"},{"post_id":"clup4a7wo0019r2ufeihlh405","tag_id":"clup4a7wl000pr2uf0rttc8x8","_id":"clup4a7wz004nr2uf1hc0bngt"},{"post_id":"clup4a7wo0019r2ufeihlh405","tag_id":"clup4a7wy003zr2uf2qguh4yv","_id":"clup4a7wz004rr2ufejnubeu5"},{"post_id":"clup4a7wy0044r2uf2vvx3c4b","tag_id":"clup4a7wl000pr2uf0rttc8x8","_id":"clup4a7x0004tr2ufa7vo590f"},{"post_id":"clup4a7wp001er2uf8h5uatnm","tag_id":"clup4a7wl000pr2uf0rttc8x8","_id":"clup4a7x0004wr2uf2jqxeqyk"},{"post_id":"clup4a7wp001er2uf8h5uatnm","tag_id":"clup4a7wy003zr2uf2qguh4yv","_id":"clup4a7x0004zr2uf4v8cchh3"},{"post_id":"clup4a7wq001gr2uf1gpufel6","tag_id":"clup4a7wz004cr2uf402n8nqg","_id":"clup4a7x00052r2uffyxm4lup"},{"post_id":"clup4a7wq001lr2uf8q6icffm","tag_id":"clup4a7wz004kr2uf67wradbk","_id":"clup4a7x00055r2ufdqimcsxu"},{"post_id":"clup4a7wq001mr2uf1tj1dg8w","tag_id":"clup4a7wz004qr2ufckas20vf","_id":"clup4a7x00058r2ufa36m5jx5"},{"post_id":"clup4a7wq001pr2uf3lkg12dg","tag_id":"clup4a7x0004xr2ufdomd0m2g","_id":"clup4a7x0005br2uf923c1qpq"},{"post_id":"clup4a7wr001tr2uf8jznev3t","tag_id":"clup4a7x00053r2uf0rfbae13","_id":"clup4a7x0005dr2uf39hr454m"},{"post_id":"clup4a7wr001xr2uf6ehb4abj","tag_id":"clup4a7x00053r2uf0rfbae13","_id":"clup4a7x0005hr2uf5egcfcz9"},{"post_id":"clup4a7ws0020r2uffsur6x01","tag_id":"clup4a7x00053r2uf0rfbae13","_id":"clup4a7x1005mr2ufhw6pgv66"},{"post_id":"clup4a7ws0023r2uf3vzfcbr4","tag_id":"clup4a7x00053r2uf0rfbae13","_id":"clup4a7x1005rr2ufep22fmrh"},{"post_id":"clup4a7ws0027r2ufdzso140p","tag_id":"clup4a7x1005qr2ufbihhd195","_id":"clup4a7x1005wr2uf2knz4tjt"},{"post_id":"clup4a7ws002br2uf6k09eu9i","tag_id":"clup4a7x1005qr2ufbihhd195","_id":"clup4a7x1005zr2uf67ox9evw"},{"post_id":"clup4a7wt002er2uf4krm9nul","tag_id":"clup4a7x1005yr2uf82bobyjc","_id":"clup4a7x10062r2uf5d0q1cgp"},{"post_id":"clup4a7wt002er2uf4krm9nul","tag_id":"clup4a7wp001dr2ufc3jt2wp7","_id":"clup4a7x10063r2ufape2bojb"},{"post_id":"clup4a7wt002er2uf4krm9nul","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7x10065r2uffs3q8uht"},{"post_id":"clup4a7wt002hr2ufd6559t99","tag_id":"clup4a7x1005yr2uf82bobyjc","_id":"clup4a7x10066r2ufab5lh7xo"},{"post_id":"clup4a7wt002hr2ufd6559t99","tag_id":"clup4a7wp001dr2ufc3jt2wp7","_id":"clup4a7x10068r2uf5nzzb7j8"},{"post_id":"clup4a7wt002hr2ufd6559t99","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7x10069r2ufd9ca9w53"},{"post_id":"clup4a7wt002kr2ufe5pcd9z0","tag_id":"clup4a7x10064r2uf6ckydp6s","_id":"clup4a7x2006br2ufgkimbnzb"},{"post_id":"clup4a7wu002nr2uf950r9hnn","tag_id":"clup4a7wz004kr2uf67wradbk","_id":"clup4a7x2006cr2uf6hqp8fkb"},{"post_id":"clup4a7wu002xr2ufauwyhf8l","tag_id":"clup4a7x1006ar2uf53113o5z","_id":"clup4a7x2006er2uf1rhrhyto"},{"post_id":"clup4a7wu002xr2ufauwyhf8l","tag_id":"clup4a7wp001dr2ufc3jt2wp7","_id":"clup4a7x2006fr2uf6ml98a46"},{"post_id":"clup4a7wu002xr2ufauwyhf8l","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7x2006hr2ufd9kgcmj5"},{"post_id":"clup4a7wv0031r2ufgvz5gke8","tag_id":"clup4a7x1006ar2uf53113o5z","_id":"clup4a7x2006ir2ufdll33xq0"},{"post_id":"clup4a7wv0035r2uf7z221685","tag_id":"clup4a7wy003zr2uf2qguh4yv","_id":"clup4a7x2006kr2ufeer68194"},{"post_id":"clup4a7wy0041r2ufgqlm9wjc","tag_id":"clup4a7x2006jr2uf82o9dh3p","_id":"clup4a7x2006lr2uf4k6v38bm"},{"post_id":"clup4a7wy0041r2ufgqlm9wjc","tag_id":"clup4a7wq001kr2ufh4n32816","_id":"clup4a7x2006mr2uf8yeddf2h"},{"post_id":"cm7k31ax20000fiufcwng860y","tag_id":"clup4a7wi0005r2ufge33hb0z","_id":"cm7k31ax40001fiufc1lj9ta8"}],"Tag":[{"name":"随笔","_id":"clup4a7wi0005r2ufge33hb0z"},{"name":"JavaScript","_id":"clup4a7wl000pr2uf0rttc8x8"},{"name":"前端安全","_id":"clup4a7wm000wr2uf6oagfrej"},{"name":"javascript","_id":"clup4a7wp001dr2ufc3jt2wp7"},{"name":"前端","_id":"clup4a7wq001kr2ufh4n32816"},{"name":"Typescript","_id":"clup4a7ws0025r2ufgmgi5m90"},{"name":"Vue","_id":"clup4a7wy003zr2uf2qguh4yv"},{"name":"博客，文章","_id":"clup4a7wz004cr2uf402n8nqg"},{"name":"hexo","_id":"clup4a7wz004kr2uf67wradbk"},{"name":"前端，工具","_id":"clup4a7wz004qr2ufckas20vf"},{"name":"OS","_id":"clup4a7x0004xr2ufdomd0m2g"},{"name":"git","_id":"clup4a7x00053r2uf0rfbae13"},{"name":"构建工具","_id":"clup4a7x1005qr2ufbihhd195"},{"name":"node","_id":"clup4a7x1005yr2uf82bobyjc"},{"name":"JavaScript，JQuery","_id":"clup4a7x10064r2uf6ckydp6s"},{"name":"HTTP","_id":"clup4a7x1006ar2uf53113o5z"},{"name":"设计模式","_id":"clup4a7x2006jr2uf82o9dh3p"}]}}